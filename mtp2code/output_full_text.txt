

Chapter 02




2Think Events: From Signals to Events
Philosophers have long argued about how objects and events represent the human experience [Quinton 1979]. Events provide a natural human-understandable abstraction of happenings in the real world, and objects are enduring entities within it. In computer science, objects have historically received most of the attention, so much so that databases have tended to emphasize persistence as a major virtue. 
With more challenging problems arising in recent times, it became essential for data management research to start considering dynamic situations, in particular data streams [Babcock et al. 2002] and the events happening within them. Luckham and Frasca [1998] championed the concept of complex event processing in data streams, an idea that was adopted by many researchers and remains popular in traditional applications that process a few well-structured data streams for making real-time decisions. More challenging problems have pushed the concept of events to something that resembles more of what we see in foundational sciences such as in philosophy and linguistics. The concept of events and applications that consider events as important entities is now an emerging trend. Westermann and Jain [2007] proposed a six-facet model to represent event structure, attributes, and causality. Xie et al. [2008] proposed a 5W1H (What, Who, Where, When, Why, How) representation to capture event attributes. In databases, Gatziu and Dittrich [1994] and Gehani et al. [1992] proposed models based on different event attributes. In most of these models (save for Westermann and Jain [2007]), causality and structure were not captured.
The term event has been used in two distinct contexts in the computing literature: physical world occurrences and the representations of those occurrences in a computer system. In different computer science domains, event-based analysis is about capturing, processing, and managing low-level events such as publish/subscribe systems and middleware solutions [Oberle 2006], complex event processing [Ericsson and Berndtsson 2007], event stream processing [Cetintemel 2003], and semantic web services [Vaculin and Sycara 2007]. In these cases, events have been identified, mostly by humans, and are available for processing. However, in most emerging cyber physical social health applications, sensors play a major role. Data streams flow into the system and mathematical models are responsible for detecting events and then combining them for higher-level decision making by humans. 
In this chapter, we discuss the different types of events that computing systems must address. The nature of events is evolving rapidly, and computing systems are required to handle not only the simple events from just a few years ago but also the combination of disparate and diverse events captured in various locations at different times via multiple sensors. Such events must be combined to track the proverbial chain that will help predict the tornado in Texas that is the result of a butterfly flapping its wings in Brazil [Lorenz 1972].

2.1Events in the Human World
The inputs to hearing, vision, and other senses are continuous, dynamic, and comprise huge amounts of data every second. Audio is clearly based on temporal changes in signal and hence is more event-oriented, but vision, which has a strong spatial component, is also oriented toward detecting temporal events, as famously discussed by Lettvin et al. [1959]. The term event perception encompasses a range of cognitive techniques for processing temporally extended dynamic information [Goldstein 2016]. In this process, our brain picks up intervals of time and distinguishes them from other intervals to form meaningful events.
Much of the peripheral vision related to early attention mechanisms is directed by events in the visual field that must be attended to by the central visual process. In most cases, the first reactions to such visual events in peripheral vision direct reflexive behavior. Moreover, our brain tends to automatically seek patterns (relations among events) [Hudson et al. 2005], consolidating multiple events and their relations as a piece of memory or knowledge.


2.2Events in the Cyber World
Events in the cyber world provide a natural abstraction of happenings in the real world that are encoded in the entities we create and share over cyberspace, such as images from a concert we recently attended or an interesting location we visited during an overseas trip, video of an important game, or infrared satellite images of a devastating tornado. All this content comes in different types of media (images, videos, text, etc.) via different data modalities created by different sensors. What they have in common is that they all capture and convey information about a real-life event. 
We can also apply events to capture and represent human experiences. Facets that need to be considered include the participation of living and non-living objects in events, temporal duration of events, spatial extension of objects, and relationships with other events (i.e., composition of events, causal relationships, and correlation relationships). We also need to consider the experiential facet, that is, the annotation of events with sensor data such as media data. 
In addition to these high-level events, we must also consider the low-level events captured in data streams that are continuously collected by different sensors. For example, the accelerometer in our smartphones continuously measures our movements, and different systems can then classify them as walking, running, climbing, or even dance movements. By analyzing specific signals, we can detect basic events of interest that could then be combined to form more meaningful events. Event detection is a hierarchical process that starts with primitive events; application-specific rules can be used to define events of increasing complexity and with more semantics associated with them.
To deal with dynamic situations, Westermann and Jain [2006] argued that events should be used as the fundamental basis in organizing and accessing information. Thus, they presented multimedia electronic chronicles (e-chronicles) as an example of emerging information systems. An e-chronicle records events using multiple sensors and provides access to the data at multiple levels of granularity. To be useful, e-chronicles should continuously process raw incoming data into meaningful data events in each stream. Taking the concept of e-chronicles to track a person s activity, Oh and Jain [2019] considered the problem of recognizing daily life events by employing the commonly used multimedia data obtained from a smartphone and wearable device and built a knowledge graph that semantically enriches daily events from low-level daily activities. They argued that although continuously and independently performing activities of daily living (ADL) are important in evaluating a person s current health state, this concept can be extended and made significantly more effective by enriching daily activities with daily events to characterize, understand, and guide lifestyle. As depicted in Figure 2.1, Oh and Jain [2019] show that a person s single daily activity, such as eating or working, cannot provide enough information about the person except for his ability or inability to perform the activity. Meanwhile, an event, such as a work dinner with a colleague at a restaurant, provides a lot more information.


2.3Why an Event Model?
In various disciplines, information about an underlying phenomenon might be acquired from different types of sensors. Rarely does a single modality provide complete knowledge of the phenomenon of interest due to the rich characteristics and complexity of that phenomenon. In order to extract insight from this data, a major challenge arises: How do we fuse these modalities into human-understandable abstraction signals that not only preserve the semantics of the underlying system but also facilitate data analysis? Data from different sources usually results in different silos that do not communicate with each other and are indexed using data-centric approaches. By organizing all the data around meaningful events, we believe we can overcome heterogeneity issues. 


Figure 2.1Enriching daily activities with daily events. D1: sleeping, D2: eating, D3: commuting, D4: working, D5: commuting, D6: eating. Events are a common concept in human daily life that represents the aggregation of activities and other attributes into meaningful semantic entities [Oh and Jain 2019].

Westermann and Jain [2007] emphasized the necessity of a common event model in multimedia systems. The authors mentioned the following benefits of having such a model:
1.Event-centric multimedia helps promote event-centric content organization throughout multimedia. 
2.Unified media indexing makes events suitable for integrating heterogeneous media collections and their metadata and also provides a unified means for indexing different media types from different applications. 
3.Common base representation reduces development efforts and realizes gains through reuse. 
4.Application integration makes it easier to create homogeneous event views based on the same event model from different applications, thus facilitating integration of applications. 
5.A common event management infrastructure forms reusable implementation platforms for event retrieval, event detection, event inference, and event propagation among applications. 
6.A common event processing language enhances development of event query languages for retrieving and correlating events, as well as event notification languages across different applications. 
7.Common event retrieval and mining environments together with a common event processing language can provide a foundation for supporting event search and mining. 


2.4An Overview of Event Models
Events are situated occurrences that incorporate complex and rich information, normally echoing the five Ws: who (subject of the event), what (object), when (temporal dimension), where (spatial dimension), and why (causes and effects). In their simplest form, event models include time- and event-type IDs, but the event location is also sometimes a primary factor. For example, when an operating system manages system calls by other applications for resource allocation, these calls can be considered events with timestamps, IDs, and locations (processes or I/O devices). In more complex scenarios, the event model should encapsulate more parameters or attributes, for example, events in complex event processing systems can be combined to form composite events. Basically, the following group of operators can combine atomic events and create composite events:
1.Logical operators: Events can be connected using Boolean operators such as and, or, not, and causes.
2.Sequence: Events occur in a particular order, such as E1 followed by E2, or in a conditioned sequence, such as events E1 occur before E2, when E2.price>E1.price.
3.Temporal composition: Temporal relationships between events, such as 3 minutes after E1.
4.Iteration: Operations applied to an event to express the repetition of events with certain properties. 
Event models help us differentiate underlying heterogeneous real-life events from multimodal content and then use those events to better organize, retrieve, and discover knowledge. To capture complex events that are representative of real-world events, we need to capture experiential data about them. Event models assign different properties to an event, with different information and observation sources helping interpret and populate event properties. For example, an exercise event can have multiple properties such as heart rate, calorie consumption, speed, distance traveled, and number of steps climbed. Some of these properties can be recognized from motion sensors (e.g., accelerometer) or from physiological sensors (e.g., heart rate monitoring).
A popular class of event models often encountered in distributed event notification and data stream management systems uses simple tuples to represent events. However, an event model that establishes a common foundation for a wide diversity of applications should address several elementary aspects of event description. Westermann and Jain [2007] introduced six aspects of an event model as shown in Figure 2.2.


Figure 2.2Basic aspects of a common event model [Westermann and Jain 2007].

1.Temporal aspect. Events are inherently related to the concept of time. Applications might be interested in the event occurrence timestamp and duration (in the case of continuous events) or its relation to other events.
2.Spatial aspect. A common event model should support different ways of capturing the spatial aspect of an event. Similar to the temporal aspect, applications might need to define an event s location not only in an absolute manner (i.e., latitude, longitude, and altitude) but also relative to other events  locations. 
3.Informational aspect. An event model should capture enough information about the events that occur, including event type, participants in an event, and their roles. It might also involve further parameters describing the event (e.g., heart rate of a person during exercise event or calorie consumption during eating event).
4.Structural aspect. Event is a concept that can be defined at many different levels of abstraction, for example, a cooking event could aggregate low-level events, such as opening a cabinet and picking up a spice, into higher-level events. Thus, a common event model should support representation of sub-events that occur as part of a more complex event.

Table 2.1:Comparison of event models and event aspects.  o  indicates partial support


1.Experiential aspect. Although a common event model needs to be independent of the media that capture the event, it should provide applications with the ability to show how the events evolve. Any kind of sensor data that is available over the course of events (i.e., image, video, audio, sensor signal, etc.) can be represented under this aspect. 
2.Causality aspect. In historical terms, every event has a cause and is itself the cause of subsequent events that can therefore be considered its effect(s). A common event model should offer a means to express causality and permit the explicit representation of chains of causal events for individual events. 
Scherp and Mezaris [2014] summarized event characteristics in six other groups: time, space, participation, relations between events (in terms of mereology, causality, and correlation), documentation, and interpretation. They further analyzed to what extent the existing event models support these characteristics. Comparison of different event models in terms of the common event characteristics are displayed in Table 2.1.


Figure 2.3Sample event Media JSON for jogging and meeting events. Although events have general temporal, spatial, informational, structural, and experiential facets, their informational properties varies between different events.

Inspired by the e-chronicle concept [Westermann and Jain 2007], we propose using a data structure called Media JSON to capture all required information about an event. In Media JSON, an event is not merely a symbol or a tag, but it is a datum with multiple facets and properties. Figure 2.3 shows a chronicle of multiple events forming an event stream. Each event is represented as a JSON object and contains five basic event facets and some event properties that are tailored to each event type. 
We need a common event query language to facilitate explanations of event streams. Since the core part of explanations is finding associations between an outcome event and key predictor events while adjusting for any other factors, the language should provide the basic building blocks to quantify how association might change in the presence of a combination of events. In the next chapter, we overview some of the current algorithms in pattern mining and discuss how these common algorithms may need to be modified or new algorithms developed to mine events for e-chronicle applications that discover relationships among cause effect events. 



