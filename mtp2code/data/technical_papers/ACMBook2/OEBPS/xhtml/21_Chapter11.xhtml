<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xml:lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>The Sparse Fourier Transform: Theory and Practice</title>
<link rel="stylesheet" type="text/css" href="../styles/stylesheet.css"/>
<link rel="stylesheet" type="application/vnd.adobe-page-template+xml" href="../styles/page-template.xpgt"/>
</head>
<body>
<p class="chno"><a id="page_175"/><b>11</b></p>
<p class="chtitle"><b>Fast Multi-Dimensional NMR Acquisition and Processing</b></p>
<p class="h1"><b><a id="ch11_1"/><span class="big">11.1</span>&#160;&#160;Introduction</b></p>
<p class="noindent">Multi-dimensional Nuclear Magnetic Resonance (NMR) spectroscopy is an invaluable biophysical tool in chemistry, structural biology, and many other applications. However, from its introduction in 1970s, the technique is impeded by long measurement times, heavy computations and large data storage requirements. These problems stem from the huge number of data points needed for quantifying the frequency domain spectrum with the required resolution.</p>
<p class="indent">With the traditional systematic data sampling in the time domain, the duration of an NMR experiment increases exponentially with spectral dimensionality and polynomially with resolution. The rapid development in the field of fast spectroscopy with non-uniform sampling reduces the measurement time by decreasing number of the acquired data points [Billeteri and Orekhov 2012, Coggins et al. 2010, Hyberts et al. 2014, Orekhov and Jaravine 2011]. Non-uniform sampling (NUS) has enabled the acquisition and analysis of practical high-resolution experiments of dimensionality up to 7D [Hiller et al. 2007, Kazimierczuk et al. 2010, Motackova et al. 2010]. Success of the NUS techniques is explained by the notion that the NMR spectrum is sparse in the frequency domain, i.e., only a small fraction of the spectrum contains signals, while the rest contains only baseline noise. Moreover, typically the higher the spectrum dimensionality and resolution are, the sparser the frequency domain spectrum is. While the numerous NUS spectra reconstruction algorithms differ in their underlying assumptions, the common theme is that all information about the spectral signals can be obtained from a relatively small number of measurements, which is linear to the number of signals and nearly independent on the spectrum dimensionality and resolution.</p>
<p class="indent"><a id="page_176"/>NMR measurements are performed in the time domain and, in the case of traditional Fourier spectroscopy, the time signal is converted to the frequency spectrum by the Discrete Fourier Transforms (DFT). For a <i>d</i>-dimensional spectrum with <i>N</i> points for each spectral dimension, we need to sample <i>N<sup>d</sup></i> experimental points, perform DFT with <i>O</i>(<i>N<sup>d</sup></i> log <i>N<sup>d</sup></i>) elementary mathematical operations and allocate <i>O</i>(<i>N<sup>d</sup></i>) bytes for spectrum processing, storage, and analysis. For example, a moderate-resolution 5D spectrum with <i>N</i>=256 for all dimensions requires 4 TB of storage. Even if such spectrum can be computed, it cannot be easily handled in the downstream analysis. Algorithms used for reconstructing the complete spectrum from the NUS data require at least the same and often significantly larger computations and storage than the traditional Fourier-based approach. For example, for the Compressed Sensing (CS) [Holland et al. 2011, Kazimierczuk and Orekhov 2011], storage is <i>O</i>(<i>N<sup>d</sup></i>) and the amount of calculations is polynomial on <i>N<sup>d</sup></i>. Moreover, these algorithms are iterative and thus are impractical, when data do not fit into computer operative memory. Modern computers meet the computational and storage requirements for 2D, 3D, and relatively low-resolution 4D spectra. Yet, spectra of higher dimensionality and/or resolution are still beyond reach, unless the analysis is performed in low-dimensional projections or is reduced to small regions restricted in several spectral dimensions. In this work, we demonstrate for the first time a new approach allowing reconstruction, storage, and handling of high dimensionality and resolution spectra.</p>
<p class="indent">Reconstructing a spectrum with computational complexity and storage, which are sub-linear in respect to the number of points in the full spectrum (<i>N<sup>d</sup></i>) may only work by using NUS in the time domain and by computing a sparse representation of the spectrum, i.e., without producing the complete spectrum at any stage of the procedure. The latter requirement excludes powerful non-parametric NUS processing algorithms designed to reconstruct the full spectrum, such as Maximum Entropy (ME) [Barna et al. 1987, Hoch et al. 2014], Projection Reconstruction (PR) [Freeman and Kupce 2003], Spectroscopy by Integration of Frequency and Time Domain Information (SIFT) [Frey et al. 2013, Matsuki et al. 2009], Compressed Sensing [Holland et al. 2011, Kazimierczuk and Orekhov 2011], and Low Rank reconstruction [Qu et al. 2014]. The parametric methods such as Bayesian [Bretthorst 1990], maximum likelihood [Chylla and Markley 1995], and multidimensional decomposition (MDD) [Jaravine et al. 2006] approximate the spectrum using a relatively small number of adjustable parameters, and thus are not limited in spectral dimensionality and resolution. However, due to the intrinsic problems of choosing the right model and convergence, the parametric algorithms cannot guaranty the detection of all significant signals in a large spectrum. Another approach Multidimensional <a id="page_177"/>Fourier Transform (MFT) [Kazimierczuk et al. 2006] for large spectra exploits prior knowledge about the signal positions in some or all of the spectral dimensions. MFT reconstructs only small regions around known spectral peaks and thus requires less computations and storage. The Signal Separation Algorithm (SSA) [Stanek et al. 2012] represents a combination of the parametric and MFT methods and to some extent inherits strong and weak points of both. Notably, the SSA also avoids dealing with the full spectrum matrices in time and frequency domains and can deal with large spectra. The method was demonstrated for highresolution 4D spectra with the corresponding full sizes of tens of gigabytes.</p>
<p class="indent">The Sparse Fourier Transform is the first non-parametric algorithm capable of producing a high quality sparse representation for high resolution and dimensionality spectra. The Sparse Fourier Transform offers fast processing and requires manageable data storage, which are sub-linear to the total number of points in the frequency spectrum. It also allows reconstruction of complete high quality ND spectra of any size and dimensionality. It is most useful for high-resolution spectra of four and more dimensions, where methods like CS require too much computations and storage.</p>
<p class="indent">In this chapter, we will describe the multi-dimensional version of the Sparse Fourier Transform algorithm which we use for NMR spectra. We will also demonstrate its effectiveness as recovering NMR spectra from only 6.4% of the input samples through experiments on a 4D BEST-HNCOCA spectrum of ubiquitin.</p>
<p class="h1"><b><a id="ch11_2"/><span class="big">11.2</span>&#160;&#160;Multi-Dimensional Sparse Fourier Transform</b></p>
<p class="noindent">In this section, we adapt the Sparse Fourier Transform algorithms for multidimensional NMR spectra. We will describe the Sparse Fourier Transform algorithm for 2D signals of size <i>N &#215; N</i>. However, the algorithm can be easily extended to any dimension. We will use X to denote the 2D time signal and <img src="../images/in177.png" alt="Image"/> to denote its 2D discrete Fourier transform (DFT). We will use (<i>f <sub>1</sub>, f<sub>2</sub></i>) to denote a frequency position and <img src="../images/in177.png" alt="Image"/>(<i>f<sub>1</sub>, f<sub>2</sub></i>) to denote the spectral value at this frequency position. For simplicity, we will refer to frequencies that have no signal energy, i.e., just noise, as the zero frequencies and the frequencies that have signal energy as the non-zero frequencies.</p>
<p class="indent">Recall the two key components of the Sparse Fourier Transform operates: bucketization and estimation. The bucketization step divides the frequency spectrum into buckets where the value of each bucket represents the sum of the values of frequencies that map to that bucket. Since the spectrum is sparse, many buckets will be empty and can be discarded. The algorithm then focuses on the non-empty <a id="page_178"/>buckets and computes the frequencies with large values in those buckets in the estimation step. Below we describe in details the bucketization and estimation techniques we use for NMR. Some of the concepts below have been introduced in previous chapters. However, here we formalize them for multi-dimensional signals and put them in the context of NMR experimentation.</p>
<p class="h2"><a id="ch11_2_1"/><b><span class="big1">11.2.1</span>&#160;&#160;Multi-Dimensional Frequency Bucketization</b></p>
<p class="h3a"><a id="ch11_2_1_1"/><b><span class="big2">11.2.1.1</span>&#160;&#160;Bucketization Using Co-Prime Aliasing</b></p>
<p class="noindent">Bucketization through co-prime aliasing previously appeared in <a href="09_Chapter01.xhtml">Chapters 1</a> and <a href="17_Chapter07.xhtml">7</a>. Here, we formalize it for multi-dimensional signals. Let <b>B</b> be a subsampled version of <b>X,</b> i.e., <b>B</b>(<i>t</i><sub>1</sub>, <i>t</i><sub>2</sub>) = <b>X</b>(<i>p</i> &#183; <i>t</i><sub>1</sub>, <i>p</i> &#183; <i>t</i><sub>2</sub>) where <i>p</i> is the subsampling factor. Then, <img src="../images/in178.png" alt="Image"/> the FFT of <b>B,</b> is an aliased version of <img src="../images/in177.png" alt="Image"/> i.e.,</p>
<p class="image"><a id="eq11_1"/><img src="../images/eq11_1.png" alt="Image"/></p>
<p class="indent">Thus, frequencies equally spaced by an interval <i>N/p</i> along each dimension map to the same bucket, i.e., frequency (<i>f</i><sub>1</sub>, <i>f</i><sub>2</sub>) maps to bucket number (<i>b</i><sub>1</sub>, <i>b</i><sub>2</sub>) such that:</p>
<p class="image"><a id="eq11_2"/><img src="../images/eq11_2.png" alt="Image"/></p>
<p class="indent">Further, recall that the value of each bucket is the sum of the values of only the frequencies that map to the bucket as can be seen from <a href="#eq11_1">Equation 11.1</a>. Now that we mapped the frequencies into buckets, we can leverage the fact that the spectrum of interest is sparse and hence most buckets have noise and no signal. We compare the energy (i.e., the magnitude squared) of a bucket with the noise level and considers all buckets whose energy is below a threshold to be empty. We then focus on the occupied buckets and ignore empty buckets.</p>
<p class="indent">Recall that most of the occupied buckets will have a single non-zero frequency. However, some buckets will have more than one non-zero frequency i.e., collisions. Recall that we can resolve collisions by repeating the bucketization with a different sampling factor <i>p</i>&#8242; that is co-prime with <i>p</i>. Co-prime aliasing guarantees that any two frequencies that collide in the first bucketization will not collide in the second bucketization. <a href="#fig11_1">Figure 11.1</a> shows an example of bucketization using co-prime aliasing of a 2D spectrum.</p>
<p class="h3"><a id="ch11_2_1_2"/><b><span class="big2">11.2.1.2</span>&#160;&#160;Bucketization Using Discrete Line Projections</b></p>
<p class="noindent">Bucketization using discrete line projections previously appeared in <a href="09_Chapter01.xhtml">Chapters 1</a> and <a href="19_Chapter09.xhtml">9</a>. We repeat the formalization of this form of bucketization here and put in the context of multi-dimensional NMR spectra. Recall that performing a 1D DFT of a discrete line yields the projection of the spectrum onto a corresponding line in the Fourier domain. Specifically, let <b>y</b> be the 1D discrete line corresponding to a 2D signal <b>X,</b> parameterized by <i>t</i> &#8712; [0, &#8230;, <i>N</i> &#8722; 1]:</p>
<div class="cap">
<p class="image"><a id="page_179"/><a id="fig11_1"/><img src="../images/fig11_1.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.1</b> 2D bucketization using co-prime aliasing on a 12 &#215; 12 signal. (a) Subsampling by a factor of three folds (aliases) the spectrum by three. Frequencies with the same color sum up together in the same bucket. (b) Subsampling by a factor of four, which is co-prime to three, ensures that the frequencies will be bucketized differently, avoiding collisions.</p>
</div>
<p class="image"><a id="eq11_3"/><img src="../images/eq11_3.png" alt="Image"/></p>
<p class="noindent">where <i>&#945;</i><sub>1</sub>,<i>&#945;</i><sub>2</sub> are integers whose greatest common divisor is invertible modulo N such that 0 &#8804; <i>&#945;</i><sub>1</sub>, <i>&#945;</i><sub>2</sub> &#60; <i>N</i> &#183; <i>&#945;</i><sub>1</sub>/<i>&#945;</i><sub>2</sub> represents the slope of the line. Then <img src="../images/in179.png" alt="Image"/>, the DFT of <b>y,</b> is a projection of <img src="../images/in177.png" alt="Image"/> onto this line. That is each point in <img src="../images/in179.png" alt="Image"/> is a summation of the <i>N</i> frequencies that lie on a discrete line orthogonal to <b>y,</b> as shown in <a href="#fig11_2">Figure 11.2</a>. Specifically, the frequencies (<i>f</i><sub>1</sub>, <i>f</i><sub>2</sub>) that satisfy <i>&#945;</i><sub>1</sub><i>f</i><sub>1</sub> + <i>&#945;</i><sub>2</sub><i>f</i><sub>2</sub> = <i>f</i> mod <i>N</i> will project together into the same bucket <i>f</i> and sum up to <img src="../images/in179.png" alt="Image"/>(f). <a href="#fig11_2">Figure 11.2</a> shows some examples of discrete lines and their projections. Note that discrete lines from <a href="#eq11_3">Equation 11.3</a> wrap around as can be seen in <a href="#fig11_2">Figure 11.2</a>(d, e, f) and hence bucketization can result in a pseudo random non-uniform sampling as shown in <a href="#fig11_2">Figure 11.2(f)</a>. Also note that this can be extended to any number of dimensions. In that case, we can take projections of discrete lines, planes or hyper-planes.</p>
<p class="indent">The above procedure is based on the Fourier projection-slice theorem [Bracewell 1956] and thus bears resemblance to the reduced dimensionality techniques and radial sampling [Bodenhausen and Ernst 1981, Coggins et al. 2010, Hiller et al. 2005, Szyperski et al. 1993]. The important difference, however, is that the sampling defined by <a href="#eq11_3">Equation 11.3</a> is performed on the Nyquist time domain grid of the full multidimensional experiment, while the traditional radial sampling is off-grid. As described in the next section, having all sampled point on the grid allows direct frequency estimation without resorting to the often problematic inverse Radon transform used in the traditional projection reconstruction [Kupce and Freeman 2004].</p>
<div class="cap">
<p class="image"><a id="page_180"/><a id="fig11_2"/><img src="../images/fig11_2.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.2</b> Bucketization using discrete line projections. The top shows the discrete line that was sampled and the bottom shows how the frequencies are projected. Frequencies with the same color will sum up together in the same bucket. This is shown for different slope (a)&#8211;(f). Since the lines are discrete, they wrap around and can result in pseudo random sampling and projection patterns as can be seen in (f).</p>
</div>
<p class="indent">Further, discrete projections can benefit from the complex virtual echo representation [Mayzel et al. 2014], which improves the sparsity. Specifically, for this representation, once we sample a discrete line passing through the origin (0, 0), we automatically obtain the samples of another discrete line which is symmetric to the first line with respect to one of the axes, i.e., if we sample a line with slope <i>&#945;</i><sub>1</sub>/<i>&#945;</i><sub>2</sub>, we directly get the line with slope &#8722;<i>&#945;</i><sub>1</sub>/<i>&#945;</i><sub>2</sub>. For higher dimensions the gain is larger. If we sample a discrete line in a <i>d</i>-dimensional signal, we automatically get the samples of 2<sup><i>d</i></sup> &#8722; 1 other discrete lines. For example, in 3D for a discrete line with slope (<i>&#945;</i><sub>1</sub>, <i>&#945;</i><sub>2</sub>, <i>&#945;</i><sub>3</sub>), we get the samples of three other discrete lines which are (&#8722;<i>&#945;</i><sub>1</sub>, <i>&#945;</i><sub>2</sub>, <i>&#945;</i><sub>3</sub>), (<i>&#945;</i><sub>1</sub>, &#8722;<i>&#945;</i><sub>2</sub>, <i>&#945;</i><sub>3</sub>), (<i>&#945;</i><sub>1</sub>, <i>&#945;</i><sub>2</sub>, &#8722;<i>&#945;</i><sub>3</sub>). Note that (&#8722;<i>&#945;</i><sub>1</sub>, &#8722;<i>&#945;</i><sub>2</sub>, <i>&#945;</i><sub>3</sub>) and (<i>&#945;</i><sub>1</sub>, <i>&#945;</i><sub>2</sub>, &#8722;<i>&#945;</i><sub>3</sub>) define the same projections and thus only one of these is needed.</p>
<p class="h3"><a id="ch11_2_1_3"/><b><span class="big2">11.2.1.3</span>&#160;&#160;Choosing the Bucketization and Number of Buckets in NMR</b></p>
<p class="noindent">The choice of bucketization and number of buckets depends on the sparsity. If the signal has <i>k</i> non-zero frequency peaks, then the number of buckets in each bucketization should be at least <i>O</i>(<i>k</i>) or larger. The discrete projections and aliasing approaches give us a lot of flexibility in choosing the number of buckets. For example, in a 4D signal, if k is very large we can project on 2D discrete planes to get <i>N</i><sup>2</sup> buckets or 3D discrete hyper-planes to get <i>N</i><sup>3</sup> buckets. If <i>k</i> is small, we can project on 1D discrete lines to get <i>N</i> buckets. We can also combine discrete projections with aliasing to accommodate almost any value of <i>k</i>. For example, we can project on subsampled lines as shown in <a href="#fig11_3">Figure 11.3</a>(a, b) to get <i>N</i>/2 or <i>N</i>/3 buckets. We can also project on subsampled plane as shown in <a href="#fig11_3">Figure 11.3(c)</a> to get 2<i>N</i> buckets.</p>
<div class="cap">
<p class="image"><a id="page_181"/><a id="fig11_3"/><img src="../images/fig11_3.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.3</b> Combining discrete projections with aliasing. (a, b) Projection on subsampled discrete line gives number of buckets less than <i>N</i>. (c) Projection on two lines (i.e., subsampled plane) gives number of buckets larger than <i>N</i>. Frequencies with the same color sum up together in the same bucket.</p>
</div>
<p class="h2"><a id="ch11_2_2"/><b><span class="big1">11.2.2</span>&#160;&#160;Multi-Dimensional Frequency Estimation</b></p>
<p class="noindent">Here we describe the frequency estimation step we use in the context of NMR. Recall that in this step, for each of the occupied buckets, we want to identify which frequencies created the energy in these buckets, and what are the values of these frequencies.</p>
<p class="indent"><a id="page_182"/>To identify the frequencies, we will use the voting based approach which we previously introduced in <a href="09_Chapter01.xhtml">Chapters 1</a>, <a href="12_Chapter03.xhtml">3</a>, and <a href="19_Chapter09.xhtml">9</a>. In this approach, occupied buckets vote for the frequencies that map to them. Since the spectrum is sparse, most of the buckets are empty and hence only few frequencies get votes each time. Because by definition the non-zero frequencies will end up in occupied buckets, they will get a vote every time we perform a new bucketization. In practice, a non-zero frequency may miss the votes in some of the bucketizations. This may happen when the corresponding spectral peak is very weak and/or is cancelled by superposition with a peak of the opposite sign. Such negative peaks may be present in the spectrum, for example, in case of the peak aliasing when the acquisition is started from half-dwell time. Nevertheless, after performing a few random bucketizations by using co-prime aliasing or discrete lines with different slopes, the non-zero frequencies will have the largest number of votes, which allows the algorithm to identify these frequencies. An illustrative example of this voting-based estimation can be found in <a href="19_Chapter09.xhtml#ch9_5_2">Section 9.5.2</a>.</p>
<p class="indent">Now that we have a list of non-zero frequencies (<i>f</i><sub>1</sub>, <i>f</i><sub>2</sub>), we want to estimate the values <img src="../images/in177.png" alt="Image"/>(<i>f</i><sub>1</sub>, <i>f</i><sub>2</sub>) of these frequencies. We may use a simple approach analogous to those used in the method of projection reconstruction [Kupce and Freeman 2004]. It would estimate the value of each non-zero frequency as the median value of the different buckets to which this frequency was mapped across the different bucketizations. However, this approach may yield a poor reconstruction in the presence of noise and significant signal overlap. Instead, we can compute better estimates of the values of the non-zero frequencies by harnessing the fact that all these frequencies are defined at the same Nyquist grid. The values of the occupied buckets can be viewed as linear combinations of the values of the non-zero frequencies. Hence, we can construct a linear system of equations:</p>
<p class="image"><a id="eq11_4"/><img src="../images/eq11_4.png" alt="Image"/></p>
<p class="noindent"><a id="page_183"/>where the unknown vector <b>x</b> corresponds to the values of the non-zero frequencies and the known vector <b>b</b> corresponds to the values of the buckets. The matrix <i>A</i> is a sparse binary matrix that specifies which frequency values contribute to which buckets. In general, this system is over-determined since the number of occupied buckets can be as large as the number of non-zero frequencies times the number of bucketizations. Hence, the solution that minimizes the mean square error of the frequency values is:</p>
<p class="image"><a id="eq11_5"/><img src="../images/eq11_5.png" alt="Image"/></p>
<p class="noindent">where <i>A</i><sup>&#8224;</sup> is the is the pseudo inverse of <i>A</i>. This approach of computing the values of non-zero frequencies is more robust to noise and can correct for errors by estimating the falsely presumed non-zero frequencies to near zero values. This comes at the cost of the additional computational complexity associated with computing the pseudo inverse. However, since the number of non-zero frequencies is small, the size of the matrix <i>A</i> is still small.</p>
<p class="h1"><b><a id="ch11_3"/><span class="big">11.3</span>&#160;&#160;Materials and Methods</b></p>
<p class="noindent">The 4D fully sampled BEST-HNCOCA [Lescop et al. 2007] spectrum of 1.7 mM human ubiquitin sample (H2O/D2O 9:1, pH 4.6) was acquired at 25&#176;C on 800 MHz Bruker AVANCE III HD spectrometer equipped with 5 mm CP-TCI probe with the Nyquist grid of 16 &#215; 16 &#215; 16 complex time points (acquisition times 12 ms, 10 ms, and 4.4 ms) for the <sup>15</sup>N, <sup>13</sup>CO, and <sup>13</sup>C<i>&#945;</i> spectral dimensions, respectively. The amide region of the full reference 4D spectrum (9.7 -7.0 <sup>1</sup>H ppm, 174 points) was processed using NMRPipe software [Delaglio et al. 1995]. For the Sparse Fourier Transform processing, only the directly detected dimension was processed in NMRPipe followed by extraction of the same amide region.</p>
<p class="indent">The hyper-complex time domain data were converted to the complex virtual echo (VE) representation [Mayzel et al. 2014] with dimensions 174 &#215; 32 &#215; 32 &#215; 32. Unlike the original hyper-complex data representation, the VE is directly amenable for the multi-dimensional Sparse Fourier Transform processing and improves the result of the reconstruction from the NUS data. However, the VE relies on the prior knowledge of the phase and requires the linear phase correction in the indirectly detect dimensions of the ND spectrum to be multiple of <i>&#960;</i> (i.e., 0, <i>&#960;</i>, 2<i>&#960;</i>, &#8230;).</p>
<p class="indent">Two independent sampling tables were generated using Discrete Line Projections given by <a href="#eq11_3">Equation 11.3</a>. Each of the tables contained 6 orthogonal projections, i.e., (1, 0, 0), (0 1 0), (1 1 0), (1 0 1), (0 1 1), (1 1 1), and 16 projections obtained by random combinations of prime numbers less than 32 (i.e., 0, 1, 2, 3, 5, 7, 11, 13, 17, 23, 29, 31). As described in the theory, these 6 + 16 unique line projections were augmented by 7 + 48 symmetric projections, respectively, which resulted in total 77 line projections in the Sparse Fourier Transform calculations. In total, each NUS dataset included 2096 (6.4%) out of total 32K complex time domain points in the indirectly detected dimensions. <a href="#fig11_4">Figure 11.4</a> shows a few examples of the obtained discrete line projections. The number of used samples or discrete lines depends on the sparsity of the 3D spectra. Since, for all 174 directly detected points, the same indirectly detected points are used, the minimum number of samples needed is bounded by the 3D sub-spectrum with the lowest sparsity, i.e., the largest part occupied by signals.</p>
<div class="cap">
<p class="image"><a id="page_184"/><a id="fig11_4"/><img src="../images/fig11_4.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.4</b> Discrete line projections obtained on 4D BEST-HNCOCA spectrum of ubiquitin. At 1 H frequency of 8.05 ppm with prime numbers for line slopes [<i>&#945;</i><sub>1</sub>, <i>&#945;</i><sub>2</sub>, <i>&#945;</i><sub>3</sub>] : (a) [1,0,31], (b) [17,1,23], (c) [31,7,3], (d) [11,1,29]. Horizontal dashed lines in each panel indicate the Sparse Fourier Transform adaptive threshold used for frequency identification.</p>
</div>
<p class="indent">Although the same discrete lines are used in all 3D sub-spectra, the cut-off threshold for selecting frequencies varies for different directly detected points. The Sparse Fourier Transform adaptively sets the cut-off threshold by ensuring that the system of linear equations in <a href="#eq11_4">Equation 11.4</a> is well determined. This allows lowering the cut-off and thus improving sensitivity for regions with small number of signals. Finally, the Sparse Fourier Transform calculations were performed in MATLAB with the resulting spectrum exported to NMRPipe format for comparison with the reference spectrum.</p>
<p class="h1"><b><a id="ch11_4"/><span class="big">11.4</span>&#160;&#160;Results</b></p>
<p class="noindent">We demonstrate the Sparse Fourier Transform ability to reconstruct 4D HNCOCA spectrum using a NUS dataset extracted from the complete experiment, which is acquired with 512 &#215; 16 &#215; 16 &#215; 16 complex time points for the <sup>1</sup>H, <sup>15</sup>N, <sup>1</sup>3CO, and <sup>13</sup>C<i>&#945;</i> spectral dimensions, respectively. After conventional Fourier processing of the directly detected <sup>1</sup>H dimension and extraction of the amide region 7.0&#8211;9.7 <sup>1</sup>H ppm (174 points), the Discrete Line Projections which were used for bucketization selected 262 (6.4%) hyper complex time domain points in the indirectly detected dimensions. In a real experiment, of course, only these selected data points need to <a id="page_185"/>be acquired, thus reducing the measurement time to 6.4% of the full experiment. The selected hyper-complex data points were converted to the complex virtual echo representation [Frey et al. 2013, Mayzel et al. 2014], which contained 174 &#215; 2096 points out of the full complex array with dimensions 174 &#215; 32 &#215; 32 &#215; 32. Then, in the frequency domain, the Sparse Fourier Transform voting algorithm identified 10588 non-zero points, which correspond to approximately 100 peaks with 100 data points per peak in the 4D spectrum. In the resulting spectrum, only these nonzero intensities were stored, which constitute to less than 0.2% of the full reference spectrum.</p>
<p class="indent">The running time of the Sparse Fourier Transform is dominated by the time to compute the projections and perform the pseudo inverse. For the current experiment, the time to compute all projections in MATLAB is 0.25 ms and the time to perform the pseudoinverse is around 150 ms. CS-based algorithms like IST would require between 10&#8211;100 iterations while performing a full FFT on 3D spectra and hence take between 30&#8211;300 ms. The computational advantage of the Sparse Fourier Transform is expected to increase for higher resolution and dimensions. However, a more thorough analysis of runtime would require implementing the Sparse Fourier Transform algorithm in C/ C++ and is thus is left for future work.</p>
<p class="indent">A few points are worth noting. First, the pseudoinverse matrix is computed separately for each point in the directly detected dimension. Thus, the size of this matrix depends on the number of peaks in each of the 3D spectra of indirectly detected dimensions as opposed to the number of peaks in the entire 4D spectrum. The pseudoinverse of the matrix used in our work (ca 2000 &#215; 250), takes 0.15 s. Hence, calculating the pseudoinverse fits well in to a desktop computer memory. Even for a more demanding case of quadruple matrix size required for a large system or NOESY type spectrum, the calculation will take less than 40 s per point in the directly detected spectral dimension. Second, the Sparse Fourier Transform can naturally benefit from prior knowledge about the dark regions in the spectrum in a similar manner to the SIFT method. For example, we can compute the pseudoinverse only for the peaks, which we want to estimate. We can also avoid collecting votes for frequencies we know do not contain energy.</p>
<p class="indent"><a href="#fig11_5">Figure 11.5</a> illustrates the Sparse Fourier Transform reconstructed spectrum using two different approaches for the evaluation of the frequency values. Comparison of panels (a, b) and (c, d) in <a href="#fig11_5">Figure 11.5</a> shows that the spectrum obtained using the matrix inversion from <a href="#eq11_5">Equation 11.5</a> is very similar to the full reference spectrum. This visual impression is corroborated by the correlation in <a href="#fig11_5">Figure 11.5(e)</a> of the cross-peak intensities between the full reference and Sparse Fourier Transform reconstructed spectrum. It can be seen that most of the peaks found in the reference spectrum (red circles) are faithfully reproduced in the Sparse Fourier Transform reconstruction.</p>
<div class="cap">
<p class="image"><a id="page_186"/><a id="fig11_5"/><img src="../images/fig11_5.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.5</b> NMR reconstruction results: 4D BEST-HNCOCA spectrum of ubiquitin. Orthogonal <sup>1</sup>H/<sup>15</sup>N (a, b) and (c, d) <sup>13</sup>CO/<sup>13</sup>C<i>&#945;</i> projections of fully sampled and FFT processed (a, c) and 6.4% NUS processed with the Sparse Fourier Transform (b, d). (e, f) Correlation of peak intensities measured in the full reference spectrum (abscissa) and the Sparse Fourier Transform reconstruction (ordinate) using the matrix inversion (e) and median estimation (f). Dark red circles and blue crosses show intensities measured at the positions of peaks picked in the reference and Sparse Fourier Transform spectra, respectively.</p>
</div>
<div class="cap">
<p class="image"><a id="page_187"/><a id="fig11_6"/><img src="../images/fig11_6.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.6</b> Correlation of peak intensities in 4D BEST-HNCOCA spectrum of ubiquitin. (a) The peak intensities were measured in the full reference spectrum (abscissa) and the Sparse Fourier Transform reconstruction (ordinate) using the matrix inversion method obtained using a different set of samples from <a href="#fig11_5">Figure 11.5</a>. Dark red circles and blue crosses show intensities measured at the positions of peaks picked in the reference and Sparse Fourier Transform spectra, respectively. (b) Correlation of peak intensities measured in two Sparse Fourier Transform reconstructions calculated using different set of randomly selected projections.</p>
</div>
<p class="indent">Results of spectral reconstructions from NUS may vary for different sampling schedules [Aoto et al. 2014]. In order to check this, we calculated the Sparse Fourier Transform spectrum with an alternative set of randomly selected projections. The two independent Sparse Fourier Transform spectral reconstructions had comparable quality. Pairwise correlations between the peak intensities in the reference spectrum and in the two independent Sparse Fourier Transform reconstructions were very similar as can be seen in <a href="#fig11_6">Figure 11.6</a>. 98 peaks were detected in the reference spectrum using the peak-picker program from NMRPipe software [Delaglio et al. 1995] with the noise level of 0.01 (in the scale used in <a href="#fig11_5">Figure 11.5</a>(e, f) and peak detection threshold 0.05. Thanks to the high spectral sensitivity for the 1.7 mM ubiquitin sample, the signal dynamic range in the reference spectrum reached 1:50, which covers the range typically found in the triple resonance experiments for assignment and approaches the dynamic range in 4D NOESY spectra.</p>
<p class="h1"><a id="page_188"/><b><a id="ch11_5"/><span class="big">11.5</span>&#160;&#160;Discussion</b></p>
<p class="noindent">Practical sensitivity in a spectrum can be defined as a level of reliable signal detection, i.e., separation of true signals from noise and spectral artifacts. The weakest detected peak in the reference spectrum has intensity 0.12. Out of total 98, five weakest peaks with intensity up to 0.25 were lost in the Sparse Fourier Transform reconstruction. No peaks above this level were missing. The observed decrease of the sensitivity seems reasonable considering that duration of the Sparse Fourier Transform experiment is only 6.4% of the reference and thus up to four times drop of sensitivity is expected for the Sparse Fourier Transform reconstruction.</p>
<p class="indent">In the Sparse Fourier Transform voting algorithm, the frequency detection is limited by the sensitivity in the individual projections, whose measurement time was 1/77 of the total Sparse Fourier Transform experiment time. On the other hand, combined analysis of many projections provides efficient cross-validation of the selected frequencies and allows lowering of the detection threshold in the individual projections, as can be seen in <a href="#fig11_6">Figure 11.6</a>. Similar to the geometric analysis of projections (GAPRO) algorithm in APSY [Hiller et al. 2005], the Sparse Fourier Transform voting procedure, recovers large part of the sensitivity that is lost due to short measurement time of the projections. It should be noted also that in Sparse Fourier Transform, the purpose of the frequency identification voting algorithm is not to find peaks but to select frequencies, which are worth for the evaluation. The detection limit corresponds to a trade-off between the number of points selected for the evaluation and the requirements for low computational complexity and data storage. Thus, lowering of the detection threshold does not lead to many additional false peaks but only increases the computational complexity and storage. Whatever threshold level is used, the weakest peaks are inevitably lost at the frequency identification step of the Sparse Fourier Transform algorithm and consequently have zero intensities in the Sparse Fourier Transform reconstruction. Thus, the Sparse Fourier Transform, as well as many other NUS processing methods, should be used with caution for spectra with high dynamic range and when detection of the peaks close to the signal-to-nose limit is important, e.g., for NOESYs.</p>
<p class="indent">The correlation for the peaks picked in the Sparse Fourier Transform spectrum is shown in <a href="#fig11_5">Figure 11.5</a>(e, f) with blue crosses. The peaks were detected by NMRPipe peak-picker with the same noise and detection threshold parameters as for the reference spectrum. This plot is intended for revealing peaks in the Sparse Fourier Transform reconstruction that are not present in the reference spectrum, i.e., false positives. As it is seen in <a href="#fig11_5">Figure 11.5</a>(e, f), while the median algorithm for the frequency evaluation resulted in many false peaks, no false peaks were detected when the Sparse Fourier Transform reconstruction was obtained using the matrix inversion method. As expected, the median method also provided less accurate peak intensities. Notably, both methods evaluate intensity of the same set of frequencies, which are defined at the common frequency identification step of the Sparse Fourier Transform algorithms. Thus, the matrix inversion method effectively suppresses the false positive peaks.</p>
<div class="cap">
<p class="image"><a id="page_189"/><a id="fig11_7"/><img src="../images/fig11_7.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 11.7</b> Ca-N plane from the 4D BEST-HNCOCA experiment. (a) The Sparse Fourier Transform reconstruction and (b) the reference spectrum. The planes are plotted at the same contour level. The first contour is drawn at the level of 0.01 at the scale of <a href="#fig11_5">Figure 11.5</a>(e, f). In (a), two colored peaks exemplify true (left) and false (right) signals. In (a), the peaks&#8217; appearance in the preceding and subsequent planes in the directly detected HN dimension is indicated by gray contours. The dashed gray circles indicate absence of the peaks in the adjacent planes. The false peak, which has relatively low-intensity (0.2), was not picked by the peak-picker, because it has the distorted line shape and is represented only by a single point in the directly detected dimension. The true peak has the maximum in the second subsequent plane and was picked there in both the reference and Sparse Fourier Transform spectra.</p>
</div>
<p class="indent">Apart from the signals, which were identified by the peak-picker as peaks, the Sparse Fourier Transform spectrum obtained by the matrix inversion method contained a number of signals with intensities lower than the peak detection cut-off. In addition, there were several relatively low-intensity (&#60; 0.3) signals, which didn&#8217;t pass the peak quality checks as can be seen in the example in <a href="#fig11_7">Figure 11.7</a>. In most cases such signals were represented by only one point in two or more spectral dimensions. The reduced dimensionality data collection used by the Sparse Fourier Transform may be prone to false peak artifacts that are not, in general, the result of a method used to compute spectra, but are intrinsic for this type of data sampling [Mobli et al. 2006], especially in the case of signals with high dynamic range. <a id="page_190"/>Thus, it is unlikely that the Sparse Fourier Transform will be able to produce reconstructions for small and medium size spectra that are better than the modern NUS-based techniques, such as CS. On the other hand, the computational and storage efficiency of the Sparse Fourier Transform are well suited for the large spectra, i.e., 4Ds and above, where the full spectral reconstructions and computationally demanding algorithms often fail while methods based on the radial sampling (e.g., APSY) are efficiently used. For example, we envisage that Sparse Fourier Transform will be instrumental in high-dimensional spectra of the Intrinsically Disordered Proteins that often exhibit long transverse relaxation times and heavy peak overlap [Motackova et al. 2010].</p>
<p class="indent">Typically, the number of cross-peaks does not increase with spectrum dimensionality and resolution. Consequently, the number of non-zero frequencies, which is related to the number of cross-peaks, only moderately increases proportionally to dimensionality and resolution of the spectrum. This makes it possible for the Sparse Fourier Transform to handle very large spectra.</p>
<p class="indent">Another good feature of the technique is that the data sampling using the discrete line projections and voting algorithm used by the Sparse Fourier Transform for the identification of non-zero frequencies are fully compatible with the optimization by incremental data collection and analysis [Eghbalnia et al. 2005, Jaravine and Orekhov 2006]. For example we can envisage an approach where an experiment is continued until the list of identified frequencies stabilizes and reaches a plateau. Thus, the number of projections can be adjusted for every experiment.</p>
<p class="h1"><b><a id="ch11_6"/><span class="big">11.6</span>&#160;&#160;Conclusion</b></p>
<p class="noindent">From the NMR perspective, the Sparse Fourier Transform for the first time combines the best features of so far distinctly different approaches known as reduced dimensionality and compressed sensing. The former is robust and computationally very efficient, the later provides highest quality spectral reconstructions. In this chapter, we presented the NMR tailored version of the Sparse Fourier Transform algorithm and demonstrated its performance for 4D BEST-HNCOCA spectrum of ubiquitin.</p>
</body>
</html>