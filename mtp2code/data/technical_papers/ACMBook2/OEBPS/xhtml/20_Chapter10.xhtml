<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xml:lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>The Sparse Fourier Transform: Theory and Practice</title>
<link rel="stylesheet" type="text/css" href="../styles/stylesheet.css"/>
<link rel="stylesheet" type="application/vnd.adobe-page-template+xml" href="../styles/page-template.xpgt"/>
</head>
<body>
<p class="chno"><a id="page_159"/><b>10</b></p>
<p class="chtitle"><b>Fast In-Vivo MRS Acquisition with Artifact Suppression</b></p>
<p class="h1"><b><a id="ch10_1"/><span class="big">10.1</span>&#160;&#160;Introduction</b></p>
<p class="noindent">Magnetic Resonance Spectroscopy (MRS) enables non-invasive analysis of the biomolecular content of the brain. It is an advanced MRI technique that allows us to zoom into specific voxels in the brain and discover the concentration of various metabolites which are used as indicators of diseases like cancer, strokes, seizures, Alzheimer&#8217;s disease, autism, etc. These metabolites create MR signals that appear as frequency peaks in the MRS spectrum. 2D Correlation Spectroscopy (COSY) is one type of MRS that allows the unambiguous assignment of MR signals in crowded spectra and as such can be used in vivo to detect and disentangle the spectral overlap of metabolites. Several methods were demonstrated to acquire localized COSY spectra in vivo [Andronesi et al. 2010, Thomas et al. 2001] and showed great utility in detecting new molecular biomarkers of diseases [Andronesi et al. 2012b, Elkhaled et al. 2012].</p>
<p class="indent">Despite its potential, the in vivo use of 2D COSY is not largely spread due to several challenges and limitations. The two main challenges are long acquisition time which requires the patients to spend a long time in the MRI machine and the presence of artifacts in the output images. These are a direct result of the acquisition of the additional frequency dimension <i>f</i><sub>1</sub>, which requires sufficient evolution time <i>t</i><sub>1</sub> that significantly prolongs the acquisition time. Typically, because of time limitation with in vivo acquisitions, the indirect <i>t</i><sub>1</sub> time dimension cannot be sampled long enough and the corresponding <i>f</i><sub>1</sub> spectral dimension suffers from severe truncation artifacts resulting from the ringing tails of diagonal peaks.<sup><a id="fn1" href="#rfn1">1</a></sup> <a href="#fig10_1">Figure 10.1</a> shows an example of an in vivo 2D COSY spectrum where the strong diagonal peaks of NAA, Choline and Creatine have large ringing tails that obscure cross-diagonal peaks of important metabolites. Signal processing methods such as the use of filtering windows (QSINE) or prediction algorithms (linear prediction) may improve the spectral appearance but significant artifacts are left and the signal to noise ratio (SNR) may be downgraded. Hence, there is a need for a method that recovers the information along <i>f</i><sub>1</sub> while preserving SNR.</p>
<div class="cap">
<p class="image"><a id="page_160"/><a id="fig10_1"/><img src="../images/fig10_1.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 10.1</b> Artifacts in in-vivo 2D COSY spectrum. Truncating the signal in time results in ringing tails along the <i>f</i><sub>1</sub> dimension, which create artifacts. These artifacts are hard to distinguish from cross diagonal peaks of important metabolites labeled in red.</p>
</div>
<p class="indent">2D MRS spectra are highly sparse and the problem of optimizing in-vivo 2D MRS lends itself naturally to the Sparse Fourier Transform. The Sparse Fourier Transform can subsample the 2D COSY signal along the <i>t</i><sub>1</sub> dimension and hence reduce the acquisition time. However, the artifacts caused by the ringing tails shown in <a href="#fig10_1">Figure 10.1</a> significantly reduce the sparsity of the 2D spectrum and hence <a id="page_161"/>a straightforward application of the Sparse Fourier Transform would result in a poor reconstruction of the MRS peaks. As we have shown in <a href="19_Chapter09.xhtml#ch9_3_1">Section 9.3.1</a>, ringing tails are a direct result of truncating and discretizing the continuous time signal. Since the frequency peaks of natural signals like MR are not aligned with the Fourier discretization grid, i.e., peaks lie on <i>off-grid</i> positions, MR signals that are highly sparse in the continuous domain, lose there sparsity in the discrete domain.</p>
<p class="indent">In this chapter, we introduce MRS-SFT, a new MRS processing system that adapts the Sparse Fourier Transform to the continuous domain in order to reduce the acquisition time while outputting clearer images with less clutter and artifacts. It estimates and suppresses the ringing tails by recovering the sparsity in the original continuous spectrum while using the minimum number of input samples along the <i>t</i><sub>1</sub> dimension.</p>
<p class="indent">We demonstrated the performance of MRS-SFT on 2D COSY for single and multi-voxel acquisitions in brain phantoms (mixture of non-living samples) and healthy human volunteers. We compared the results obtained by MRS-SFT and other sparse methods such as compressed sensing (CS) to a fully the sampled FFT and a truncated FFT. We show that MRS-SFT reduces the acquisition time by a factor of three on average. It also eliminates the <i>t</i><sub>1</sub> truncation artifacts which improves the SNR by 8&#8211;14 dB and the resolution of cross-peaks by 25&#8211;40% resulting in much clearer and measurable cross diagonal peaks.</p>
<p class="h1"><b><a id="ch10_2"/><span class="big">10.2</span>&#160;&#160;MRS-SFT</b></p>
<p class="h2"><a id="ch10_2_1"/><b><span class="big1">10.2.1</span>&#160;&#160;Algorithm</b></p>
<p class="noindent">We will explain our algorithm for general 1D signals. In the following subsection, we will explain how to use this algorithm to reconstruct a 2D COSY spectrum. Let <i>x</i>(<i>t</i>) be a signal of length <i>N</i> that is <i>k</i>-sparse in the continuous Fourier domain. Then,</p>
<p class="image"><a id="eq10_1"/><img src="../images/eq10_1.png" alt="Image"/></p>
<p class="noindent">where <img src="../images/in161_1.png" alt="Image"/> are the continuous positions of frequencies and <img src="../images/in161_2.png" alt="Image"/> are the complex values corresponding to these frequencies. The same signal is sparse in the discrete Fourier domain only if all of the <i>f<sub>i</sub></i>&#8217;s happen to be integers, i.e., the large frequency coefficients lie <i>on-the-grid</i>.</p>
<p class="indent">However, for most natural signals like MRS, the large frequency coefficients are more likely to lie <i>off-the-grid</i>. We have shown in <a href="19_Chapter09.xhtml#ch9_3_1">Section 9.3.1</a> that while these <i>off-grid</i> frequencies are sparse in the continuous Fourier domain, they are not sparse in <a id="page_162"/>the discrete Fourier domain. Recall that truncating the signal in time is equivalent to multiplying it with a rectangular function which results in a convolution with a sinc function in the frequency domain. The sinc function has ringing tails which create truncation artifacts like the ones shown in <a href="#fig10_1">Figure 10.1</a>. We refer the reader to <a href="19_Chapter09.xhtml#ch9_3_1">Section 9.3.1</a> for a detailed description of this discretization process and the difference in sparsity between the continuous and discrete Fourier domains.</p>
<p class="indent">MRS-SFT adapts the Sparse Fourier Transform to optimize for the sparsity in the continuous Fourier domain. The MRS-SFT algorithm has two phases.</p>
<p class="hang"><b>On-Grid Recovery.</b> Recovers the spectrum assuming frequencies are only located on integer multiples of the discrete Fourier grid. This step only gives an initial estimate of the spectrum and alone cannot give a good quality reconstruction</p>
<p class="hang"><b>Off-Grid Recovery.</b> Refines the frequencies discovered in the previous stage, allowing them to take non-integer positions. As such it attempts to approximate the continuous spectrum.</p>
<p class="indentt">As input, the algorithm takes only subsamples of the signal <b>x</b> which for MRS translates into a reduction in acquisition time. In both of the above phases, the algorithm outputs a list of the positions <i>f&#771;<sub>i</sub></i> and the complex values <i>a&#771;<sub>i</sub></i> of the non-zero frequency coefficients. In the first phase, the <i>f&#771;<sub>i</sub></i>&#8217;s are integers, i.e., the coefficient lie <i>on-the-grid</i>, whereas in the second phase they can be non-integers, i.e., they lie <i>off-the-grid</i>.</p>
<p class="h3"><a id="ch10_2_1_1"/><b><span class="big2">10.2.1.1</span>&#160;&#160;Phase 1: On-Grid Recovery</b></p>
<p class="noindent">Our on-grid recovery can be divided into three steps.</p>
<p class="noindentt"><b>1. Frequency Bucketization.</b> Recall from previous chapters that in this step, the Sparse Fourier Transform hashes the frequency coefficients in the spectrum into buckets. Since the spectrum is sparsely occupied, many buckets will be empty and can be simply discarded without additional processing. To hash frequency coefficients into buckets, MRS-SFT uses the aliasing filter presented in <a href="09_Chapter01.xhtml#ch1_1_2">Section 1.1.2</a>. Recall that this filter works by subsampling the signal in the time domain which results in aliasing the frequency domain. Aliasing is a form of hashing in which frequencies equally spaced by <i>N/p</i> map to the same bucket where <i>p</i> is the subsampling factor.</p>
<p class="noindentt"><b>2. Recovering Frequency Positions.</b> In this step, we aim to find the positions of the non-zero frequency coefficients. For each of the occupied buckets, we want to <a id="page_163"/>discover out of all the frequency coefficients that map into the bucket, which one is the non-zero coefficient i.e., the one that has energy.</p>
<p class="indent">To do this, we bucketize the frequencies with different aliasing filters, so that different frequency coefficients will hash to different buckets each time. In other words, we repeat the subsampling again at a different subsampling rate. For example, if we bucketized using a subsampling factor <i>p</i><sub>1</sub>, we repeat the process using a different factor <i>p</i><sub>2</sub>. This randomizes the hashing since a frequency coefficient <i>f</i> will hash to bucket <i>f</i> mod <i>N/p</i><sub>1</sub> in the first bucketization and to different bucket <i>f</i> mod <i>N/p</i><sub>2</sub> in the second bucketization. Recall that the best choice of subsampling is to use co-prime factor. Co-prime aliasing guarantees that any two frequencies that collide in one bucketization will not collide in the other bucketization, which best randomizes the voting.</p>
<p class="indent">We then use the voting-based approach presented in <a href="09_Chapter01.xhtml#ch1_1_2">Section 1.1.2</a> where occupied buckets vote for the frequencies that map to them. Since the spectrum is sparse, most of the buckets do not have energy and hence only few frequencies get votes each time. Non-zero frequency coefficients will always get votes since they create energy in the buckets they map to. The number of bucketizations needed typically depends on the sparsity of the signal but after performing a few bucketizations, the non-zeros frequency coefficients will have the largest number of votes. Hence, this gives us a list of the large frequency coefficients, i.e., <img src="../images/in163_1.png" alt="Image"/>.</p>
<p class="noindentt"><b>3. Recovering the Frequency Values.</b> Now that we have a list of positions of non-zero frequency coefficients <img src="../images/in163_1.png" alt="Image"/>, we want to find their complex values <img src="../images/in163_2.png" alt="Image"/>. Given our model in <a href="#eq10_1">Equation 10.1</a> of a sparse signal: if we know the positions of nonzero frequencies (i.e., <i>f&#771;<sub>i</sub></i>), then <a href="#eq10_1">Equation 10.1</a> becomes a system of linear equations with unknowns <img src="../images/in163_2.png" alt="Image"/>. Given <i>s &#62; k</i> discrete input samples of <b>x,</b> we can form an overdetermined system allowing us to solve for each <i>a<sub>i</sub></i>.</p>
<p class="indent">To construct the system of linear equations, we concatenate the input time samples into an <i>s &#215;</i> 1 vector which we denote as <i><b>x<sub>S</sub></b></i>. We let <img src="../images/in163_3.png" alt="Image"/> be a <i>k &#215;</i> 1 vector of the frequency coefficients which we want to recover. Each coefficient in <img src="../images/in163_3.png" alt="Image"/> corresponds to one position <i>f&#771;<sub>i</sub></i> of the non-zero frequencies. Finally, let <b>A</b> be a matrix of <i>s</i> &#215; <i>k</i> entries. Each row corresponds to an input time sample and each column corresponds to a non-zero frequency coefficient and the value of each entry will be a complex exponential:</p>
<p class="image"><a id="eq10_2"/><img src="../images/eq10_2.png" alt="Image"/></p>
<p class="noindent"><a id="page_164"/>Thus, our system of linear equations becomes:</p>
<p class="image"><a id="eq10_3"/><img src="../images/eq10_3.png" alt="Image"/></p>
<p class="noindent">The standard minimal square error solver is to multiply by the pseudo-inverse of <b>A:</b></p>
<p class="image"><a id="eq10_4"/><img src="../images/eq10_4.png" alt="Image"/></p>
<p class="noindent">where <b>A</b><sup>&#8224;</sup> is the pseudo-inverse of <b>A.</b> Once we calculate <img src="../images/in164_1.png" alt="Image"/>, each coefficient will correspond to the position of a non-zero frequency <i>f&#771;<sub>i</sub></i>. This procedure of recovering frequency coefficients given their positions does not assume that the frequencies are integers and hence we can use it again in second phase.</p>
<p class="h3"><a id="ch10_2_1_2"/><b><span class="big2">10.2.1.2</span>&#160;&#160;Phase 2: Off-Grid Recovery</b></p>
<p class="noindent">The off-grid recovery process refines the frequencies discovered in the on-grid stage, allowing them to take non-integer positions. The algorithm formulates this as an optimization problem and uses nonlinear gradient descent to estimate the continuous positions <img src="../images/in163_1.png" alt="Image"/> that minimize the square error between observed discrete samples of <i>x</i>(<i>t</i>) and the reconstruction of these samples given by our current coefficient positions and values. Thus, the error function we wish to minimize can be written as:</p>
<p class="image"><a id="eq10_5"/><img src="../images/eq10_5.png" alt="Image"/></p>
<p class="noindent">where a <i>a&#771;<sub>i</sub></i> and <i>f&#771;<sub>i</sub></i> are our estimates of <i>a<sub>i</sub></i> and <i>f<sub>i</sub></i>, and the above summation is taken over all the observed discrete samples. We can rewrite the error of this optimization problem using our vector notation from <a href="#eq10_3">Equation 10.3</a> as:</p>
<p class="image"><a id="eq10_6"/><img src="../images/eq10_6.png" alt="Image"/></p>
<p class="indent">To solve the above optimization problem we use a gradient descent algorithm based on finite differences. Each iteration of the algorithm updates the list of frequency positions {<i>f&#771;<sub>i</sub></i>}. For each recovered frequency position in {<i>f&#771;<sub>i</sub></i>}, we fix all other frequencies and shift the position of this frequency by a small fractional step <i>&#948;</i> &#8810; 1. We shift it in the positive and negative directions and compute the new error <i>e</i> given the new position. We then pick the direction that best minimizes the error <i>e</i> and change the position of the frequency in that direction.<sup><a id="fn2" href="#rfn2">2</a></sup> We repeat this for every frequency position {<i>f&#771;<sub>i</sub></i>}. <a href="#fig10_2">Figure 10.2</a> shows an example of the gradient descent algorithm.</p>
<div class="cap">
<p class="image"><a id="page_165"/><a id="fig10_2"/><img src="../images/fig10_2.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 10.2</b> Off-grid recovery using gradient descent. Consider a continuous spectrum with a single peak at position <i>f</i> = 4.2. The on-grid recovery stage estimates the initial peak position to the nearest integer of <i>f</i> = 4. We set the fractional step size <i>&#948;</i> of the gradient descent to 0.1. In iteration 1, we calculate the error <i>e</i> = 0.97. If we shift the peak to the left, the error becomes <i>e</i> = 0.99 and if we shift it to the right, <i>e</i> = 0.49. Since shifting the peak to the right will reduce the error, we shift the peak position to <i>f</i> = 4.1. We do the same thing in iteration 2 and shift the peak to the right again. In iteration 3, <i>f</i> = 4.2 and neither shifting the peak to the left or right will reduce the error. At this stage the algorithm converges and the off-grid position of the peak has been recovered correctly.</p>
</div>
<p class="indent">The gradient descent ensures that from iteration <i>i</i> to iteration <i>i</i> + 1, we are always reducing the residual error, i.e., <i>e</i><sup>(<i>i</i>+1)</sup> &#60; <i>e</i><sup>(<i>i</i>)</sup> where <i>e</i><sup>(<i>i</i>)</sup> denotes the error in iteration <i>i</i>. The algorithm keeps iterating over the frequencies until the error falls below a minimum acceptable error <i>&#1013;</i>. Once we have a final list of positions, we can use the same procedure described in the on-grid recovery to recover the values of these frequency coefficients.</p>
<p class="h2"><a id="page_166"/><a id="ch10_2_2"/><b><span class="big1">10.2.2</span>&#160;&#160;Reconstructing the 2D COSY Spectrum</b></p>
<p class="noindent">In the previous section, we introduced a general algorithm for 1D signals. In this section, we will show how we use this algorithm to reconstruct 2D COSY spectra. A 2D COSY signal has two time dimensions.</p>
<p class="hang"><i>t</i><sub>2</sub> dimension. The <i>t</i><sub>2</sub> dimension is directly measured, i.e., it is fully acquired and hence we can compute the full 1D FFT along this dimension. Furthermore, since we often have sufficient t<sub>2</sub> samples, the truncation artifacts are not as severe as in the <i>t</i><sub>1</sub> dimension. We can simply multiple the <i>t</i><sub>2</sub> samples by the QSINE weighting functions to suppress the tails. Thus, for each value of <i>t</i><sub>1</sub>, we multiply the <i>t</i><sub>2</sub> samples by the QSINE function and take a 1D FFT along <i>t</i><sub>2</sub>.<sup><a id="fn3" href="#rfn3">3</a></sup> At the end of this step, we get a signal in an intermediate domain <b>x</b>&#8242;(<i>t</i><sub>1</sub>, <i>f</i><sub>2</sub>).</p>
<p class="hang"><i>t</i><sub>1</sub> dimension. Since acquiring <i>t</i><sub>1</sub> increments can be very time consuming, we only acquire a subset of the <i>t</i><sub>1</sub> samples in order to reduce the acquisition time. We run our MRS-SFT algorithm only along the <i>t</i><sub>1</sub> dimension. Thus, for each value of <i>f</i><sub>2</sub>, we run the 1D MRS-SFT algorithm over <i>x</i>&#8242;(<i>t</i><sub>1</sub>, <i>f</i><sub>2</sub>) to recover the 2D COSY frequency spectrum <img src="../images/in166_1.png" alt="Image"/>.</p>
<p class="indentt">Directly applying the MRS-SFT algorithm for each value of <i>f</i><sub>2</sub>, however, does not work due to the huge amplitude difference between the diagonal and cross-diagonal peaks. The cross-diagonal peaks might be immersed in the tails of the diagonal peaks, and simply running MRS-SFT will only recover the diagonal peaks but treat the cross-diagonal peaks as noises. To cope with this, we need to recover the diagonal peaks first. We start by running the MRS-SFT algorithm but restrict our recovery to the diagonal peaks. Once we have the Off-Grid positions and values of the diagonal peaks, we can reconstruct the truncation artifacts and subtract them from our discrete input signal. After subtracting the diagonal peaks and their tails, the cross diagonal peaks emerge. We can then run the MRS-SFT algorithm to recover the cross-diagonal peaks. <a href="#fig10_3">Figure 10.3</a> demonstrates this process.</p>
<p class="indent">The question that remains is: How to construct and suppress the truncation artifacts caused by the <i>off-grid</i> frequency peaks? Given a list of continuous peaks <img src="../images/in166_2.png" alt="Image"/> and their values <img src="../images/in166_3.png" alt="Image"/>, we can compute the discrete Fourier spectrum at integer positions (<i>f</i><sub>1</sub>, <i>f</i><sub>2</sub>):</p>
<p class="image"><a id="eq10_7"/><img src="../images/eq10_7.png" alt="Image"/></p>
<div class="cap">
<p class="image"><a id="page_167"/><a id="fig10_3"/><img src="../images/fig10_3.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 10.3</b> Iterating between recovering diagonal peaks and cross-diagonal peaks. MRS-SFT starts by recovering the large diagonal peaks. It then subtracts these peaks and their ringing tails from the signal which allows it to recover the smaller cross diagonal peaks. Once both peaks are recovered, MRS-SFT reconstructs the spectrum by removing the ringing tails resulting from the off-grid positions of the peaks.</p>
</div>
<p class="noindent">where <i>N</i><sub>1</sub> and <i>N</i><sub>2</sub> are the total number of increments before subsampling along <i>t</i><sub>1</sub> and <i>t</i><sub>2</sub>, respectively. <img src="../images/in167.png" alt="Image"/> is the discretized sinc function which creates the artifacts. It can be written as:</p>
<p class="image"><a id="eq10_8"/><img src="../images/eq10_8.png" alt="Image"/></p>
<p class="noindent">In our final reconstruction of the output spectrum, we simply suppress the sinc tails by truncating the sinc function:</p>
<p class="image"><a id="eq10_9"/><img src="../images/eq10_9.png" alt="Image"/></p>
<p class="noindent"><a id="page_168"/>where RECT(<i>f</i><sub>1</sub>, <i>f</i><sub>2</sub>) is defined to be 1 in the rectangle &#8722;1 &#8804; <i>f</i><sub>1</sub>, <i>f</i><sub>2</sub> &#8804; 1. The output of our final reconstruction without ringing tails can be written as:</p>
<p class="image"><a id="eq10_10"/><img src="../images/eq10_10.png" alt="Image"/></p>
<p class="h1"><b><a id="ch10_3"/><span class="big">10.3</span>&#160;&#160;Methods</b></p>
<p class="h2"><a id="ch10_3_1"/><b><span class="big1">10.3.1</span>&#160;&#160;Single Voxel Experiments</b></p>
<p class="noindent">We performed experiments on a whole-body 3T MR scanner (Tim Trio Siemens, Erlangen). We used the COSY-LASER sequence (TR = 1.5 s, TE = 30 ms) [Andronesi et al. 2010] to acquire 2D COSY spectra on 3 volunteers and a brain phantom. The acquired MRS data was post-processed in MATLAB using four methods.</p>
<p class="hang"><b>MRS-SFT.</b> The method proposed in this chapter uses 60 <i>t</i><sub>1</sub> increments on volunteers and 64 <i>t</i><sub>1</sub> increments on brain phantom.</p>
<p class="hang"><b>FFT.</b> A truncated FFT which uses 60 <i>t</i><sub>1</sub> increments on volunteers and 64 <i>t</i><sub>1</sub> increments on brain phantom.</p>
<p class="hang"><b>Full-FFT.</b> Longer sampled FFT which uses 160 <i>t</i><sub>1</sub> increments on volunteers and 180 <i>t<sub>1</sub></i> increments on brain phantom.</p>
<p class="hang"><b>Compressive Sensing (CS).</b> An iterative<sup><a id="fn4" href="#rfn4">4</a></sup> thresholding based compressive sensing algorithm which uses 60 <i>t</i><sub>1</sub> increments on volunteers and 64 <i>t</i><sub>1</sub> increments on brain phantom.</p>
<p class="noindentt">For FFT, Full FFT, and CS, we pre-process the samples by multiplying with a QSINE window and using linear prediction to improve the cross peaks and reduce artifacts.</p>
<p class="h2"><a id="ch10_3_2"/><b><span class="big1">10.3.2</span>&#160;&#160;Multi Voxel Experiments</b></p>
<p class="noindent">Correlation chemical shift imaging was acquired with an adiabatic spiral COSY sequence [Andronesi et al. 2012a] which was here improved with MRS-SFT. The experiments were performed on a whole-body 3T MR scanner (Tim Trio, Siemens, Erlangen). Acquisition parameters included: TR = 1.8 s, TE = 30 ms, 72 sparse <i>t</i><sub>1</sub> samples out of 252 consecutive samples, 380 points in <i>t</i><sub>2</sub> zero filled to 512, 10 ppm <a id="page_169"/>spectral window in both <i>f</i><sub>1</sub> and <i>f</i><sub>2</sub> dimensions, 4 averages, a 16&#215;16 voxel matrix, FOV= 200&#215;200 mm, and an acquisition time of 17 min and 32 s. The acquired MRS data was post-process in MATLAB using the MRS-SFT with 72 <i>t</i><sub>1</sub> samples and the Full-FFT with 252 <i>t</i><sub>1</sub> samples.</p>
<p class="indent">The <i>f</i><sub>1</sub> dimension of 2D COSY is also particularly susceptible to scan instabilities arising from frequency drifts and patient motion. Post-processing methods have limited ability to recover spectral quality in particular downgraded water suppression due to frequency drift or change in metabolite signal amplitude due to shift of voxel position across a time series. To alleviate these problems, we incorporated into our 2D COSY acquisition a recently developed real-time motion correction and shim update sequence module.</p>
<p class="h1"><b><a id="ch10_4"/><span class="big">10.4</span>&#160;&#160;MRS Results</b></p>
<p class="h2"><a id="ch10_4_1"/><b><span class="big1">10.4.1</span>&#160;&#160;Single Voxel Results</b></p>
<p class="noindent">The result for phantom data is shown in <a href="#fig10_4">Figure 10.4</a> for the four methods described above (MRS-SFT, FFT, Full-FFT, and CS). The figure shows the 2D MRS spectrum recovered by each method. As can be seen, MRS-SFT is able to eliminate the truncation artifacts while maintaining the cross diagonal peaks. For example, the metabolite Myo-inositol is clearly present only in the MRS-SFT and Full-FFT results. However, the Full-FFT data requires 180/64 = 2.8&#215; more time to acquire all the measurements. The figure also shows that despite using the QSINE window and linear prediction, the other techniques still suffer from significant truncation artifacts. Note that all four spectra have the same scaling along the iso-contour lines and hence changing the window setting to suppress the artifacts would also eliminate the cross diagonal peaks.</p>
<p class="indent">In the case of in-vivo data, i.e., experiments ran on human volunteers, the truncation artifacts are even more severe, as shown in <a href="#fig10_5">Figure 10.5</a>. In this case, the ringing tails are highly prominent in the FFT, Full-FFT, and CS results and hence cause a lot of truncation artifacts which are hard to distinguish from the actual cross diagonal peaks. MRS-SFT, however, can model and subtract these ringing tails making the cross diagonal peaks much more apparent. For example, Choline (Cho) is much clearer in the MRS-SFT result as can be seen in <a href="#fig10_5">Figure 10.5</a>. In this case, even the Full-FFT, which requires 160/60 = 2.67&#215; longer measurement time than MRS-SFT, continues to suffer from artifacts.</p>
<div class="cap">
<p class="image"><a id="page_170"/><a id="fig10_4"/><img src="../images/fig10_4.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 10.4</b> MRS-SFT recovery results on brain phantom data. The figure shows that MRS-SFT can recover all the metabolites similar to a Full FFT while using 180/64 = 2.8&#215; fewer samples. For the same number of samples, a truncated FFT or CS lose some of the metabolites (e.g., Myo) and degrade the quality of the peaks. The following metabolites have been labeled for reference: Choline (Cho), N-Acetylaspartate (NAA), Myo-Inositol (Myo), and Glutamate (Glu).</p>
</div>
<div class="cap">
<p class="image"><a id="page_171"/><a id="fig10_5"/><img src="../images/fig10_5.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 10.5</b> MRS-SFT recovery results on in-vivo data. The figure shows that MRS-SFT has significantly less clutter making it much easier to distinguish artifacts from cross diagonal peaks. For Full FFT, FFT, and CS, it is very hard to distinguish the metabolites from the artifacts and for FFT and CS, some of the metabolites are lost. The following metabolites have been labeled for reference: Choline (Cho), N-Acetylaspartate (NAA), Aspartate (Asp), and Glutamine (Glu).</p>
</div>
<div class="cap">
<p class="tcaption"><a id="page_172"/><a id="tab10_1"/><b>Table 10.1</b> Signal to artifact ratio (dB)</p>
<p class="image"><img src="../images/tab10_1.png" alt="Image"/></p>
</div>
<p class="indent">To quantify the above results, we compute the Signal to Artifact Ratio of the cross diagonal peaks recovered by each of the four methods. The results are shown in <a href="#tab10_1">Table 10.1</a>. As can be seen, MRS-SFT has the highest signal to artifact ratio and which is 8 dB higher than Full-FFT for phantom data and 14 dB higher for in vivo data. MRS-SFT also reduces the average Full Width at Half Maximum (FWHM) of cross-peaks by 40% for in vivo and 25% for phantom compared to the Full-FFT. For example, the line width of NAA (N-acetyl aspartate) is reduced from 0.23 ppm to 0.17 ppm in phantom data and from 0.24 ppm to 0.15 ppm in in vivo data, as shown in <a href="#tab10_1">Table 10.1</a>.</p>
<p class="h2"><a id="ch10_4_2"/><b><span class="big1">10.4.2</span>&#160;&#160;Multi Voxel Results</b></p>
<p class="noindent">In the case of correlation chemical shift imaging, we demonstrate that by using MRS-SFT combined with real-time motion correction, we can recover multi-voxel MRS spectra which does not suffer from artifacts and ringing tails. <a href="#fig10_6a">Figures 10.6(a)</a> and <a href="#fig10_6b">(b)</a> show the resulting spectra of a 4&#215;4 matrix sampled from the 16&#215;16 voxels which were acquired and processed using MRS-SFT and Full-FFT respectively. For all voxels, MRS-SFT can eliminate the <i>t</i><sub>1</sub> truncation artifacts while reducing the measurement time by a factor of 3.5&#215; (252/72).</p>
<p class="indent">The above single voxel and multi-voxel results demonstrate that using MRS-SFT we can:</p>
<p class="bullt">&#8226;&#160;&#160;Reduce the measurement time by almost a factor of three.</p>
<p class="bullt">&#8226;&#160;&#160;Eliminate the t1 truncation artifacts resulting from the ringing tails of the diagonal.</p>
<p class="bullt">&#8226;&#160;&#160;Improve the SNR and resolution of cross-peaks.</p>
<div class="cap">
<p class="image"><a id="page_173"/><a id="fig10_6a"/><img src="../images/fig10_6a.png" alt="Image"/></p>
<p class="image"><a id="fig10_6b"/><img src="../images/fig10_6b.png" alt="Image"/></p>
<p class="figcaption"><b>Figure 10.6</b> Multi-voxel recovery results for MRS-SFT vs. full FFT.</p>
</div>
<p class="h1"><b><a id="ch10_5"/><span class="big">10.5</span>&#160;&#160;Conclusion</b></p>
<p class="noindent">In this chapter, we presented MRS-SFT, a system that leverages the Sparse Fourier Transform to reduce the time the patient spends in an MRI machine while generating clearer images for 2D COSY MRS experiments. Our results indicate the MRS-SFT can reduce the acquisition time by a factor of three and suppress truncation artifacts. MRS-SFT is also superior to Compressed Sensing in terms of reducing the <i>f</i><sub>1</sub> ringing and enhancing the SNR. Typically, 2D COSY spectra reconstructed with conventional FFT <a id="page_174"/>use windowing functions such as QSINE and linear prediction to improve cross-peaks and reduce the artifacts. However, QSINE windowing selectively enhances only some of the cross-peaks and linear prediction reduces the SNR and introduces spiking artifacts. The Sparse Fourier Transform is less biased in finding the cross-peaks and, hence, provides a more robust method in dealing with the limitations of in vivo MRS.</p>
<p class="line"/>
<p class="foot"><a id="rfn1" href="#fn1">1</a>. The <i>t</i><sub>2</sub> time dimension corresponds to the directly measured dimension and hence can be sampled long enough to avoid truncation artifacts along the <i>f</i><sub>2</sub> frequency dimension. We refer the reader to Nishimura [2010] for additional background on MR.</p>
<p class="foot"><a id="rfn2" href="#fn2">2</a>. It is possible that none of the directions can minimize error in which case we do not change the position of this frequency.</p>
<p class="foot"><a id="rfn3" href="#fn3">3</a>. Note that to compute a full Fourier transform of a 2D matrix x, the FFT algorithm computes 1D FFTs along the rows of x followed by 1D FFTs of the columns of x.</p>
<p class="foot"><a id="rfn4" href="#fn4">4</a>. We experimented with several compressive sensing algorithms and we present here the best compressive sensing results which we obtained.</p>
</body>
</html>