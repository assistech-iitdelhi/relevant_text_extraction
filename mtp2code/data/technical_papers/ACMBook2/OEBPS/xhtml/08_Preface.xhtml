<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xml:lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>The Sparse Fourier Transform: Theory and Practice</title>
<link rel="stylesheet" type="text/css" href="../styles/stylesheet.css"/>
<link rel="stylesheet" type="application/vnd.adobe-page-template+xml" href="../styles/page-template.xpgt"/>
</head>
<body>
<p class="fmtitle"><a id="page_xv"/><b>Preface</b></p>
<p class="noindent">The Fourier transform is one of the most fundamental tools for computing the frequency representation of signals. It plays a central role in signal processing, communications, audio and video compression, medical imaging, genomics, astronomy, as well as many other areas. Because of its widespread use, fast algorithms for computing the Fourier transform can benefit a large number of applications. The fastest algorithm for computing the Fourier transform is the Fast Fourier Transform (FFT), which runs in near-linear time making it an indispensable tool for many applications. However, today, the runtime of the FFT algorithm is no longer fast enough especially for big data problems where each dataset can be few terabytes. Hence, faster algorithms that run in sublinear time, i.e., do not even sample all the data points, have become necessary.</p>
<p class="indent">This book addresses the above problem by developing the Sparse Fourier Transform algorithms and building practical systems that use these algorithms to solve key problems in six different applications.</p>
<p class="indent"><a href="10_Part01.xhtml">Part I</a> of the book focuses on the theory front. It introduces the Sparse Fourier Transform algorithms: a family of sublinear time algorithms for computing the Fourier transform faster than FFT. The Sparse Fourier Transform is based on the insight that many real-world signals are sparse, i.e., most of the frequencies have negligible contribution to the overall signal. Exploiting this sparsity, the book introduces several new algorithms which encompass two main axes.</p>
<p class="hang"><b>Runtime Complexity.</b> Nearly optimal Sparse Fourier Transform algorithms are presented that are faster than FFT and have the lowest runtime complexity known to date.</p>
<p class="hang"><b>Sampling Complexity.</b> Sparse Fourier Transform algorithms with optimal sampling complexity are presented in the average case and the same nearly optimal runtime complexity. These algorithms use the minimum number of input data samples and, hence, reduce acquisition cost and I/O overhead.</p>
<p class="indentt"><a id="page_xvi"/><a href="16_Part02.xhtml">Part II</a> of the book focuses on the systems front. It develops software and hardware architectures for leveraging the Sparse Fourier Transform to address practical problems in applied fields. The systems customize the theoretical algorithms to capture the structure of sparsity in each application, and hence maximize the resulting gains. All systems are prototyped and evaluated in accordance with the standards of each application domain. The following list gives an overview of the systems presented in this book.</p>
<p class="hang"><b>Wireless Networks.</b> The book demonstrates how to use the Sparse Fourier Transform to build a wireless receiver that captures GHz-wide signals without sampling at the Nyquist rate. Hence, it enables wideband spectrum sensing and acquisition using cheap commodity hardware.</p>
<p class="hang"><b>Mobile Systems.</b> The Sparse Fourier Transform is used to design a GPS receiver that both reduces the delay to find the location and decreases the power consumption by 2&#215;.</p>
<p class="hang"><b>Computer Graphics.</b> Light fields enable new virtual reality and computational photography applications like interactive viewpoint changes, depth extraction, and refocusing. The book shows that reconstructing light field images using the Sparse Fourier Transform reduces camera sampling requirements and improves image reconstruction quality.</p>
<p class="hang"><b>Medical Imaging.</b> The book enables efficient magnetic resonance spectroscopy (MRS), a new medical imaging technique that can reveal biomarkers for diseases like autism and cancer. The book shows how to improve the image quality while reducing the time a patient spends in an MRI machine by 3&#215; (e.g., from 1 hour to less than 40 minutes).</p>
<p class="hang"><b>Biochemistry.</b> The book demonstrates that the Sparse Fourier Transform reduces Nuclear Magnetic Resonance (NMR) experiment time by 16&#215; (e.g. from weeks to days), enabling high-dimensional NMR needed for discovering complex protein structures.</p>
<p class="hang"><b>Digital Circuits.</b> The book develops a chip with the largest Fourier Transform to date for sparse data. It delivers a 0.75 million point Sparse Fourier Transform chip that consumes 40&#215; less power than prior FFT VLSI implementations.</p>
<p class="h4"><b>Acknowledgments</b></p>
<p class="noindent">The work presented in this book would not have been possible without the help and support of a large group of people to whom I owe a lot of gratitude. I would also like <a id="page_xvii"/>to thank everyone who worked on the Sparse Fourier Transform project. Dina, Piotr, and Eric Price were the first people to work with me. They played an indispensable role in developing the theoretical Sparse Fourier Transform algorithms. The next person to work with me was Fadel Adib who helped me take on the hard task of kickstarting the applications. After that, Lixin Shi helped me bring to life more applications. He worked with me tirelessly for a very long time while making the work process extremely enjoyable. Finally, I would like to thank all of the remaining people who contributed to the material in this book: Elfar Adalsteinsson, Fredo Durand, Omid Abari, Ezzeldin Hamed, Abe Davis, Badih Ghazi, Ovidiu Andronesi, Vladislav Orekhov, Abhinav Agarwal, and Anantha Chandrakasan.</p>
<p class="noindentt">Haitham Hassanieh</p>
<p class="noindent">January 2018</p>
</body>
</html>