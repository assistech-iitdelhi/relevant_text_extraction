<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
		<title>Ch-01</title>
		<link href="../Styles/idGeneratedStyles.css" rel="stylesheet" type="text/css"/>
	</head>
	<body id="Ch-01" lang="en-US" xml:lang="en-US" xmlns:xml="http://www.w3.org/XML/1998/namespace">
		<div id="_idContainer167" class="Basic-Graphics-Frame _idGenObjectStyleOverride-1">
			<p><a href="http://epathshala.nic.in/QR/?id=12079CH01"><img align="right" alt="APactWiththeSun-001" class="right-img" src="../Images/QR12079C1.png"/></a></p>

          <div class="clear"></div>
<div class="_idGenObjectLayout-1"><div id="_idContainer008">
					<div id="_idContainer006" class="Basic-Graphics-Frame _idGenObjectStyleOverride-1">
						<h4 class="ParaOverride-4">Chapter 1<br/></h4>
<h1 class="ParaOverride-4" id="sigil_toc_id_1">RELATIONS AND FUNCTIONS<br/></h1>
<p class="ParaOverride-4">There is no permanent place in the world for ugly mathematics ... . It may be very hard to define mathematical beauty but that is just as true of beauty of any kind, we may not know quite what we mean by a beautiful poem, but that does not prevent us from recognising one when we read it. — G. H. Hardy </p>
					</div>
					<div id="_idContainer007" class="Basic-Graphics-Frame _idGenObjectStyleOverride-4">
					</div>
				</div>
			</div>
			<h3 class="heading" id="sigil_toc_id_2"><span class="CharOverride-8">1.1  Introduction</span></h3>
			<p class="Body-Text ParaOverride-5">Recall that the notion of relations and functions, domain, co-domain and range have been introduced in Class XI along with different types of specific real valued functions and their graphs. The concept of the term ‘relation’ in mathematics has been drawn from the meaning of relation in English language, according to which two objects or quantities are related if there is a recognisable connection or link between the two objects or quantities. Let  A be the set of students of Class XII of a school and B be the set of students of Class XI of the same school. Then some of the examples of relations from A to B are </p>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer011">
					<div id="_idContainer009" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
						<img class="_idGenObjectAttribute-1" src="../Images/Figure.png" alt=""/>
					</div>
					<div id="_idContainer010" class="Basic-Graphics-Frame _idGenObjectStyleOverride-1">
						<p class="ParaOverride-6" style="text-align: center;"><span class="CharOverride-9">Lejeune Dirichlet</span></p>
						<p class="ParaOverride-6" style="text-align: center;"><span class="CharOverride-9"> (1805-1859)</span></p>
					</div>
				</div>
			</div>
			<p class="Remark-tab ParaOverride-7">	(i)	{(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span>	A × B: <span class="CharOverride-10">a</span> is brother of <span class="CharOverride-10">b</span>}, </p>
			<p class="Body-Text ParaOverride-8">	(ii)	{(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span>	A × B: <span class="CharOverride-10">a</span> is sister of <span class="CharOverride-10">b</span>}, </p>
			<p class="Body-Text ParaOverride-9">	(iii)	{(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span>	A × B: age of <span class="CharOverride-10">a</span> is greater than age of <span class="CharOverride-10">b</span>}, </p>
			<p class="Body-Text ParaOverride-9">	(iv)	{(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span>	A × B: total marks obtained by <span class="CharOverride-10">a</span> in the<span class="CharOverride-10"> </span>final examination is less than the total marks obtained by <span class="CharOverride-10">b</span> in the final examination}, </p>
			<p class="Body-Text ParaOverride-8">	(v)	{(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> A × B: <span class="CharOverride-10">a</span> lives in the same locality as <span class="CharOverride-10">b</span>}.  However, abstracting from this, we define mathematically a relation R from A to B as an arbitrary subset <br/>of A × B. </p>
			<p class="Body-Text ParaOverride-7">If (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R, we say that <span class="CharOverride-10">a</span> is related to <span class="CharOverride-10">b</span> under the relation R and we write as <span class="CharOverride-10">a</span> R <span class="CharOverride-10">b</span>. In general, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R, we do not bother whether there is a recognisable connection or link between <span class="CharOverride-10">a </span>and <span class="CharOverride-10">b</span>. As seen in Class XI, functions are special kind of relations. </p>
			<p class="Body-Text">In this chapter, we will study different types of relations and functions, composition of functions, invertible functions and binary operations.</p>
			<h3 class="heading" id="sigil_toc_id_3"><span class="CharOverride-8">1.2  Ty</span><span class="CharOverride-8">pes of Relations</span></h3>
			<p class="Body-Text ParaOverride-5">In this section, we would like to study different types of relations. We know that a relation in a set A is a subset of A × A. Thus, the empty set <span class="CharOverride-11">φ </span>and A × A are two extreme relations. For illustration, consider a relation R in the set A = {1, 2, 3, 4} given by R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>): <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span> = 10}. This is the empty set, as no pair (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) satisfies the condition <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span> = 10. Similarly, R<span class="CharOverride-11">′</span> = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : | <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span> | <span class="CharOverride-11">≥</span> 0} is the whole set A × A, as all pairs (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) in A × A satisfy | <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span> | <span class="CharOverride-11">≥</span> 0. These two extreme examples lead us to the following definitions. </p>
			<p class="Definition"><span class="CharOverride-12">Definition 1</span> A relation R in a set A is called <span class="CharOverride-10">empty relation</span>, if no element of A is related to any element of A, i.e., R = <span class="CharOverride-11">φ ⊂</span> A × A. </p>
			<p class="Definition"><span class="CharOverride-12">Definition 2</span><span class="CharOverride-13">  </span>A relation R in a set A is called <span class="CharOverride-10">universal relation</span>, if each element of A is related to every element of A, i.e., R = A × A.</p>
			<p class="Body-Text ParaOverride-10">Both the empty relation and the universal relation are some times called <span class="CharOverride-10">trivial relations</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 1</span> Let A be the set of all students of a boys school. Show that the relation R in A given by R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">a</span> is sister of <span class="CharOverride-10">b</span>} is the empty relation and R<span class="CharOverride-11">′</span> = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : the difference between heights of <span class="CharOverride-10">a </span>and <span class="CharOverride-10">b</span> is less than 3 meters} is the universal relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since the school is boys school, no student of the school can be sister of any student of the school. Hence, R = <span class="CharOverride-11">φ</span>, showing that R is the empty relation. It is also obvious that the difference between heights of any two students of the school has to be less than 3 meters. This shows that R<span class="CharOverride-11">′</span> = A × A is the universal relation.</p>
			<p class="Remarks ParaOverride-11"><span class="CharOverride-15">Remark</span> In Class XI, we have seen two ways of representing a relation, namely raster method and set builder method. However, a relation R in the set {1, 2, 3, 4} defined by R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span> + 1} is also expressed as <span class="CharOverride-10">a </span>R <span class="CharOverride-10">b</span> if and only if <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span> + 1 by many authors. We may also use this notation, as and when convenient. </p>
			<p class="Body-Text">If (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R, we say that <span class="CharOverride-10">a</span> is related to <span class="CharOverride-10">b</span> and we denote it as <span class="CharOverride-10">a</span> R <span class="CharOverride-10">b</span>.</p>
			<p class="Body-Text">One of the most important relation, which plays a significant role in Mathematics, is an<span class="CharOverride-10"> equivalence relation</span>. To study equivalence relation, we first consider three types of relations, namely reflexive, symmetric and transitive.</p>
			<p class="Definition"><span class="CharOverride-12">Definition 3</span> A relation R in a set A is called </p>
			<p class="option-1">	(i)	<span class="CharOverride-10">reflexive</span>, if (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R, for every <span class="CharOverride-10">a</span><span class="CharOverride-16"> </span><span class="CharOverride-11">∈</span> A, </p>
			<p class="option-1">	(ii)	<span class="CharOverride-10">symmetric</span>, if (<span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">∈</span> R implies that (<span class="CharOverride-10">a</span><span class="CharOverride-16">2</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>)<span class="CharOverride-16"> </span><span class="CharOverride-11">∈</span> R, for all <span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">2</span> <span class="CharOverride-11">∈</span> A.</p>
			<p class="option-1">	(iii)	<span class="CharOverride-10">transitive</span>, if (<span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">∈</span> R and (<span class="CharOverride-10">a</span><span class="CharOverride-16">2</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">3</span>)<span class="CharOverride-16"> </span><span class="CharOverride-11">∈</span> R implies that (<span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">3</span>)<span class="CharOverride-16"> </span><span class="CharOverride-11">∈</span> R, for all <span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">2</span><span class="CharOverride-11">, </span><span class="CharOverride-10">a</span><span class="CharOverride-16">3</span><span class="CharOverride-11"> ∈</span> A.</p>
			<p class="Definition ParaOverride-10"><span class="CharOverride-12">Definition </span><span class="CharOverride-12">4</span> A relation R in a set A is said to be an <span class="CharOverride-10">equivalence relation</span> if R is reflexive, symmetric and transitive. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 2</span><span class="CharOverride-14"> </span>Let T be the set of all triangles in a plane with R a relation in T given by R = {(T<span class="CharOverride-16">1</span>, T<span class="CharOverride-16">2</span>) : T<span class="CharOverride-16">1</span> is congruent to T<span class="CharOverride-16">2</span>}. Show that R is an equivalence relation. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>R is reflexive, since every triangle is congruent to itself. Further, (T<span class="CharOverride-16">1</span>, T<span class="CharOverride-16">2</span>) <span class="CharOverride-11">∈</span> R <span class="CharOverride-11">⇒</span> T<span class="CharOverride-16">1</span> is congruent to T<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> T<span class="CharOverride-16">2</span> is congruent to T<span class="CharOverride-16">1</span> <span class="CharOverride-11">⇒</span> (T<span class="CharOverride-16">2</span>, T<span class="CharOverride-16">1</span>) <span class="CharOverride-11">∈</span> R. Hence, R is symmetric. Moreover, (T<span class="CharOverride-16">1</span>, T<span class="CharOverride-16">2</span>), (T<span class="CharOverride-16">2</span>, T<span class="CharOverride-16">3</span>) <span class="CharOverride-11">∈</span> R <span class="CharOverride-11">⇒</span> T<span class="CharOverride-16">1</span> is  congruent to T<span class="CharOverride-16">2</span> and T<span class="CharOverride-16">2</span> is congruent to T<span class="CharOverride-16">3</span> <span class="CharOverride-11">⇒</span> T<span class="CharOverride-16">1</span> is congruent to T<span class="CharOverride-16">3</span> <span class="CharOverride-11">⇒</span> (T<span class="CharOverride-16">1</span>, T<span class="CharOverride-16">3</span>) <span class="CharOverride-11">∈</span> R. Therefore, R is an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 3</span><span class="CharOverride-14"> </span>Let L be the set of all lines in a plane and R be the relation in L defined as  R = {(L<span class="CharOverride-16">1</span>, L<span class="CharOverride-16">2</span>) : L<span class="CharOverride-16">1</span> is perpendicular to L<span class="CharOverride-16">2</span>}. Show that R is symmetric but neither reflexive nor transitive. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>R is not reflexive, as a line L<span class="CharOverride-16">1</span> can not be perpendicular to itself, i.e., (L<span class="CharOverride-16">1</span>, L<span class="CharOverride-16">1</span>) <span class="CharOverride-11">∉</span> R. R is symmetric as (L<span class="CharOverride-16">1</span>, L<span class="CharOverride-16">2</span>) <span class="CharOverride-11">∈</span> R </p>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer015">
					<div id="_idContainer013" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
						<img class="_idGenObjectAttribute-1" src="../Images/F_1.1.png" alt=""/>
					</div>
					<div id="_idContainer014" class="Basic-Graphics-Frame _idGenObjectStyleOverride-1">
						<p class="Remarks ParaOverride-12 cp" style="text-align: center;"><span class="CharOverride-17"><i>Fig 1.1</i></span></p>
					</div>
				</div>
			</div>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-11">⇒</span> 		L<span class="CharOverride-16">1</span> is perpendicular to L<span class="CharOverride-16">2</span></p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-11">⇒</span> 		L<span class="CharOverride-16">2</span> is perpendicular to L<span class="CharOverride-16">1</span> </p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-11">⇒</span> 		(L<span class="CharOverride-16">2</span>, L<span class="CharOverride-16">1</span>) <span class="CharOverride-11">∈</span> R. </p>
			<p class="Remarks ParaOverride-13">R is not transitive. Indeed, if L<span class="CharOverride-16">1</span> is perpendicular to L<span class="CharOverride-16">2</span> and L<span class="CharOverride-16">2</span> is perpendicular to L<span class="CharOverride-16">3</span>, then L<span class="CharOverride-16">1</span> can never be perpendicular to L<span class="CharOverride-16">3</span>. In fact, L<span class="CharOverride-16">1</span> is parallel to L<span class="CharOverride-16">3</span>, i.e., (L<span class="CharOverride-16">1</span>, L<span class="CharOverride-16">2</span>) <span class="CharOverride-11">∈</span> R, (L<span class="CharOverride-16">2</span>, L<span class="CharOverride-16">3</span>) <span class="CharOverride-11">∈</span> R but (L<span class="CharOverride-16">1</span>, L<span class="CharOverride-16">3</span>) <span class="CharOverride-11">∉</span> R.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 4</span><span class="CharOverride-14"> </span>Show that the relation R in the set {1, 2, 3} given by R = {(1, 1), (2, 2), (3, 3), (1, 2), (2, 3)} is reflexive but neither symmetric nor transitive. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>R is reflexive, since (1, 1), (2, 2) and (3, 3) lie in R. Also, R is not symmetric, as (1, 2) <span class="CharOverride-11">∈</span> R but (2, 1) <span class="CharOverride-11">∉</span> R. Similarly, R is not transitive, as (1, 2) <span class="CharOverride-11">∈</span> R and (2, 3) <span class="CharOverride-11">∈</span> R but (1, 3) <span class="CharOverride-11">∉</span> R.</p>
			<p class="Remarks ParaOverride-11"><span class="CharOverride-12">Example 5</span><span class="CharOverride-14"> </span>Show that the relation R in the set <span class="CharOverride-14">Z</span> of integers given by R = {(<span class="CharOverride-10">a, b</span>) : 2 divides <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>} is an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>R is reflexive, as 2 divides (<span class="CharOverride-10">a </span>– <span class="CharOverride-10">a</span>) for all <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈ </span><span class="CharOverride-14">Z</span>.<span class="CharOverride-10"> </span>Further,<span class="CharOverride-10"> </span>if (<span class="CharOverride-10">a, b</span>) <span class="CharOverride-11">∈</span> R, then 2 divides <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>. Therefore, 2 divides <span class="CharOverride-10">b</span> – <span class="CharOverride-10">a</span>. Hence, (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R, which shows that R is symmetric. Similarly, if (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R and (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R, then <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span> and <span class="CharOverride-10">b </span>– <span class="CharOverride-10">c</span> are divisible by 2. Now, <span class="CharOverride-10">a</span> – <span class="CharOverride-10">c</span> = (<span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>) + (<span class="CharOverride-10">b </span>– <span class="CharOverride-10">c</span>) is even (Why?). So, (<span class="CharOverride-10">a</span> – <span class="CharOverride-10">c</span>) is divisible by 2. This shows that R is transitive. Thus, R is an equivalence relation in <span class="CharOverride-14">Z</span>.</p>
			<p class="Body-Text">In Example 5, note that all even integers are related to zero, as (0, ± 2), (0, ± 4) etc., lie in R and no odd integer is related to 0, as (0, ± 1), (0, ± 3) etc., do not lie in R. Similarly, all odd integers are related to one and no even integer is related to one. Therefore, the set E of all even integers and the set O of all odd integers are subsets of <span class="CharOverride-14">Z</span> satisfying following conditions:</p>
			<p class="option-body-text ParaOverride-8">	(i)	All elements of E are related to each other and all elements of O are related to each other. </p>
			<p class="option-body-text ParaOverride-8">	(ii)	No element of E is related to any element of O and vice-versa.</p>
			<p class="option-body-text ParaOverride-8">	(iii)	E and O are disjoint and <span class="CharOverride-14">Z</span> = E <span class="CharOverride-11">∪ </span>O. </p>
			<p class="Body-Text">The subset E is called the <span class="CharOverride-10">equivalence class containing zero </span>and is denoted by [0]. Similarly, O is the equivalence class containing 1 and is denoted by [1]. Note that [0] <span class="CharOverride-11">≠</span> [1], [0] = [2<span class="CharOverride-10">r</span>] and [1] = [2<span class="CharOverride-10">r</span> + 1], <span class="CharOverride-10">r</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">Z</span>. Infact, what we have seen above is true for an arbitrary equivalence relation R in a set X. Given an arbitrary equivalence relation R in an arbitrary set X, R divides X into mutually disjoint subsets A<span class="CharOverride-18">i</span> called partitions or subdivisions  of X satisfying:</p>
			<p class="option-body-text ParaOverride-16">	(i)	all elements of A<span class="CharOverride-18">i</span> are related to each other, for all <span class="CharOverride-10">i</span>. </p>
			<p class="option-body-text ParaOverride-16">	(ii)	no element of A<span class="CharOverride-18">i</span> is related to any element of A<span class="CharOverride-18">j</span>, <span class="CharOverride-10">i</span> <span class="CharOverride-11">≠</span> <span class="CharOverride-10">j</span>.</p>
			<p class="option-body-text ParaOverride-16">	(iii)	<span class="CharOverride-11">∪</span> A<span class="CharOverride-18">j</span> = X and A<span class="CharOverride-18">i</span> <span class="CharOverride-11">∩</span> A<span class="CharOverride-18">j</span> = <span class="CharOverride-11">φ</span>, <span class="CharOverride-10">i</span> <span class="CharOverride-11">≠</span> <span class="CharOverride-10">j</span>.</p>
			<p class="Body-Text">The subsets A<span class="CharOverride-18">i</span> are called <span class="CharOverride-10">equivalence classes</span>. The interesting part of the situation is that we can go reverse also. For example, consider a subdivision of the set <span class="CharOverride-14">Z</span> given by three mutually disjoint subsets A<span class="CharOverride-16">1</span>, A<span class="CharOverride-16">2</span> and A<span class="CharOverride-16">3</span> whose union is <span class="CharOverride-14">Z</span> with </p>
			<p class="Body-Text">	A<span class="CharOverride-16">1</span> = {<span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">Z</span> : <span class="CharOverride-10">x</span> is a multiple of 3} = {..., – 6, – 3, 0, 3, 6, ...}</p>
			<p class="Body-Text">	A<span class="CharOverride-16">2</span> = {<span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">Z</span> : <span class="CharOverride-10">x </span>– 1 is a multiple of 3} = {..., – 5, – 2, 1, 4, 7, ...}</p>
			<p class="Body-Text">	A<span class="CharOverride-16">3</span> = {<span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">Z</span> : <span class="CharOverride-10">x </span>– 2 is a multiple of 3} = {..., – 4, – 1, 2, 5, 8, ...}</p>
			<p class="Body-Text ParaOverride-10">Define a relation R in <span class="CharOverride-14">Z</span> given by R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : 3 divides <span class="CharOverride-10">a </span>– <span class="CharOverride-10">b</span>}. Following the arguments similar to those used in Example 5, we can show that R is an equivalence relation. Also, A<span class="CharOverride-16">1</span> coincides with the set of all integers in <span class="CharOverride-14">Z</span> which are related to zero, A<span class="CharOverride-16">2</span> coincides with the set of all integers which are related to 1 and A<span class="CharOverride-16">3</span> coincides with the set of all integers in <span class="CharOverride-14">Z</span> which are related to 2. Thus, A<span class="CharOverride-16">1</span> = [0], A<span class="CharOverride-16">2</span> = [1] and A<span class="CharOverride-16">3</span> = [2]. <br/>In fact, A<span class="CharOverride-16">1</span> = [3<span class="CharOverride-10">r</span>], A<span class="CharOverride-16">2</span> = [3<span class="CharOverride-10">r</span> + 1] and A<span class="CharOverride-16">3</span> = [3<span class="CharOverride-10">r</span> + 2], for all <span class="CharOverride-10">r</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">Z</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 6</span> Let R be the relation defined in the set A = {1, 2, 3, 4, 5, 6, 7} by R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : both <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span> are either odd or even}. Show that R is an equivalence relation. Further, show that all the elements of the subset {1, 3, 5, 7} are related to each other and all the elements of the subset {2, 4, 6} are related to each other, but no element of the subset {1, 3, 5, 7} is related to any element of the subset {2, 4, 6}.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Given any element <span class="CharOverride-10">a</span> in A, both <span class="CharOverride-10">a</span> and <span class="CharOverride-10">a</span> must be either odd or even, so that (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R. Further, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R <span class="CharOverride-11">⇒</span> both <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span> must be either odd or even <span class="CharOverride-11"><br/>⇒</span> (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R. Similarly, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R and (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R <span class="CharOverride-11">⇒</span> all elements <span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>, must be either even or odd simultaneously <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R. Hence, R is an equivalence relation. Further, all the elements of {1, 3, 5, 7} are related to each other, as all the elements of this subset are odd. Similarly, all the elements of the subset {2, 4, 6} are related to each other, as all of them are even. Also, no element of the subset {1, 3, 5, 7} can be related to any element of {2, 4, 6}, as elements of {1, 3, 5, 7} are odd, while elements of {2, 4, 6} are even.</p>
			<h3 class="Exercise" style="text-align: center;" id="sigil_toc_id_4"><span class="CharOverride-8">EXERCISE 1.1</span></h3>
			<p class="option-3-aline">	<span class="CharOverride-12">1.</span>	Determine whether each of the following relations are reflexive, symmetric and transitive:</p>
			<p class="option--i-----ii- ParaOverride-7">	(i)	Relation R in the set A = {1, 2, 3, ..., 13, 14} defined as </p>
			<p class="option--i-----ii- ParaOverride-17">R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : 3<span class="CharOverride-10">x</span> – <span class="CharOverride-10">y</span> = 0}</p>
			<p class="option--i-----ii- ParaOverride-7">	(ii)	Relation R in the set <span class="CharOverride-14">N</span> of natural numbers defined as </p>
			<p class="option--i-----ii- ParaOverride-17">R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">y </span>= <span class="CharOverride-10">x</span> + 5 and <span class="CharOverride-10">x</span> &lt; 4}</p>
			<p class="option--i-----ii- ParaOverride-7">	(iii)	Relation R in the set A = {1, 2, 3, 4, 5, 6} as </p>
			<p class="option--i-----ii- ParaOverride-17">R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">y </span>is divisible by <span class="CharOverride-10">x</span>}</p>
			<p class="option--i-----ii- ParaOverride-7">	(iv)	Relation R in the set <span class="CharOverride-14">Z</span> of all integers defined as </p>
			<p class="option--i-----ii- ParaOverride-12">R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>– <span class="CharOverride-10">y</span> is an integer}</p>
			<p class="option--i-----ii- ParaOverride-18">	(v)	Relation R in the set A of human beings in a town at a particular time given by</p>
			<p class="option--i-----ii-">		(a)  R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>and <span class="CharOverride-10">y</span> work at the same place}</p>
			<p class="option--i-----ii-">		(b)  R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>and <span class="CharOverride-10">y</span> live in the same locality}</p>
			<p class="option--i-----ii-">		(c)  R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>is exactly 7 cm taller than <span class="CharOverride-10">y</span>}</p>
			<p class="option--i-----ii-">		(d)  R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>is wife of <span class="CharOverride-10">y</span>}</p>
			<p class="option--i-----ii-">		(e)  R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>is father of <span class="CharOverride-10">y</span>}</p>
			<p class="option-3-aline ParaOverride-7">	<span class="CharOverride-12">2.</span>	Show that the relation R in the set <span class="CharOverride-14">R</span> of real numbers, defined as </p>
			<p class="option-3-aline ParaOverride-7"><span class="CharOverride-14">		</span>R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">a</span> <span class="CharOverride-11">≤</span> <span class="CharOverride-10">b</span><span class="CharOverride-19">2</span>} is neither reflexive nor symmetric nor transitive.</p>
			<p class="option-3-aline ParaOverride-7">	<span class="CharOverride-12">3.</span>	Check whether the relation R defined in the set {1, 2, 3, 4, 5, 6} as </p>
			<p class="option-3-aline ParaOverride-7">		R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">b = a</span> + 1} is reflexive, symmetric or transitive.</p>
			<p class="option-3-aline ParaOverride-7">	<span class="CharOverride-12">4.</span><span class="CharOverride-14">	</span>Show that the relation R in <span class="CharOverride-14">R</span> defined as R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">a</span> <span class="CharOverride-11">≤</span> <span class="CharOverride-10">b</span>}, is reflexive and transitive but not symmetric.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">5.</span><span class="CharOverride-14">	</span>Check whether the relation R in <span class="CharOverride-14">R</span> defined by R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">a </span><span class="CharOverride-11">≤</span> <span class="CharOverride-10">b</span><span class="CharOverride-19">3</span>} is reflexive, symmetric or transitive.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">6.</span>	Show that the relation R in  the set {1, 2, 3} given by R = {(1, 2), (2, 1)} is symmetric but neither reflexive nor transitive. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">7.</span><span class="CharOverride-13">	</span>Show that the relation R in the set A of all the books in a library of a college, given by R = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x</span> and <span class="CharOverride-10">y</span> have same number of pages} is an equivalence relation.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">8.</span><span class="CharOverride-14">	</span>Show that the relation R in the set A = {1, 2, 3, 4, 5} given by </p>
			<p class="option-3-aline">		R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : |<span class="CharOverride-10">a </span>– <span class="CharOverride-10">b</span>| is even}, is an equivalence relation. Show that all the elements of {1, 3, 5} are related to each other and all the elements of {2, 4} are related to each other. But  no element of {1, 3, 5} is related to any element of {2, 4}.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">9.</span><span class="CharOverride-14">	</span>Show that each of the relation R in the set A = {<span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">Z</span> : 0 <span class="CharOverride-11">≤</span> <span class="CharOverride-10">x</span> <span class="CharOverride-11">≤</span> 12}, given by </p>
			<p class="option--i-----ii-">	(i)	R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : |<span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>| is a multiple of 4}</p>
			<p class="option--i-----ii-">	(ii)	R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) : <span class="CharOverride-10">a</span> = <span class="CharOverride-10">b</span>}</p>
			<p class="option-3-aline">		is an equivalence relation. Find the set of all elements related to 1 in each case. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">10.</span><span class="CharOverride-14">	</span>Give an example of a relation. Which is </p>
			<p class="option--i-----ii-">	(i)	Symmetric but neither reflexive nor transitive.</p>
			<p class="option--i-----ii-">	(ii)	Transitive but neither reflexive nor symmetric.</p>
			<p class="option--i-----ii-">	(iii)	Reflexive and symmetric but not transitive.</p>
			<p class="option--i-----ii-">	(iv)	Reflexive and transitive but not symmetric.</p>
			<p class="option--i-----ii-">	(v)	Symmetric and transitive but not reflexive.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">11.</span>	Show that the relation R in the set A of points in a plane given by R = {(P, Q) : distance of the point P from the origin is same as the distance of the point Q from the origin}, is an equivalence relation. Further, show that the set of all points related to a point P <span class="CharOverride-11">≠</span> (0, 0) is the circle passing through P with origin as centre. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">12.</span><span class="CharOverride-14">	</span>Show that the relation R defined in the set A of all triangles as R = {(T<span class="CharOverride-16">1</span>, T<span class="CharOverride-16">2</span>) : T<span class="CharOverride-16">1</span> is similar to T<span class="CharOverride-16">2</span>}, is equivalence relation. Consider three right angle triangles T<span class="CharOverride-16">1</span> with sides 3, 4, 5,  T<span class="CharOverride-16">2</span> with sides 5, 12, 13 and T<span class="CharOverride-16">3</span> with sides 6, 8, 10. Which triangles among T<span class="CharOverride-16">1</span>, T<span class="CharOverride-16">2</span> and T<span class="CharOverride-16">3</span> are related?</p>
			<p class="option-3-aline">	<span class="CharOverride-12">13.</span><span class="CharOverride-14">	</span>Show that the relation R defined in the set A of all polygons as R = {(P<span class="CharOverride-16">1</span>, P<span class="CharOverride-16">2</span>) : <br/>P<span class="CharOverride-16">1</span> and P<span class="CharOverride-16">2</span> have same number of sides}, is an equivalence relation. What is the set of all elements in A related to the right angle triangle T with sides 3, 4 and 5?</p>
			<p class="option-3-aline">	<span class="CharOverride-12">14.</span><span class="CharOverride-14">	</span>Let L be the set of all lines in XY plane and R be the relation in L defined as R = {(L<span class="CharOverride-16">1</span>, L<span class="CharOverride-16">2</span>) : L<span class="CharOverride-16">1</span> is parallel to L<span class="CharOverride-16">2</span>}. Show that R is an equivalence relation. Find the set of all lines related to the line <span class="CharOverride-10">y</span> = 2<span class="CharOverride-10">x</span> + 4. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">15.</span><span class="CharOverride-14">	</span>Let R be the relation in the set {1, 2, 3, 4} given by R = {(1, 2), (2, 2), (1, 1), (4,4), (1, 3), (3, 3), (3, 2)}. Choose the correct answer.</p>
			<p class="Opt-4-A-D">	(A)	R is reflexive and symmetric but not transitive.</p>
			<p class="Opt-4-A-D">	(B)	R is reflexive and transitive but not symmetric.</p>
			<p class="Opt-4-A-D">	(C)	R is symmetric and transitive but not reflexive.</p>
			<p class="Opt-4-A-D">	(D)	R is an equivalence relation.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">16.</span><span class="CharOverride-14">	</span>Let R be the relation in the set <span class="CharOverride-14">N</span> given by R = {(<span class="CharOverride-10">a</span>,<span class="CharOverride-10"> b</span>) : <span class="CharOverride-10">a</span> = <span class="CharOverride-10">b</span> – 2, <span class="CharOverride-10">b</span> &gt; 6}. Choose the correct answer.</p>
			<p class="Opt--4-a---d">	(A)	(2, 4) <span class="CharOverride-11">∈</span> R	(B) 	(3, 8) <span class="CharOverride-11">∈</span> R	(C)	(6, 8) <span class="CharOverride-11">∈</span> R	(D)	(8, 7) <span class="CharOverride-11">∈</span> R</p>
			<h3 class="heading" id="sigil_toc_id_5"><span class="CharOverride-8">1.3  Types of Functions</span></h3>
			<p class="Body-Text ParaOverride-5">The notion of a function along with some special functions like identity function, constant function, polynomial function, rational function, modulus function, signum function etc. along with their graphs have been given in Class XI. </p>
			<p class="Body-Text">Addition, subtraction, multiplication and division of two functions have also been studied. As the concept of function is of paramount importance in mathematics and among other  disciplines as well, we would like to extend our study about function from where we finished earlier. In this section, we would like to study different types of functions. </p>
			<p class="Body-Text">Consider the functions  <span class="CharOverride-10">f</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">f</span><span class="CharOverride-16">2</span>, <span class="CharOverride-10">f</span><span class="CharOverride-16">3</span> and <span class="CharOverride-10">f</span><span class="CharOverride-16">4</span> given by the following diagrams.</p>
			<p class="Body-Text">In Fig 1.2, we observe that the images of distinct elements of X<span class="CharOverride-16">1 </span>under the function <span class="CharOverride-10">f</span><span class="CharOverride-16">1</span> are distinct, but the image of two distinct elements 1 and 2 of X<span class="CharOverride-16">1</span> under <span class="CharOverride-10">f</span><span class="CharOverride-16">2</span> is same, namely <span class="CharOverride-10">b</span>. Further, there are some elements like <span class="CharOverride-10">e</span> and <span class="CharOverride-10">f</span> in X<span class="CharOverride-16">2</span> which are not images of any element of X<span class="CharOverride-16">1</span> under <span class="CharOverride-10">f</span><span class="CharOverride-16">1</span>, while all elements of X<span class="CharOverride-16">3</span> are images of some elements of X<span class="CharOverride-16">1</span> under <span class="CharOverride-10">f</span><span class="CharOverride-16">3</span>. The above observations lead to the following definitions:</p>
			<p class="Definition"><span class="CharOverride-12">Definition 5</span> A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is defined to be <span class="CharOverride-10">one-one</span> (or <span class="CharOverride-10">injective</span>), if the images of distinct elements of X under <span class="CharOverride-10">f</span> are distinct, i.e., for every <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> <span class="CharOverride-11">∈</span> X, <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) implies <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>. Otherwise, <span class="CharOverride-10">f</span> is called <span class="CharOverride-10">many-one</span>. </p>
			<p class="Body-Text">The function <span class="CharOverride-10">f</span><span class="CharOverride-16">1</span> and <span class="CharOverride-10">f</span><span class="CharOverride-16">4 </span>in Fig 1.2 (i) and (iv) are one-one and the function <span class="CharOverride-10">f</span><span class="CharOverride-16">2</span> and <span class="CharOverride-10">f</span><span class="CharOverride-16">3 </span>in Fig 1.2 (ii) and (iii) are many-one.</p>
			<p class="Definition"><span class="CharOverride-12">Definition 6</span><span class="CharOverride-14"> </span>A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is said to be <span class="CharOverride-10">onto</span> (or <span class="CharOverride-10">surjective</span>), if every element of Y is the image of some element of X under <span class="CharOverride-10">f</span>, i.e., for every <span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> Y, there exists an element <span class="CharOverride-10">x</span> in X such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">y</span>. </p>
			<p class="Body-Text">The function <span class="CharOverride-10">f</span><span class="CharOverride-16">3</span> and <span class="CharOverride-10">f</span><span class="CharOverride-16">4 </span>in Fig 1.2 (iii), (iv) are onto and the function <span class="CharOverride-10">f</span><span class="CharOverride-16">1</span> in Fig 1.2 (i) is not onto as elements <span class="CharOverride-10">e</span>, <span class="CharOverride-10">f</span> in X<span class="CharOverride-16">2</span> are not the image of any element in X<span class="CharOverride-16">1</span> under <span class="CharOverride-10">f</span><span class="CharOverride-16">1</span>.</p>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer019">
					<div id="_idContainer016" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
						<img class="_idGenObjectAttribute-1" src="../Images/F_1.2_%28i%29_%28ii%29.png" alt=""/>
					</div>
					<div id="_idContainer017" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
						<img class="_idGenObjectAttribute-1" src="../Images/F_1.2_%28iii%29_%28iv%29.png" alt=""/>
					</div>
					<div id="_idContainer018" class="Basic-Graphics-Frame _idGenObjectStyleOverride-1">
						<p class="Body-Text ParaOverride-14 cp" style="text-align: center;"><span class="CharOverride-17">Fig 1.2 (i) to (iv)</span></p>
					</div>
				</div>
			</div>
			<p class="Remarks"><span class="CharOverride-15"><b>Remark</b> </span> <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is onto if and only if Range of <span class="CharOverride-10">f</span> = Y.</p>
			<p class="Definition ParaOverride-19"><span class="CharOverride-12">Definition 7</span><span class="CharOverride-14"> </span>A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is said to be <span class="CharOverride-10">one-one </span>and<span class="CharOverride-10"> onto</span> (or <span class="CharOverride-10">bijective</span>), if <span class="CharOverride-10">f</span> is both one-one and onto.</p>
			<p class="Body-Text ParaOverride-10">The function <span class="CharOverride-10">f</span><span class="CharOverride-16">4</span> in Fig 1.2 (iv) is one-one and onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 7</span><span class="CharOverride-14"> </span>Let A be the set of all 50 students of Class X in a school. Let <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> be function defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = roll number of the student <span class="CharOverride-10">x</span>. Show that <span class="CharOverride-10">f</span> is one-one <br/>but not onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>No two different students of the class can have same roll number. Therefore, <span class="CharOverride-10">f</span> must be one-one. We can assume without any loss of generality that roll numbers of students are from 1 to 50. This implies that 51 in <span class="CharOverride-14">N</span> is not roll number of any student of the class, so that 51 can not be image of any element of X under <span class="CharOverride-10">f</span>. Hence, <span class="CharOverride-10">f</span> is not onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 8</span><span class="CharOverride-14"> </span>Show that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 2<span class="CharOverride-10">x</span>, is one-one but not onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution </span>The function <span class="CharOverride-10">f</span> is one-one, for <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">⇒</span> 2<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = 2<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>. Further, <span class="CharOverride-10">f</span> is not onto, as for 1 <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>, there does not exist any <span class="CharOverride-10">x</span> in <span class="CharOverride-14">N</span> such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 2<span class="CharOverride-10">x</span> = 1.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 9</span><span class="CharOverride-14">  </span>Prove that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 2<span class="CharOverride-10">x</span>, is one-one and onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14">  </span><span class="CharOverride-10">f</span> is one-one, as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">⇒</span> 2<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = 2<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>. Also, given any real number <span class="CharOverride-10">y</span> in R, there exists <img class="_idGenObjectAttribute-2" src="../Images/1.png" alt=""/> in R such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10"><img class="_idGenObjectAttribute-2" src="../Images/1.png" alt=""/></span>) = 2 . (<img class="_idGenObjectAttribute-2" src="../Images/1.png" alt=""/>) = <span class="CharOverride-10">y</span>. Hence, <span class="CharOverride-10">f</span> is onto.</p>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer023" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
					<img class="_idGenObjectAttribute-1" src="../Images/F_1.3.png" alt=""/>
				</div>
			</div>
			<p class="Remarks ParaOverride-20 cp" style="text-align: center;"><span class="CharOverride-17">Fig 1.3</span></p>
			<p class="Remarks"><span class="CharOverride-12">Example 1</span><span class="CharOverride-12">0</span><span class="CharOverride-14">  </span>Show that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, given by <span class="CharOverride-10">f</span>(1) = <span class="CharOverride-10">f</span>(2) = 1 and <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span> – 1, for every <span class="CharOverride-10">x</span> &gt; 2, is onto but not one-one.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14">  </span><span class="CharOverride-10">f</span> is not one-one, as <span class="CharOverride-10">f</span>(1) = <span class="CharOverride-10">f</span>(2) = 1. But <span class="CharOverride-10">f</span> is onto, as given any <span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>, <span class="CharOverride-10">y</span> <span class="CharOverride-11">≠</span> 1, we can choose <span class="CharOverride-10">x</span> as <span class="CharOverride-10">y</span> + 1 such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10">y</span> + 1) = <span class="CharOverride-10">y</span> + 1 – 1 = <span class="CharOverride-10">y</span>. Also for 1 <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>, we have <span class="CharOverride-10">f</span>(1) = 1.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 11</span><span class="CharOverride-14">  </span>Show that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span>, is neither one-one nor onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14">  </span>Since <span class="CharOverride-10">f</span>(– 1) = 1 = <span class="CharOverride-10">f</span>(1), <span class="CharOverride-10">f</span> is not one-one. Also, the element – 2 in the co-domain <span class="CharOverride-14">R</span> is not image of any element <span class="CharOverride-10">x</span> in the domain <span class="CharOverride-14">R</span> (Why?). Therefore <span class="CharOverride-10">f</span> is not onto.</p>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer026">
					<div id="_idContainer024" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
						<img class="_idGenObjectAttribute-1" src="../Images/F_1.4.png" alt=""/>
					</div>
					<div id="_idContainer025" class="Basic-Graphics-Frame _idGenObjectStyleOverride-1">
						<p class="Remarks ParaOverride-21 cp" style="text-align: center;"><span class="CharOverride-17">Fig 1.4</span></p>
					</div>
				</div>
			</div>
			<p class="Remarks"><span class="CharOverride-12">Example 12</span><span class="CharOverride-14">  </span>Show that <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, given by </p>
<p class="Remarks"><img class="_idGenObjectAttribute-3" src="../Images/4.png" alt=""/><br/></p>
			<p class="ParaOverride-6">is both one-one and onto.<br/></p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span> Suppose <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>). Note that if <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> is odd and <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> is even, then we will have <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> + 1 = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> – 1, i.e., <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> – <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = 2 which is impossible. Similarly, the possibility of <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> being even and <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> being odd can also be ruled out, using the similar argument. Therefore, <br/>both <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> and <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> must be either odd or even. Suppose both <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> and <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> are odd. Then <span class="CharOverride-10"><br/>f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> + 1 = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> + 1 <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>. Similarly, if both <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> and <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> are even, then also   <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> – 1 = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> – 1 <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>. Thus, <span class="CharOverride-10">f</span> is one-one. Also, any odd number 2<span class="CharOverride-10">r</span> + 1 in the co-domain <span class="CharOverride-14">N</span> is the image of 2<span class="CharOverride-10">r</span> <span class="CharOverride-10">+ </span>2<span class="CharOverride-10"> </span>in the domain <span class="CharOverride-14">N</span> and any even number 2<span class="CharOverride-10">r</span> in the co-domain <span class="CharOverride-14">N</span> is the image of 2<span class="CharOverride-10">r</span> – 1 in the domain <span class="CharOverride-14">N</span>. Thus, <span class="CharOverride-10">f</span> is onto.</p>
			<p class="Remark-tab ParaOverride-22"><span class="CharOverride-12">Example 13</span><span class="CharOverride-14"> </span>Show that an onto function <span class="CharOverride-10">f</span> : {1, 2, 3} <span class="CharOverride-11">→</span> {1, 2, 3} is always one-one.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Suppose <span class="CharOverride-10">f</span> is not one-one. Then there exists two elements, say 1 and 2 in the domain whose image in the co-domain is same. Also, the image of 3 under <span class="CharOverride-10">f</span> can be only one element. Therefore, the range set can have at the most two elements of the co-domain {1, 2, 3}, showing that <span class="CharOverride-10">f</span>  is not onto, a contradiction. Hence, <span class="CharOverride-10">f</span> must be one-one.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 14</span><span class="CharOverride-14"> </span>Show that a one-one function <span class="CharOverride-10">f</span> : {1, 2, 3} <span class="CharOverride-11">→</span> {1, 2, 3} must be onto. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since <span class="CharOverride-10">f</span> is one-one, three elements of {1, 2, 3} must be taken to 3 different elements of the co-domain {1, 2, 3} under <span class="CharOverride-10">f</span>. Hence, <span class="CharOverride-10">f</span> has to be onto. </p>
			<p class="Remarks"><span class="CharOverride-15">Remark</span><span class="CharOverride-13"> </span>The results mentioned in Examples 13 and 14 are also true for an arbitrary finite set X, i.e., a one-one function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> X is necessarily onto and an onto map <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> X is necessarily one-one, for every finite set X. In contrast to this, Examples 8 and 10 show that for an infinite set, this may not be true. In fact, this is a characteristic difference between a finite and an infinite set. </p>
<p class="Remarks"><br/></p>
			<h3 class="Exercise ParaOverride-10" style="text-align: center;" id="sigil_toc_id_6"><span class="CharOverride-8">Exercise 1.2</span></h3>
			<p class="option-3-aline">	<span class="CharOverride-12">1.</span>	Show that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R<sub>a</sub></span>&#160;<span class="CharOverride-11">→</span> <span class="CharOverride-14">R<sub>a</sub></span>&#160;defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =&#160;<img class="_idGenObjectAttribute-4" src="../Images/5.png" alt=""/>&#160; is one-one and onto, where <span class="CharOverride-14">R<sub>a</sub></span>&#160;is the set of all non-zero real numbers. Is the result true, if the domain <span class="CharOverride-14">R</span><span class="CharOverride-21"><sub>a</sub></span> is replaced by <span class="CharOverride-14">N</span> with co-domain being same as <span class="CharOverride-14">R</span><span class="CharOverride-21"><sub>a</sub></span>?</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">2.</span><span class="CharOverride-14">	</span>Check the injectivity and surjectivity of the following functions:</p>
			<p class="option--i-----ii- ParaOverride-7">	(i)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span></p>
			<p class="option--i-----ii- ParaOverride-7">	(ii)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">Z</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">Z</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span></p>
			<p class="option--i-----ii- ParaOverride-7">	(iii)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span></p>
			<p class="option--i-----ii- ParaOverride-7">	(iv)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">3</span></p>
			<p class="option--i-----ii- ParaOverride-7">	(v)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">Z</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">Z</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">3</span></p>
			<p class="option--i-----ii- ParaOverride-16"><span class="CharOverride-14">	</span><span class="CharOverride-12">3.</span><span class="CharOverride-14">	</span>Prove that the Greatest Integer Function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = [<span class="CharOverride-10">x</span>], is neither one-one nor onto, where [<span class="CharOverride-10">x</span>] denotes the greatest integer less than or equal to <span class="CharOverride-10">x</span>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">4.</span><span class="CharOverride-14">	</span>Show that the Modulus Function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = |<span class="CharOverride-10">x</span>|, is neither one-one nor onto, where | <span class="CharOverride-10">x</span> | is <span class="CharOverride-10">x</span>, if <span class="CharOverride-10">x</span> is positive or 0 and |<span class="CharOverride-10">x</span>| is – <span class="CharOverride-10">x</span>, if <span class="CharOverride-10">x</span> is negative.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">5.</span><span class="CharOverride-14"> 	</span>Show that the Signum Function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given by </p>
<p class="option-3-aline"><img class="_idGenObjectAttribute-5" src="../Images/11.png" alt=""/><br/></p>
			<p class="option-3-aline ParaOverride-23">is neither one-one nor onto.<br/></p>
			<p class="option-3-aline">	<span class="CharOverride-12">6.</span>	Let A = {1, 2, 3}, B = {4, 5, 6, 7} and let <span class="CharOverride-10">f</span> = {(1, 4), (2, 5), (3, 6)} be a function from A to B. Show that <span class="CharOverride-10">f</span> is one-one.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">7.</span><span class="CharOverride-14">	</span>In each of the following cases, state whether the function is one-one, onto or bijective. Justify your answer.</p>
			<p class="option--i-----ii-">	(i)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 3 – 4<span class="CharOverride-10">x</span></p>
			<p class="option--i-----ii- ParaOverride-19"><span class="CharOverride-10">	</span>(ii)	<span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 1 + <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span></p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">8.</span><span class="CharOverride-14">	</span>Let A and B be sets. Show that <span class="CharOverride-10">f</span> : A × B <span class="CharOverride-11">→</span> B × A such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) = (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) is bijective function.</p>
			<p class="option-3-aline ParaOverride-19">	<span class="CharOverride-12">9.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> be defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">n</span>) =<img class="_idGenObjectAttribute-6" src="../Images/11_b.png" alt=""/>&#160;for all <span class="CharOverride-10">n</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>.</p>
			<p class="option-3-aline">		State whether the function <span class="CharOverride-10">f</span> is bijective. Justify your answer.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">10.</span><span class="CharOverride-14">	</span>Let A = <span class="CharOverride-14">R</span> – {3} and B = <span class="CharOverride-14">R</span> – {1}. Consider the function  <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B defined by&#160;<img alt="1.1" src="../Images/1.1.png"/>. Is <span class="CharOverride-10">f</span> one-one and onto? Justify your answer.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">11.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">4</span>. Choose the correct answer.</p>
			<p class="Opt-4-A-D ParaOverride-24">	(A)	<span class="CharOverride-10">f</span> is one-one onto			(B)	<span class="CharOverride-10">f</span> is many-one onto</p>
			<p class="Opt-4-A-D ParaOverride-24">	(C)	<span class="CharOverride-10">f</span> is one-one but not onto	(D)	<span class="CharOverride-10">f</span> is neither one-one nor onto.</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">12.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 3<span class="CharOverride-10">x</span>. Choose the correct answer. </p>
			<p class="Opt-4-A-D">	(A)	<span class="CharOverride-10">f</span> is one-one onto			(B)	<span class="CharOverride-10">f</span> is many-one onto</p>
			<p class="Opt-4-A-D">	(C)	<span class="CharOverride-10">f</span> is one-one but not onto	(D)	<span class="CharOverride-10">f</span> is neither one-one nor onto.</p>
			<h3 class="heading" id="sigil_toc_id_7"><span class="CharOverride-8">1.4  Composition of Functions and Invertible Function</span> </h3>
			<p class="Body-Text ParaOverride-5">In this section, we will study composition of functions and the inverse of a bijective function. Consider the set A of all students, who appeared in Class X of <span class="CharOverride-14"> </span>a<span class="CharOverride-14"> </span>Board Examination in 2006. Each student appearing in the Board Examination is assigned a roll number by the Board which is written by the students in the answer script at the time of examination. In order to have confidentiality, the Board arranges to deface the roll numbers of students in the answer scripts and assigns a fake code number to each roll number. Let B <span class="CharOverride-11">⊂</span> <span class="CharOverride-14">N</span> be the set of all roll numbers and C<span class="CharOverride-11"> ⊂</span> <span class="CharOverride-14">N</span> be the set of all code numbers. This gives rise to two functions <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B and <span class="CharOverride-10">g </span>: B <span class="CharOverride-11">→</span> C given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = the roll number assigned to the student <span class="CharOverride-10">a</span> and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">b</span>) = the code number assigned to the roll number <span class="CharOverride-10">b</span>. In this process each student is assigned a roll number through the function <span class="CharOverride-10">f</span> and each roll number is assigned a code number through the function <span class="CharOverride-10">g</span>. Thus, by the combination of these two functions, each student is eventually attached a code number. </p>
			<p class="Body-Text">This leads to the following definition: </p>
			<p class="Definition"><span class="CharOverride-12">Definition 8</span> Let <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B and <span class="CharOverride-10">g</span> : B <span class="CharOverride-11">→</span> C be two functions. Then the composition of <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span>, denoted by <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>, is defined as the function <span class="CharOverride-10">gof</span> : A <span class="CharOverride-11">→</span> C given by</p>
<p class="Definition"><span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =	<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)),∀ &#160;<span class="CharOverride-10">x</span>&#160;<span class="CharOverride-11">∈</span>&#160;A.<br/></p>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer032" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
					<img class="_idGenObjectAttribute-1" src="../Images/F_1.5.png" alt=""/>
				</div>
			</div>
			<p class="eq-1"><br/></p>
			<p class="Body-Text ParaOverride-25 cp" style="text-align: center;"><span class="CharOverride-17">Fig 1.5</span></p>
			<p class="Remarks"><span class="CharOverride-12">Example 15</span> Let <span class="CharOverride-10">f</span> : {2, 3, 4, 5} <span class="CharOverride-11">→</span> {3, 4, 5, 9} and <span class="CharOverride-10">g</span> : {3, 4, 5, 9} <span class="CharOverride-11">→</span> {7, 11, 15} be functions defined as <span class="CharOverride-10">f</span>(2) = 3, <span class="CharOverride-10">f</span>(3) = 4, <span class="CharOverride-10">f</span>(4) =  <span class="CharOverride-10">f</span>(5) = 5 and <span class="CharOverride-10">g</span>(3) = <span class="CharOverride-10">g</span>(4) = 7 and <span class="CharOverride-10"><br/>g</span>(5) =  <span class="CharOverride-10">g</span>(9) = 11. Find <span class="CharOverride-10">gof</span>. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>We have<span class="CharOverride-14"> </span><span class="CharOverride-10">gof</span>(2) =  <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(2)) = <span class="CharOverride-10">g</span>(3) = 7, <span class="CharOverride-10">gof</span>(3) =  <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(3)) = <span class="CharOverride-10">g</span>(4) = 7, <span class="CharOverride-10">gof</span>(4) =  <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(4)) = <span class="CharOverride-10">g</span>(5) = 11 and <span class="CharOverride-10">gof</span>(5) =  <span class="CharOverride-10">g</span>(5) = 11. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 1</span><span class="CharOverride-12">6</span><span class="CharOverride-14"> </span>Find <span class="CharOverride-10">gof</span> and <span class="CharOverride-10">fog</span>, if <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> and <span class="CharOverride-10">g</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> are given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = cos <span class="CharOverride-10">x</span> and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) = 3<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span>. Show that <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span> <span class="CharOverride-11">≠</span> <span class="CharOverride-10">fog</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>We have<span class="CharOverride-14"> </span><span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =  <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">g</span>(cos <span class="CharOverride-10">x</span>) = 3 (cos <span class="CharOverride-10">x</span>)<span class="CharOverride-19">2</span> = 3 cos<span class="CharOverride-19">2</span> <span class="CharOverride-10">x</span>. Similarly, <span class="CharOverride-10">fo</span><span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) =  <span class="CharOverride-10">f</span>(<span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>)) =  <span class="CharOverride-10">f</span>(3<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span>) = cos (3<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span>). Note that 3cos<span class="CharOverride-19">2</span> <span class="CharOverride-10">x</span> <span class="CharOverride-11">≠</span> cos 3<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span>, for <span class="CharOverride-10">x</span> = 0. Hence, <span class="CharOverride-10">gof</span> <span class="CharOverride-11">≠</span> <span class="CharOverride-10">fog</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 17</span><span class="CharOverride-14"> </span>Show that if<img class="_idGenObjectAttribute-9" src="../Images/8.png" alt=""/>&#160; <span class="CharOverride-10"><img class="_idGenObjectAttribute-10" src="../Images/9.png" alt=""/> </span>is defined by<span class="CharOverride-10"><img class="_idGenObjectAttribute-11" src="../Images/10.png" alt=""/> </span>and<span class="CharOverride-10"> </span> <span class="CharOverride-10"><img class="_idGenObjectAttribute-10" src="../Images/111.png" alt=""/> </span>is defined by<span class="CharOverride-10"> </span><img class="_idGenObjectAttribute-12" src="../Images/12.png" alt=""/>, then <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">A </span>and <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">B</span>, where, A = <span class="CharOverride-14">R</span> – <img class="_idGenObjectAttribute-13" src="../Images/13.png" alt=""/>, B = <span class="CharOverride-14">R </span>– <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>; I<span class="CharOverride-16">A</span> (<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">x</span> <span class="CharOverride-11">∈ </span>A, I<span class="CharOverride-16">B</span> (<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, <span class="CharOverride-10">x</span> <span class="CharOverride-11">∈ </span>B are called identity functions on sets A and B, respectively.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>We have</p>
<p class="Remarks"><img class="_idGenObjectAttribute-14" src="../Images/16.png" alt=""/>=<br/></p>
			<p class="Remarks ParaOverride-21"><img class="_idGenObjectAttribute-15" src="../Images/17.png" alt=""/>&#160;</p>
			<p class="Body-Text ParaOverride-5">Similarly,<img class="_idGenObjectAttribute-16" src="../Images/18.png" alt=""/>&#160; <img class="_idGenObjectAttribute-17" src="../Images/19.png" alt=""/>&#160;</p>
			<p class="Body-Text">Thus, <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> B and <span class="CharOverride-10">fog</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">x </span><span class="CharOverride-11">∈</span> A, which implies that <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">B</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">A</span>. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 18</span> Show that if <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B and <span class="CharOverride-10">g</span> : B <span class="CharOverride-11">→</span> C are one-one, then <span class="CharOverride-10">gof</span> : A <span class="CharOverride-11">→</span> C is also one-one.</p>
			<p class="Remarks ParaOverride-11"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Suppose <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">gof</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) </p>
			<p class="eq-1 ParaOverride-5"><span class="CharOverride-11">⇒</span>	<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>)) =	<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>))</p>
			<p class="eq-1 ParaOverride-5"><span class="CharOverride-11">⇒</span>	<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) =	<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>), as <span class="CharOverride-10">g</span> is one-one</p>
			<p class="eq-1 ParaOverride-5"><span class="CharOverride-11">⇒</span>	<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> =	<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>, as <span class="CharOverride-10">f</span> is one-one</p>
			<p class="eq-1 ParaOverride-5">Hence, <span class="CharOverride-10">gof </span>is one-one.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 19</span><span class="CharOverride-14"> </span>Show that if <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B and <span class="CharOverride-10">g</span> : B <span class="CharOverride-11">→</span> C are onto, then <span class="CharOverride-10">gof</span> : A <span class="CharOverride-11">→</span> C is also onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Given an arbitrary element <span class="CharOverride-10">z</span> <span class="CharOverride-11">∈</span> C, there exists a pre-image <span class="CharOverride-10">y</span> of <span class="CharOverride-10">z</span> under <span class="CharOverride-10">g</span> such that <span class="CharOverride-10">g</span>(<span class="CharOverride-10">y</span>) = <span class="CharOverride-10">z</span>, since <span class="CharOverride-10">g</span> is onto. Further, for <span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> B, there exists an element <span class="CharOverride-10">x</span> in A with <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =<span class="CharOverride-10"> y</span>, since <span class="CharOverride-10">f</span> is onto. Therefore, <span class="CharOverride-10">gof</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">g</span>(<span class="CharOverride-10">y</span>) = <span class="CharOverride-10">z</span>, showing that <span class="CharOverride-10">gof</span> is onto.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 20</span><span class="CharOverride-14"> </span>Consider functions <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> such that composite <span class="CharOverride-10">gof</span> is defined and is one-one. Are <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> both necessarily one-one.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Consider <span class="CharOverride-10">f</span> : {1, 2, 3, 4} <span class="CharOverride-11">→</span> {1, 2, 3, 4, 5, 6} defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, <span class="CharOverride-11"><img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/></span><span class="CharOverride-10">x</span> and <span class="CharOverride-10"><br/></span><span class="CharOverride-10">g</span> : {1, 2, 3, 4, 5, 6} <span class="CharOverride-11">→</span> {1, 2, 3, 4, 5, 6} as <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, for <span class="CharOverride-10">x</span> = 1, 2, 3, 4 and <span class="CharOverride-10">g</span>(5) = <span class="CharOverride-10">g</span>(6) = 5. Then, <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">x</span>, which shows that <span class="CharOverride-10">gof</span> is one-one. But <span class="CharOverride-10">g</span> is clearly not one-one.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 21</span><span class="CharOverride-14"> </span>Are <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> both necessarily onto, if <span class="CharOverride-10">gof</span> is onto?</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Consider <span class="CharOverride-10">f</span> : {1, 2, 3, 4} <span class="CharOverride-11">→</span> {1, 2, 3, 4} and <span class="CharOverride-10">g</span> : {1, 2, 3, 4} <span class="CharOverride-11">→</span> {1, 2, 3} defined as <span class="CharOverride-10">f</span>(1) = 1, <span class="CharOverride-10">f</span>(2) = 2,  <span class="CharOverride-10">f</span>(3) = <span class="CharOverride-10">f</span>(4) = 3, <span class="CharOverride-10">g</span>(1) = 1, <span class="CharOverride-10">g</span>(2) = 2 and <span class="CharOverride-10">g</span>(3) = <span class="CharOverride-10">g</span>(4) = 3. It can be seen that <span class="CharOverride-10">gof</span> is onto but <span class="CharOverride-10">f</span> is not onto.</p>
			<p class="Remarks"><span class="CharOverride-15">Remark</span><span class="CharOverride-13"> </span>It can be verified in general that <span class="CharOverride-10">gof</span> is one-one implies that <span class="CharOverride-10">f</span> is one-one. Similarly, <span class="CharOverride-10">gof</span> is onto implies that <span class="CharOverride-10">g</span> is onto.</p>
			<p class="Body-Text">Now, we would like to have close look at the functions <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> described in the beginning of this section in reference to a Board <span class="CharOverride-22">e</span>xamination. Each student appearing in Class X <span class="CharOverride-22">e</span>xamination of the Board is assigned a roll number under the function <span class="CharOverride-10">f</span> and each roll number is assigned a code number under <span class="CharOverride-10">g</span>. After the answer scripts are examined, examiner enters the mark against each code number in a mark book and submits to the office of the Board. The Board officials decode by assigning roll number back to each code number through a process reverse to <span class="CharOverride-10">g</span> and thus mark gets attached to roll number rather than code number. Further, the process reverse to <span class="CharOverride-10">f</span> assigns a roll number to the student having that roll number. This helps in assigning mark to the student scoring that mark. We observe that while composing <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span>, to get <span class="CharOverride-10">gof</span>, first <span class="CharOverride-10">f</span> and then <span class="CharOverride-10">g</span> was applied, while in the reverse process of the composite <span class="CharOverride-10">gof</span>, first the reverse process of <span class="CharOverride-10">g</span> is applied and then the reverse process of <span class="CharOverride-10">f</span>. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 22</span><span class="CharOverride-14"> </span>Let <span class="CharOverride-10">f</span> : {1, 2, 3} <span class="CharOverride-11">→</span> {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} be one-one and onto function given by<br/><span class="CharOverride-10">f</span>(1) = <span class="CharOverride-10">a</span>, <span class="CharOverride-10">f</span>(2) = <span class="CharOverride-10">b</span> and <span class="CharOverride-10">f</span>(3) = <span class="CharOverride-10">c</span>. Show that there exists a function <span class="CharOverride-10">g</span> : {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} <span class="CharOverride-11">→</span> {1, 2, 3} such that <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">X</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span>, where, X =  {1, 2, 3} and Y = {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>}.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Consider <span class="CharOverride-10">g</span> : {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} <span class="CharOverride-11">→</span> {1, 2, 3} as <span class="CharOverride-10">g</span>(<span class="CharOverride-10">a</span>) = 1, <span class="CharOverride-10">g</span>(<span class="CharOverride-10">b</span>) = 2 and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">c</span>) = 3. It is easy to verify that the composite <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">X</span> is the identity function on X and the composite <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span> is the identity function on Y. </p>
			<p class="Remarks"><span class="CharOverride-15">Remark </span><span class="CharOverride-13"> </span>The interesting fact is that the result mentioned in the above example is true for an arbitrary one-one and onto function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y. Not only this, even the converse is also true , i.e., if <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is a function such that there exists a function <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> X such that <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">X</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span>, then <span class="CharOverride-10">f</span> must be one-one and onto. </p>
			<p class="Body-Text">The above discussion, Example 22 and Remark lead to the following definition:</p>
			<p class="Definition"><span class="CharOverride-12">D</span><span class="CharOverride-12">efinition 9</span><span class="CharOverride-14"> </span>A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is defined to be <span class="CharOverride-10">invertible</span>, if there exists a function <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> X such that  <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">X</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span>. The function <span class="CharOverride-10">g</span> is called the <span class="CharOverride-10">inverse of f</span>  and is denoted by <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>.</p>
			<p class="Body-Text ParaOverride-10">Thus, if <span class="CharOverride-10">f</span> is invertible, then <span class="CharOverride-10">f</span> must be one-one and onto and conversely, if <span class="CharOverride-10">f </span>is one-one and onto, then <span class="CharOverride-10">f</span> must be invertible. This fact significantly helps for proving a function <span class="CharOverride-10">f</span> to be invertible by showing that <span class="CharOverride-10">f</span> is one-one and onto, specially when the actual inverse of <span class="CharOverride-10">f</span> is not to be determined. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 2</span><span class="CharOverride-12">3</span><span class="CharOverride-14"> </span>Let <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> Y be a function defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 4<span class="CharOverride-10">x</span> + 3, where, Y = {<span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>: <span class="CharOverride-10">y</span> = 4<span class="CharOverride-10">x</span> + 3 for some <span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>}. Show that <span class="CharOverride-10">f</span> is invertible. Find the inverse.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Consider an arbitrary element <span class="CharOverride-10">y</span> of Y. By the definition of Y, <span class="CharOverride-10">y</span> = 4<span class="CharOverride-10">x</span> + 3, <br/>for some <span class="CharOverride-10">x</span> in the domain <span class="CharOverride-14">N</span>. This shows that<img class="_idGenObjectAttribute-18" src="../Images/24.png" alt=""/>&#160; . Define <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> by&#160;<img class="_idGenObjectAttribute-19" src="../Images/25.png" alt=""/><span class="CharOverride-10">. </span>Now, <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">g</span>(4<span class="CharOverride-10">x</span> + 3) =<img class="_idGenObjectAttribute-20" src="../Images/26.png" alt=""/>&#160; &#160;and&#160;<span class="CharOverride-10">fog</span>(<span class="CharOverride-10">y</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">g</span>(<span class="CharOverride-10">y</span>)) =<img class="_idGenObjectAttribute-21" src="../Images/27.png" alt=""/>&#160;= <span class="CharOverride-10">y</span> – 3 + 3 = <span class="CharOverride-10">y</span>. This shows that <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">N</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span>, which implies that <span class="CharOverride-10">f</span> is invertible and <span class="CharOverride-10">g</span> is the inverse of <span class="CharOverride-10">f</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 24</span><span class="CharOverride-14"> </span>Let Y = {<span class="CharOverride-10">n</span><span class="CharOverride-19">2</span> : <span class="CharOverride-10">n</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>} <span class="CharOverride-11">⊂</span> <span class="CharOverride-14">N</span>. Consider <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> Y as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">n</span>) = <span class="CharOverride-10">n</span><span class="CharOverride-19">2</span>. Show that <span class="CharOverride-10">f</span> is invertible. Find the inverse of <span class="CharOverride-10">f</span>. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>An arbitrary element <span class="CharOverride-10">y</span> in Y is of the form <span class="CharOverride-10">n</span><span class="CharOverride-19">2</span>, for some <span class="CharOverride-10">n</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>. This implies that <span class="CharOverride-10">n</span> = <img class="_idGenObjectAttribute-22" src="../Images/28.png" alt=""/>. This gives a function <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, defined by <span class="CharOverride-10">g</span>(<span class="CharOverride-10">y</span>) = <span class="CharOverride-10"><img class="_idGenObjectAttribute-23" src="../Images/30.png" alt=""/></span>. Now, <span class="CharOverride-10">gof</span>(<span class="CharOverride-10">n</span>) = <span class="CharOverride-10">g</span>(<span class="CharOverride-10">n</span><span class="CharOverride-19">2</span>) = <span class="CharOverride-10">n</span> and <span class="CharOverride-10">fog</span>(<span class="CharOverride-10">y</span>)=<img class="_idGenObjectAttribute-24" src="../Images/31.png" alt=""/>&#160;, which shows that &#160;<span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">N</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span>. Hence, <span class="CharOverride-10">f</span> is invertible with <span class="CharOverride-10">f </span><span class="CharOverride-19">–1 </span>= <span class="CharOverride-10">g</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 25</span><span class="CharOverride-14"> </span>Let <span class="CharOverride-10">f</span><span class="CharOverride-23"> </span><span class="CharOverride-10">'</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be a function defined as <span class="CharOverride-10">f</span><span class="CharOverride-23"> </span><span class="CharOverride-10">'</span>(<span class="CharOverride-10">x</span>) = 4<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span> + 12<span class="CharOverride-10">x</span> + 15. Show that <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span><span class="CharOverride-11">→</span> S, where, S is the range of <span class="CharOverride-10">f</span>, is invertible. Find the inverse of <span class="CharOverride-10">f</span>. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Let <span class="CharOverride-10">y</span> be an arbitrary element of range <span class="CharOverride-10">f</span>. Then <span class="CharOverride-10">y</span> = 4<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span> + 12<span class="CharOverride-10">x</span> + 15, for some <span class="CharOverride-10">x</span> in <span class="CharOverride-14">N</span>, which implies that <span class="CharOverride-10">y = </span>(2<span class="CharOverride-10">x</span> + 3)<span class="CharOverride-19">2</span> + 6. This gives<img class="_idGenObjectAttribute-25" src="../Images/32.png" alt=""/>&#160; , as <span class="CharOverride-10">y</span> <span class="CharOverride-11">≥</span> 6.</p>
			<p class="Body-Text ParaOverride-10">Let us define <span class="CharOverride-10">g</span> : S <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> by <span class="CharOverride-10">g</span>(<span class="CharOverride-10">y</span>) =<img class="_idGenObjectAttribute-26" src="../Images/33.png" alt=""/>&#160; .</p>
			<p class="_ ParaOverride-15">Now	<span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =	<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">g</span>(4<span class="CharOverride-10">x</span><span class="CharOverride-19">2 </span>+ 12<span class="CharOverride-10">x</span> + 15) = <span class="CharOverride-10">g</span>((2<span class="CharOverride-10">x</span> + 3)<span class="CharOverride-19">2</span> + 6)</p>
			<p class="_ ParaOverride-15">	=<img class="_idGenObjectAttribute-27" src="../Images/34.png" alt=""/>&#160;&#160;</p>
			<p class="_ ParaOverride-15">and<span class="CharOverride-10">	fog </span>(<span class="CharOverride-10">y</span>) =<img class="_idGenObjectAttribute-28" src="../Images/35.png" alt=""/></p>
<p class="_ ParaOverride-15">=<img class="_idGenObjectAttribute-29" src="../Images/36.png" alt=""/><br/></p>
			<p class="_ ParaOverride-15">	=	<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> = <span class="CharOverride-10">y</span> – 6 + 6 = <span class="CharOverride-10">y</span>.</p>
			<p class="Body-Text ParaOverride-5">Hence,	<span class="CharOverride-10">gof</span> =	I<span class="CharOverride-24">N</span> and <span class="CharOverride-10">fog</span> =I<span class="CharOverride-16">S</span>. This implies that <span class="CharOverride-10">f</span> is invertible with <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span> = <span class="CharOverride-10">g</span>. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 2</span><span class="CharOverride-12">6</span> Consider <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, <span class="CharOverride-10">g</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> and <span class="CharOverride-10">h</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 2<span class="CharOverride-10">x</span>, <span class="CharOverride-10">g</span>(<span class="CharOverride-10">y</span>) = 3<span class="CharOverride-10">y</span> + 4 and <span class="CharOverride-10">h</span>(<span class="CharOverride-10">z</span>) = sin <span class="CharOverride-10">z</span>, <img class="_idGenObjectAttribute-30" src="../Images/38.png" alt=""/><span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span> and <span class="CharOverride-10">z</span> in N. Show that <span class="CharOverride-10">ho</span>(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) = (<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>) o<span class="CharOverride-10">f.</span></p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>We have&#160;<span class="CharOverride-10">h</span>o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) (<span class="CharOverride-10">x</span>) =	<span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f </span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>))) = <span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>(2<span class="CharOverride-10">x</span>))</p>
			<p class="Body-Text">	=	<span class="CharOverride-10">h</span>(3(2<span class="CharOverride-10">x</span>) + 4) = <span class="CharOverride-10">h</span>(6<span class="CharOverride-10">x</span> + 4) = sin (6<span class="CharOverride-10">x</span> + 4) <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/></p>
			<p class="Body-Text ParaOverride-5">Also,<span class="CharOverride-10"> </span>     ((<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>)o<span class="CharOverride-10">f </span>)<span class="CharOverride-10"> </span>(<span class="CharOverride-10">x</span>)	=	(<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>)<span class="CharOverride-10"> </span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)) = (<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>) (2<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>(2<span class="CharOverride-10">x</span>)) </p>
			<p class="Body-Text">	=	<span class="CharOverride-10">h</span>(3(2<span class="CharOverride-10">x</span>) + 4) = <span class="CharOverride-10">h</span>(6<span class="CharOverride-10">x</span> + 4) = sin (6<span class="CharOverride-10">x</span> + 4), <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>.</p>
			<p class="Body-Text ParaOverride-5">This shows that <span class="CharOverride-10">h</span>o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) = (<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>)o<span class="CharOverride-10">f</span>. </p>
			<p class="Body-Text ParaOverride-5">This result is true in general situation as well.</p>
			<p class="Definition"><span class="CharOverride-12">Theorem 1</span> If <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y, <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> Z and <span class="CharOverride-10">h</span> : Z <span class="CharOverride-11">→</span> S are functions, then </p>
			<p class="Definition ParaOverride-27"><span class="CharOverride-10">	h</span>o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) =	(<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>)o<span class="CharOverride-10">f</span>.</p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-25">Proof</span><span class="CharOverride-26"> </span>We have	</p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-10">	h</span>o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) (<span class="CharOverride-10">x</span>) =	<span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>))), <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">x</span> in X </p>
			<p class="Body-Text ParaOverride-5">and        	(<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>) o<span class="CharOverride-10">f</span> (<span class="CharOverride-10">x</span>) =	<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f </span>(<span class="CharOverride-10">x</span>)) = <span class="CharOverride-10">h</span>(<span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>))),<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>&#160;<span class="CharOverride-10">x</span> in X.</p>
			<p class="Body-Text ParaOverride-15">Hence,	<span class="CharOverride-10">h</span>o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) =	(<span class="CharOverride-10">h</span>o<span class="CharOverride-10">g</span>)o<span class="CharOverride-10">f</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 27</span> Consider <span class="CharOverride-10">f</span> : {1, 2, 3} <span class="CharOverride-11">→</span> {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>,<span class="CharOverride-10"> c</span>} and <span class="CharOverride-10">g</span> : {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>,<span class="CharOverride-10"> c</span>} <span class="CharOverride-11">→ </span>{apple, ball, cat} defined as <span class="CharOverride-10">f</span>(1) = <span class="CharOverride-10">a</span>, <span class="CharOverride-10">f</span>(2) = <span class="CharOverride-10">b</span>, <span class="CharOverride-10">f</span>(3) = <span class="CharOverride-10">c</span>, <span class="CharOverride-10">g</span>(<span class="CharOverride-10">a</span>) = apple, <span class="CharOverride-10">g</span>(<span class="CharOverride-10">b</span>) = ball and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">c</span>) = cat. <br/>Show that <span class="CharOverride-10">f</span>, <span class="CharOverride-10">g</span> and <span class="CharOverride-10">gof</span> are invertible. Find out <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>, <span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span> and (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> and show that (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-10"> </span><span class="CharOverride-19">–1</span> = <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span> Note that by definition, <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> are bijective functions.&#160;</p>
<p class="Remarks">Let <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>: {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} <span class="CharOverride-11">→</span> (1, 2, 3} and <span class="CharOverride-10">g</span><span class="CharOverride-19">–1 </span>: {apple, ball, cat} <span class="CharOverride-11">→</span> {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} be defined as <span class="CharOverride-10"><br/>f </span><span class="CharOverride-19">–1</span>{<span class="CharOverride-10">a</span>} = 1, <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>{<span class="CharOverride-10">b</span>} = 2,  <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>{<span class="CharOverride-10">c</span>} = 3,  <span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>{apple} = <span class="CharOverride-10">a</span>,  <span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>{ball} = <span class="CharOverride-10">b</span> and  <span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>{cat} = <span class="CharOverride-10">c</span>. It is easy to verify that <span class="CharOverride-10">f </span><span class="CharOverride-19">–</span><span class="CharOverride-19">1</span>o<span class="CharOverride-10">f</span> <span class="CharOverride-10"> = </span>I<span class="CharOverride-16">{1, 2, 3}</span>, <span class="CharOverride-10">f</span>o<span class="CharOverride-10"> f </span><span class="CharOverride-19">–1</span><span class="CharOverride-10"> = </span>I<span class="CharOverride-16">{</span><span class="CharOverride-18">a</span><span class="CharOverride-16">, </span><span class="CharOverride-18">b</span><span class="CharOverride-16">, </span><span class="CharOverride-18">c</span><span class="CharOverride-16">}</span>, <span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g = </span>I<span class="CharOverride-16">{</span><span class="CharOverride-18">a</span><span class="CharOverride-16">, </span><span class="CharOverride-18">b</span><span class="CharOverride-16">, </span><span class="CharOverride-18">c</span><span class="CharOverride-16">}</span> and  <span class="CharOverride-10">g</span>o<span class="CharOverride-10"> g</span><span class="CharOverride-19">–1</span><span class="CharOverride-10"> = </span>I<span class="CharOverride-16">D</span>, where, D = {apple, ball, cat}. Now, <span class="CharOverride-10">gof</span> : {1, 2, 3} <span class="CharOverride-11">→</span> {apple, ball, cat} is given by <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(1) = apple, <span class="CharOverride-10">gof</span>(2) = ball, <span class="CharOverride-10">gof</span>(3) = cat. We can define </p>
			<p class="Remarks ParaOverride-26">	(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> : {apple, ball, cat} <span class="CharOverride-11">→</span> {1, 2, 3} by (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> (apple) = 1,<span class="CharOverride-16"> </span>(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> (ball) = 2 and</p>
			<p class="Remarks ParaOverride-26">	(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> (cat) = 3. It is easy to see that (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> o (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) = I<span class="CharOverride-16">{1, 2, 3}</span><span class="CharOverride-19"> </span>and</p>
			<p class="Remarks ParaOverride-26">	(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) o (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> = I<span class="CharOverride-16">D</span>. Thus, we have seen that <span class="CharOverride-10">f</span>, <span class="CharOverride-10">g</span> and <span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span> are invertible. </p>
			<p class="Body-Text ParaOverride-5">Now,    <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1 </span>(apple)<span class="CharOverride-10">	</span>= <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>(apple)) = <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">a</span>) = 1 = (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> (apple) </p>
			<p class="Body-Text">	<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1 </span>(ball)<span class="CharOverride-10">	</span>= <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>(ball)) = <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">b</span>) = 2 = (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> (ball) and</p>
			<p class="Body-Text"><span class="CharOverride-10">	</span><span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1 </span>(cat)<span class="CharOverride-10">	</span>= <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>(cat)) = <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">c</span>) = 3 = (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> (cat).</p>
			<p class="Body-Text ParaOverride-5">Hence	                  (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> =	<span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>. </p>
			<p class="Body-Text">The above result is true in general situation also. </p>
			<p class="Definition"><span class="CharOverride-12">Theorem 2</span> Let <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y and <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> Z be two invertible functions. Then <span class="CharOverride-10">g</span>o<span class="CharOverride-10">f </span> is also invertible with (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> = <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>.</p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-25">Proof</span> To show that <span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span> is invertible with (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)<span class="CharOverride-19">–1</span> = <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>, it is enough to show that <br/>(<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>)o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>) = I<span class="CharOverride-16">X</span> and (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)o(<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>) = I<span class="CharOverride-16">Z</span>. </p>
			<p class="eq-1 ParaOverride-5">Now,	(<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>)o(<span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span>)	=	 ((<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>) o<span class="CharOverride-10">g</span>) o<span class="CharOverride-10">f</span>, by Theorem 1</p>
			<p class="eq-1 ParaOverride-5">		=	 (<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>o(<span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span>o<span class="CharOverride-10">g</span>)) o<span class="CharOverride-10">f</span>, by Theorem 1</p>
			<p class="eq-1 ParaOverride-5">		= (<span class="CharOverride-10">f</span><span class="CharOverride-19">–1 </span>oI<span class="CharOverride-16">Y</span>)<span class="CharOverride-10"> </span>o<span class="CharOverride-10">f</span>, by definition of <span class="CharOverride-10">g</span><span class="CharOverride-19">–1</span></p>
			<p class="eq-1 ParaOverride-5">		= I<span class="CharOverride-16">X</span>.</p>
			<p class="Body-Text ParaOverride-5">Similarly, it can be shown that (<span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>)o(<span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span> o<span class="CharOverride-10">g </span><span class="CharOverride-19">–1</span>) = I<span class="CharOverride-16">Z</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 28</span><span class="CharOverride-14">  </span>Let S = {1, 2, 3}. Determine whether the functions <span class="CharOverride-10">f</span> : S <span class="CharOverride-11">→</span> S defined as below have inverses. Find <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>, if it exists.</p>
			<p class="Remark-tab">	(a)	<span class="CharOverride-10">f</span> = {(1, 1), (2, 2), (3, 3)}</p>
			<p class="Opt-2-a-b-c- ParaOverride-16">	(b)	<span class="CharOverride-10">f</span> = {(1, 2), (2, 1), (3, 1)}</p>
			<p class="Opt-2-a-b-c- ParaOverride-16">	(c)	<span class="CharOverride-10">f</span> = {(1, 3), (3, 2), (2, 1)}</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span></p>
			<p class="Opt-2-a-b-c- ParaOverride-28">	(a)	It is easy to see that <span class="CharOverride-10">f</span> is one-one and onto, so that <span class="CharOverride-10">f</span> is invertible with the inverse<br/> <span class="CharOverride-10">f</span><span class="CharOverride-19">–1 </span>of <span class="CharOverride-10">f</span> given by <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span> = {(1, 1), (2, 2), (3, 3)} = <span class="CharOverride-10">f</span>.</p>
			<p class="Opt-2-a-b-c- ParaOverride-16">	(b)	Since <span class="CharOverride-10">f</span>(2) = <span class="CharOverride-10">f</span>(3) = 1, <span class="CharOverride-10">f</span> is not one-one, so that <span class="CharOverride-10">f</span> is not invertible.</p>
			<p class="Opt-2-a-b-c- ParaOverride-16">	(c)	It is easy to see that <span class="CharOverride-10">f </span>is one-one and onto, so that <span class="CharOverride-10">f</span> is invertible with&#160;<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span> = {(3, 1), (2, 3), (1, 2)}.</p>
<p class="Opt-2-a-b-c- ParaOverride-16"><br/></p>
			<h3 class="Exercise" style="text-align: center;" id="sigil_toc_id_8"><span class="CharOverride-8">Exercise 1.3</span></h3>
			<p class="option-3-aline">	<span class="CharOverride-12">1.</span>	Let <span class="CharOverride-10">f</span> : {1, 3, 4} <span class="CharOverride-11">→</span> {1, 2, 5} and <span class="CharOverride-10">g</span> : {1, 2, 5} <span class="CharOverride-11">→</span> {1, 3} be given by </p>
			<p class="option-3-aline">		<span class="CharOverride-10">	f</span> = {(1, 2), (3, 5), (4, 1)} and <span class="CharOverride-10">g</span> = {(1, 3), (2, 3), (5, 1)}. Write down <span class="CharOverride-10">gof</span>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">2.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span>, <span class="CharOverride-10">g</span> and <span class="CharOverride-10">h</span> be functions from <span class="CharOverride-14">R</span> to <span class="CharOverride-14">R</span>. Show that </p>
			<p class="eq-1">	(<span class="CharOverride-10">f </span>+ <span class="CharOverride-10">g</span>)o<span class="CharOverride-10">h</span>	= <span class="CharOverride-10">f</span>o<span class="CharOverride-10">h</span> + <span class="CharOverride-10">g</span>o<span class="CharOverride-10">h</span></p>
			<p class="eq-1"><span class="CharOverride-10">	</span>(<span class="CharOverride-10">f </span>. <span class="CharOverride-10">g</span>)o<span class="CharOverride-10">h</span>	= (<span class="CharOverride-10">f</span>o<span class="CharOverride-10">h</span>) . (<span class="CharOverride-10">g</span>o<span class="CharOverride-10">h</span>)</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">3.</span><span class="CharOverride-14">	</span>Find <span class="CharOverride-10">g</span>o<span class="CharOverride-10">f</span> and <span class="CharOverride-10">f</span>o<span class="CharOverride-10">g</span>, if </p>
			<p class="option--i-----ii-">	(i)	<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = | <span class="CharOverride-10">x</span> | and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) = | 5<span class="CharOverride-10">x</span> – 2 |</p>
			<p class="option--i-----ii-">	(ii)	<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 8<span class="CharOverride-10">x</span><span class="CharOverride-19">3</span> and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) =<img class="_idGenObjectAttribute-31" src="../Images/42.png" alt=""/>&#160; .</p>
			<p class="option-3-aline">	<span class="CharOverride-12">4.</span>	If <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =&#160;<img class="_idGenObjectAttribute-32" src="../Images/43.png" alt=""/><img class="_idGenObjectAttribute-33" src="../Images/44.png" alt=""/>, , show that <span class="CharOverride-10">f</span>o<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span>, for all<img class="_idGenObjectAttribute-34" src="../Images/45.png" alt=""/>&#160; . What is the inverse of <span class="CharOverride-10">f</span>?</p>
			<p class="option-3-aline">	<span class="CharOverride-12">5.</span><span class="CharOverride-14">	</span>State with reason whether following functions have inverse</p>
			<p class="option--i-----ii-">	(i)	<span class="CharOverride-10">f</span> : {1, 2, 3, 4} <span class="CharOverride-11">→</span> {10} with</p>
			<p class="option--i-----ii-">		<span class="CharOverride-10">f</span>  = {(1, 10), (2, 10), (3, 10), (4, 10)}</p>
			<p class="option--i-----ii-">	(ii)	<span class="CharOverride-10">g</span> : {5, 6, 7, 8} <span class="CharOverride-11">→</span> {1, 2, 3, 4} with</p>
			<p class="option--i-----ii-">		<span class="CharOverride-10">g</span> = {(5, 4), (6, 3), (7, 4), (8, 2)}</p>
			<p class="option--i-----ii-">	(iii)	<span class="CharOverride-10">h</span> : {2, 3, 4, 5} <span class="CharOverride-11">→</span> {7, 9, 11, 13} with</p>
			<p class="option--i-----ii- ParaOverride-10">		<span class="CharOverride-10">h</span> = {(2, 7), (3, 9), (4, 11), (5, 13)}</p>
			<p class="option-3-aline">	<span class="CharOverride-12">6.</span><span class="CharOverride-14">	</span>Show that <span class="CharOverride-10">f</span> : [–1, 1] <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10"><img class="_idGenObjectAttribute-36" src="../Images/47.png" alt=""/></span> is one-one. Find the inverse of the function <span class="CharOverride-10">f</span> : [–1, 1] <span class="CharOverride-11">→</span> Range <span class="CharOverride-10">f</span>. </p>
			<p class="option-3-aline">		(Hint: For <span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> Range <span class="CharOverride-10">f</span>, <span class="CharOverride-10">y</span> = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =<img class="_idGenObjectAttribute-35" src="../Images/46.png" alt=""/>&#160; , for some <span class="CharOverride-10">x</span> in [–1, 1], i.e., <span class="CharOverride-10">x</span> =<img class="_idGenObjectAttribute-37" src="../Images/48.png" alt=""/>&#160;&#160;</p>
			<p class="option-3-aline">	<span class="CharOverride-12">7.</span>	Consider <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 4<span class="CharOverride-10">x</span> + 3. Show that <span class="CharOverride-10">f</span> is invertible. Find the inverse of <span class="CharOverride-10">f</span>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">8.</span><span class="CharOverride-14">	</span>Consider <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span><span class="CharOverride-24">+</span> <span class="CharOverride-11">→</span> [4, <span class="CharOverride-11">∞</span>) given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span> + 4. Show that <span class="CharOverride-10">f</span> is invertible with the inverse <span class="CharOverride-10">f</span><span class="CharOverride-19">–1 </span>of <span class="CharOverride-10">f</span> given by <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">y</span>)  =<img class="_idGenObjectAttribute-38" src="../Images/49.png" alt=""/>&#160; , where <span class="CharOverride-14">R</span><span class="CharOverride-16">+</span> is the set of all non-negative real numbers.</p>
			<p class="option-3-aline ParaOverride-10">	<span class="CharOverride-12">9.</span><span class="CharOverride-14">	</span>Consider <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span><span class="CharOverride-24">+</span> <span class="CharOverride-11">→</span> [– 5, <span class="CharOverride-11">∞</span>) given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 9<span class="CharOverride-10">x</span><span class="CharOverride-19">2</span> + 6<span class="CharOverride-10">x</span> – 5. Show that <span class="CharOverride-10">f</span> is invertible with <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>(<span class="CharOverride-10">y</span>)<span class="CharOverride-19"> </span>=<img class="_idGenObjectAttribute-39" src="../Images/50.png" alt=""/>&#160; .</p>
			<p class="option-3-aline ParaOverride-10">	<span class="CharOverride-12">10.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y be an invertible function. Show that <span class="CharOverride-10">f</span> has unique inverse.</p>
			<p class="option-3-aline">		(Hint: suppose <span class="CharOverride-10">g</span><span class="CharOverride-16">1</span> and <span class="CharOverride-10">g</span><span class="CharOverride-16">2</span> are two inverses of <span class="CharOverride-10">f</span>. Then for all <span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> Y, </p>
			<p class="option-3-aline"><span class="CharOverride-10">		f</span>o<span class="CharOverride-10">g</span><span class="CharOverride-16">1</span>(<span class="CharOverride-10">y</span>) = 1<span class="CharOverride-16">Y</span>(<span class="CharOverride-10">y</span>) = <span class="CharOverride-10">f</span>o<span class="CharOverride-10">g</span><span class="CharOverride-16">2</span>(<span class="CharOverride-10">y</span>). Use one-one ness of <span class="CharOverride-10">f</span>).</p>
			<p class="option-3-aline">	<span class="CharOverride-12">11.</span>	Consider <span class="CharOverride-10">f</span> : {1, 2, 3} <span class="CharOverride-11">→</span> {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} given by <span class="CharOverride-10">f</span>(1) = <span class="CharOverride-10">a</span>, <span class="CharOverride-10">f</span>(2) = <span class="CharOverride-10">b</span> and <span class="CharOverride-10">f</span>(3) = <span class="CharOverride-10">c</span>. Find <span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span> and show that (<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>)<span class="CharOverride-19">–1 </span>= <span class="CharOverride-10">f</span>. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">12.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span>: X <span class="CharOverride-11">→</span> Y be an invertible function. Show that the inverse of <span class="CharOverride-10">f </span><span class="CharOverride-19">–1</span> is <span class="CharOverride-10">f</span>, i.e., (<span class="CharOverride-10">f</span><span class="CharOverride-19">–1</span>)<span class="CharOverride-19">–1</span> = <span class="CharOverride-10">f</span>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">13.</span>	If <span class="CharOverride-10">f</span>: <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)&#160;<img class="_idGenObjectAttribute-40" src="../Images/51.png" alt=""/>, then <span class="CharOverride-10">f</span>o<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) is</p>
			<p class="Opt--4-a---d">	(A)=&#160;<img class="_idGenObjectAttribute-31" src="../Images/42.png" alt=""/>&#160;	&#160;(B)	<span class="CharOverride-10">x</span><span class="CharOverride-19">3</span>	(C)	<span class="CharOverride-10">x</span>	(D)	(3 – <span class="CharOverride-10">x</span><span class="CharOverride-19">3</span>).</p>
			<p class="option-3-aline">	<span class="CharOverride-12">14.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> –<img class="_idGenObjectAttribute-41" src="../Images/53.png" alt=""/>&#160; &#160;<span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be a function defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) =<img class="_idGenObjectAttribute-42" src="../Images/54.png" alt=""/>&#160; . The inverse of <span class="CharOverride-10">f</span> is the map <span class="CharOverride-10">g</span> : Range <span class="CharOverride-10">f</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> –&#160;<img class="_idGenObjectAttribute-41" src="../Images/53.png" alt=""/>&#160;given by</p>
			<p class="Opt-2-a-b-c-">	(A)<img class="_idGenObjectAttribute-43" src="../Images/56.png" alt=""/>&#160;	&#160;(B)<img class="_idGenObjectAttribute-43" src="../Images/57.png" alt=""/>&#160;&#160;</p>
			<p class="Opt-2-a-b-c-">	(C)<img class="_idGenObjectAttribute-43" src="../Images/58.png" alt=""/>&#160;	&#160;(D)<img class="_idGenObjectAttribute-43" src="../Images/59.png" alt=""/>&#160;&#160;</p>
			<h3 class="heading" id="sigil_toc_id_9"><span class="CharOverride-8">1.5  Binary Operations</span></h3>
			<p class="Body-Text ParaOverride-5">Right from the school days, you must have come across four fundamental operations namely addition, subtraction, multiplication and division. The main feature of these operations is that given any two numbers <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span>, we associate another number <span class="CharOverride-10">a</span> + <span class="CharOverride-10">b</span> or <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span> or <span class="CharOverride-10">ab</span> or <img class="_idGenObjectAttribute-4" src="../Images/60.png" alt=""/>, <span class="CharOverride-10">b</span> <span class="CharOverride-11">≠</span> 0. It is to be noted that only two numbers can be added or multiplied at a time. When we need to add three numbers, we first add two numbers and the result is then added to the third number. Thus, addition, multiplication, subtraction and division are examples of binary operation, as ‘binary’ means two. If we want to have a general definition which can cover all these four operations, then the set of numbers is to be replaced by an arbitrary set X and then general binary operation is nothing but association of any pair of elements <span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> from X to another element of X. This gives rise to a general definition as follows:</p>
			<p class="Definition ParaOverride-10"><span class="CharOverride-12">Definition 10</span> A binary operation <span class="CharOverride-11">∗</span> on a set A is a function <span class="CharOverride-11">∗ </span>: A × A <span class="CharOverride-11">→</span> A. We denote <span class="CharOverride-11">∗ </span>(<span class="CharOverride-10">a</span>,<span class="CharOverride-10"> b</span>) by <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 29</span> Show that addition, subtraction and multiplication are binary operations on <span class="CharOverride-14">R</span>, but division is not a binary operation on <span class="CharOverride-14">R</span>. Further, show that division is a binary operation on the set <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> of nonzero real numbers.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> 	</span>+	: <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> is given by  </p>
			<p class="Body-Text ParaOverride-5">		  (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10">a</span> + <span class="CharOverride-10">b</span></p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-10">	</span>–	: <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> is given by  </p>
			<p class="Body-Text ParaOverride-5">		  (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span></p>
			<p class="Body-Text ParaOverride-5"><span class="CharOverride-10">	</span>×	: <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> is given by  </p>
			<p class="Body-Text ParaOverride-5">		  (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10">ab</span></p>
			<p class="Body-Text ParaOverride-10">Since ‘+’, ‘–’ and ‘×’ are functions, they are binary operations on <span class="CharOverride-14">R</span>.</p>
			<p class="Body-Text ParaOverride-15">      But <span class="CharOverride-11">÷</span>	: <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given by  (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10"><img class="_idGenObjectAttribute-4" src="../Images/60.png" alt=""/></span>,<span class="CharOverride-10"> </span>is not a function and hence not a binary operation, as for <span class="CharOverride-10">b</span> = 0, <img class="_idGenObjectAttribute-4" src="../Images/60.png" alt=""/> is not defined. </p>
			<p class="Body-Text ParaOverride-10">However, <span class="CharOverride-11">÷</span>	: <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> × <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span>, given by (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span><img class="_idGenObjectAttribute-4" src="../Images/60.png" alt=""/><span class="CharOverride-10">&#160;</span>is a function and hence a binary operation on <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 30</span>  Show that subtraction and division are not binary operations on <span class="CharOverride-14">N</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14">  </span>– : <span class="CharOverride-14">N</span> × <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, given by (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>, is not binary operation, as the image of (3, 5) under ‘–’ is 3 – 5 = – 2 <span class="CharOverride-11">∉</span> <span class="CharOverride-14">N</span>. Similarly, <span class="CharOverride-11">÷</span> : <span class="CharOverride-14">N</span> × <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span>, given by (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10">a</span> <span class="CharOverride-11">÷</span> <span class="CharOverride-10">b</span> is not a binary operation, as the image of (3, 5) under <span class="CharOverride-11">÷</span> is 3 <span class="CharOverride-11">÷</span> 5 =<img class="_idGenObjectAttribute-4" src="../Images/64.png" alt=""/>&#160; &#160;<span class="CharOverride-11">∉</span> <span class="CharOverride-14">N</span>.</p>
			<p class="Remarks ParaOverride-26"><span class="CharOverride-12">Example 31</span><span class="CharOverride-14"> </span>Show that&#160;<span class="CharOverride-11"><img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/>&#160;</span>: <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> <span class="CharOverride-10">a</span> + 4<span class="CharOverride-10">b</span><span class="CharOverride-19">2</span> is a binary operation.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since<img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/>&#160;carries each pair (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) to a unique element <span class="CharOverride-10">a</span> + 4<span class="CharOverride-10">b</span><span class="CharOverride-19">2</span> in <span class="CharOverride-14">R</span>, <span class="CharOverride-11">∗ </span>is a binary operation on <span class="CharOverride-14">R</span>.</p>
			<p class="Remarks ParaOverride-29"><span class="CharOverride-12">E</span><span class="CharOverride-12">xample 32</span><span class="CharOverride-14"> </span>Let P be the set of all subsets of a given set X. Show that <span class="CharOverride-11">∪</span> : P × P <span class="CharOverride-11">→</span> P given by (A, B) <span class="CharOverride-11">→</span> A <span class="CharOverride-11">∪</span> B and <span class="CharOverride-11">∩</span> : P × P <span class="CharOverride-11">→</span> P given by (A, B) <span class="CharOverride-11">→</span> A <span class="CharOverride-11">∩</span> B are binary operations on the set P.</p>
			<p class="Remarks ParaOverride-29"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since union operation <span class="CharOverride-11">∪</span> carries each pair (A, B) in P × P to a unique element A <span class="CharOverride-11">∪ </span>B  in P, <span class="CharOverride-11">∪ </span>is binary operation on P. Similarly, the intersection operation <span class="CharOverride-11">∩</span> carries each pair (A, B) in P × P to a unique element A <span class="CharOverride-11">∩</span> B in P, <span class="CharOverride-11">∩</span> is a binary operation on P.</p>
			<p class="Remarks ParaOverride-29"><span class="CharOverride-12">Example 3</span><span class="CharOverride-12">3</span><span class="CharOverride-14"> </span>Show that the  <img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/> : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> max {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>} and the <span class="CharOverride-11"><br/><img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/></span> : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">→</span> min {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>} are binary operations.</p>
			<p class="Remarks ParaOverride-29"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since <img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/> carries each pair (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) in <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> to a unique element namely maximum of <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span> lying in <span class="CharOverride-14">R</span>, <img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/> is a binary operation. Using the similar argument, one can say that <span class="CharOverride-11"><img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/></span> is also a binary operation.</p>
			<p class="Remarks ParaOverride-30"><span class="CharOverride-15">Remark</span><span class="CharOverride-8"> </span><img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/>(4, 7) = 7, <img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/>(4, – 7) = 4, <span class="CharOverride-11"><img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/></span>(4, 7) = 4 and <span class="CharOverride-11"><img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/></span>(4, – 7) = – 7.</p>
			<p class="Body-Text">When number of elements in a set A is small, we can express a binary operation <span class="CharOverride-11">∗</span> on the set A through a table called the <span class="CharOverride-10">operation table</span> for the operation <span class="CharOverride-11">∗</span>. For example consider A = {1, 2, 3}. Then, the operation <img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/> on  A defined in Example 33 can be expressed by the following operation table (Table 1.1) . Here, <img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/> (1, 3) = 3, <img class="_idGenObjectAttribute-44" src="../Images/65.png" alt=""/> (2, 3) = 3, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> (1, 2) = 2.</p>
			<h5 class="Body-Text ParaOverride-14" style="text-align: center;" id="sigil_toc_id_10"><span class="CharOverride-17">Table 1.1</span></h5>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer104" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
					<img class="_idGenObjectAttribute-1" src="../Images/Table_1.png" alt=""/>
				</div>
			</div>
			<p class="Body-Text ParaOverride-31">Here, we are having 3 rows and 3 columns in the operation table with (<span class="CharOverride-10">i</span>, <span class="CharOverride-10">j</span>) the entry of the table being maximum of <span class="CharOverride-10">i</span><span class="CharOverride-19">th</span> and <span class="CharOverride-10">j</span><span class="CharOverride-19">th</span> elements of the set A. This can be generalised for  general operation <span class="CharOverride-11">∗</span> : A × A <span class="CharOverride-11">→</span> A. If A = {<span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">2</span>, ..., <span class="CharOverride-10">a</span><span class="CharOverride-18">n</span>}. Then the operation table will be having <span class="CharOverride-10">n</span> rows and <span class="CharOverride-10">n</span> columns with (<span class="CharOverride-10">i</span>, <span class="CharOverride-10">j</span>)<span class="CharOverride-19">th</span> entry being <span class="CharOverride-10">a</span><span class="CharOverride-18">i</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span><span class="CharOverride-18">j</span>. Conversely, given any operation table having <span class="CharOverride-10">n</span> rows and <span class="CharOverride-10">n</span> columns with each entry being an element of A = {<span class="CharOverride-10">a</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">a</span><span class="CharOverride-16">2</span>, ..., <span class="CharOverride-10">a</span><span class="CharOverride-18">n</span>}, we can define a binary operation <span class="CharOverride-11">∗</span> : A × A <span class="CharOverride-11">→</span> A given by <span class="CharOverride-10">a</span><span class="CharOverride-18">i</span><span class="CharOverride-10"> </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> a</span><span class="CharOverride-18">j</span> = the entry in the <span class="CharOverride-10">i</span><span class="CharOverride-19">th</span> row and <span class="CharOverride-10">j</span><span class="CharOverride-19">th</span> column of the operation table.</p>
			<p class="Body-Text">One may note that 3 and 4 can be added in any order and the result is same, i.e., <br/>3 + 4 = 4 + 3, but subtraction of 3 and 4 in different order give different results, i.e., <br/>3 – 4 <span class="CharOverride-11">≠</span> 4 – 3. Similarly, in case of multiplication of 3 and 4, order is immaterial, but division of 3 and 4 in different order give different results. Thus, addition and multiplication of 3 and 4 are meaningful, but subtraction and division of 3 and 4 are meaningless. For subtraction and division we have to write ‘subtract 3 from 4’, ‘subtract 4 from 3’, ‘divide 3 by 4’ or ‘divide 4 by 3’. </p>
			<p class="Body-Text">This leads to the following definition:</p>
			<p class="Definition ParaOverride-10"><span class="CharOverride-12">Definition 11</span> A binary operation <span class="CharOverride-11">∗</span> on the set X is called <span class="CharOverride-10">commutative</span>, if <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = <span class="CharOverride-10">b </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> a</span>, for every <span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> <span class="CharOverride-11">∈</span> X. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 34</span><span class="CharOverride-14"> </span>Show that + : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> and × : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> are commutative binary operations, but – : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> and <span class="CharOverride-11">÷</span> : <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> × <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> are not commutative.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since <span class="CharOverride-10">a</span> + <span class="CharOverride-10">b</span> = <span class="CharOverride-10">b</span> + <span class="CharOverride-10">a</span> and <span class="CharOverride-10">a</span> × <span class="CharOverride-10">b</span> = <span class="CharOverride-10">b</span> × <span class="CharOverride-10">a</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span>, ‘+’ and ‘×’ are commutative binary operation. However, ‘–’ is not commutative, since 3 – 4 <span class="CharOverride-11">≠</span> 4 – 3. </p>
			<p class="Body-Text ParaOverride-15">Similarly, 3 <span class="CharOverride-11">÷</span> 4 <span class="CharOverride-11">≠</span> 4 <span class="CharOverride-11">÷</span> 3 shows that ‘<span class="CharOverride-11">÷</span>’ is not commutative.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 35</span><span class="CharOverride-14"> </span>Show that <span class="CharOverride-11">∗</span> : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> defined by <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span> + 2<span class="CharOverride-10">b</span> is not commutative. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since 3 <span class="CharOverride-11">∗</span> 4 = 3 + 8 = 11 and 4 <span class="CharOverride-11">∗</span> 3 = 4 + 6 = 10, showing that the operation <span class="CharOverride-11">∗</span> is not commutative. </p>
			<p class="Body-Text">If we want to associate three elements of a set X through a binary operation on X, we encounter a natural problem. The expression <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span> may be interpreted as <br/>(<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span>) <span class="CharOverride-11">∗</span><span class="CharOverride-10"> c</span> or <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗ </span>(<span class="CharOverride-10">b </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> c</span>) and these two expressions need not be same. For example, (8 – 5) – 2 <span class="CharOverride-11">≠</span> 8 – (5 – 2). Therefore, association of three numbers 8, 5 and 3 through the binary operation ‘subtraction’ is meaningless, unless bracket is used. But in case of addition, 8 + 5 + 2 has the same value whether we look at it as ( 8 + 5) + 2 or as 8 + (5 + 2). Thus, association of 3 or even more than 3 numbers through addition is meaningful without using bracket. This leads to the following:</p>
			<p class="Definition"><span class="CharOverride-12">Definition 1</span><span class="CharOverride-12">2</span> A binary operation <span class="CharOverride-11">∗</span> : A × A <span class="CharOverride-11">→</span> A is said to be <span class="CharOverride-10">associative </span>if (<span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span>) <span class="CharOverride-11">∗</span><span class="CharOverride-10"> c </span>= <span class="CharOverride-10">a </span><span class="CharOverride-11">∗ </span>(<span class="CharOverride-10">b </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> c</span>), <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>, <span class="CharOverride-11">∈</span> A.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 36</span><span class="CharOverride-14"> </span>Show that addition and multiplication are associative binary operation on <span class="CharOverride-14">R</span>. But subtraction is not associative on <span class="CharOverride-14">R</span>. Division is not associative on <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Addition and multiplication are associative, since (<span class="CharOverride-10">a</span> + <span class="CharOverride-10">b</span>) + <span class="CharOverride-10">c</span> = <span class="CharOverride-10">a</span> + (<span class="CharOverride-10">b </span>+ <span class="CharOverride-10">c</span>) and (<span class="CharOverride-10">a</span> × <span class="CharOverride-10">b</span>) × <span class="CharOverride-10">c</span> = <span class="CharOverride-10">a</span> × (<span class="CharOverride-10">b </span>× <span class="CharOverride-10">c</span>) <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> <span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span> <span class="CharOverride-11">∈</span> R. However, subtraction and division are not associative, as (8 – 5) – 3 <span class="CharOverride-11">≠</span> 8 – (5 – 3) and (8 <span class="CharOverride-11">÷</span> 5) <span class="CharOverride-11">÷</span> 3 <span class="CharOverride-11">≠</span> 8 <span class="CharOverride-11">÷ </span>(5 <span class="CharOverride-11">÷</span> 3).</p>
			<p class="Remarks"><span class="CharOverride-12">Example 37</span><span class="CharOverride-14"> </span>Show that <span class="CharOverride-11">∗</span> : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b </span><span class="CharOverride-11">→</span> <span class="CharOverride-10">a</span> + 2<span class="CharOverride-10">b</span> is not associative.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>The operation <span class="CharOverride-11">∗</span> is not associative, since </p>
			<p class="Remarks ParaOverride-33">		(8 <span class="CharOverride-11">∗</span> 5) <span class="CharOverride-11">∗</span> 3 = (8 + 10) <span class="CharOverride-11">∗</span> 3 = (8 + 10) + 6 = 24, </p>
			<p class="Remarks ParaOverride-33">while 		8 <span class="CharOverride-11">∗ </span>(5 <span class="CharOverride-11">∗</span> 3) = 8 <span class="CharOverride-11">∗</span> (5 + 6) = 8 <span class="CharOverride-11">∗</span> 11 = 8 + 22 = 30.</p>
			<p class="Remarks"><span class="CharOverride-15">Remark</span> Associative property of a binary operation is very important in the sense that with this property of a binary operation, we can write <span class="CharOverride-10">a</span><span class="CharOverride-16">1</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span><span class="CharOverride-16">2 </span><span class="CharOverride-11">∗</span> ... <span class="CharOverride-11">∗</span><span class="CharOverride-10"> a</span><span class="CharOverride-18">n</span> which is not ambiguous. But in absence of this property, the expression <span class="CharOverride-10">a</span><span class="CharOverride-16">1</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span><span class="CharOverride-16">2 </span><span class="CharOverride-11">∗</span> ... <span class="CharOverride-11">∗</span><span class="CharOverride-10"> a</span><span class="CharOverride-18">n</span> is ambiguous unless brackets are used. Recall that in the earlier classes brackets were used whenever subtraction or division operations or more than one operation occurred.</p>
			<p class="Body-Text">For the binary operation ‘+’ on <span class="CharOverride-14">R</span>, the interesting feature of the number zero is that <span class="CharOverride-10">a</span> + 0 = <span class="CharOverride-10">a</span> = 0 + <span class="CharOverride-10">a</span>, i.e., any number remains unaltered by adding zero. But in case of multiplication, the number 1 plays this role, as <span class="CharOverride-10">a</span> × 1 = <span class="CharOverride-10">a</span> = 1 × <span class="CharOverride-10">a</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> <span class="CharOverride-10">a</span> in <span class="CharOverride-14">R</span>. This leads to the following definition:</p>
			<p class="Definition"><span class="CharOverride-12">Definition 1</span><span class="CharOverride-12">3</span> Given a binary operation <span class="CharOverride-11">∗</span> : A × A <span class="CharOverride-11">→</span> A, an element <span class="CharOverride-10">e</span> <span class="CharOverride-11">∈</span> A, if it exists, is called <span class="CharOverride-10">identity </span>for the operation <span class="CharOverride-11">∗</span>, if <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> e </span>= <span class="CharOverride-10">a</span> = <span class="CharOverride-10">e</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> a</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> A.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 38</span> Show that zero is the identity for addition on <span class="CharOverride-14">R</span> and 1 is the identity for multiplication on R. But there is no identity element for the operations</p>
			<p class="Remarks ParaOverride-12">– :<span class="CharOverride-14"> R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> and <span class="CharOverride-11">÷</span> : <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> × <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span> <span class="CharOverride-10">a</span> + 0 = 0 + <span class="CharOverride-10">a</span> = <span class="CharOverride-10">a</span> and <span class="CharOverride-10">a</span> × 1 = <span class="CharOverride-10">a </span>= 1 × <span class="CharOverride-10">a</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span> implies that 0 and 1 are identity elements for the operations ‘+’ and ‘×’ respectively. Further, there is no element <span class="CharOverride-10">e</span> in <span class="CharOverride-14">R</span> with <span class="CharOverride-10">a</span> – <span class="CharOverride-10">e </span>= <span class="CharOverride-10">e</span> – <span class="CharOverride-10">a</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>. Similarly, we can not find any element <span class="CharOverride-10">e</span> in <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span> such that <span class="CharOverride-10"><br/>a </span><span class="CharOverride-11">÷</span> <span class="CharOverride-10">e</span> = <span class="CharOverride-10">e</span> <span class="CharOverride-11">÷</span> <span class="CharOverride-10">a</span>, <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/><span class="CharOverride-10">a</span> in <span class="CharOverride-14">R</span><span class="CharOverride-21">∗</span>. Hence, ‘–’ and ‘<span class="CharOverride-11">÷</span>’ do not have identity element.</p>
			<p class="Remarks"><span class="CharOverride-15">Remark</span><span class="CharOverride-13"> </span>Zero is identity for the addition operation on <span class="CharOverride-14">R</span> but it is not identity for the addition operation on <span class="CharOverride-14">N</span>, as 0 <span class="CharOverride-11">∉</span> <span class="CharOverride-14">N</span>. In fact the addition operation on <span class="CharOverride-14">N</span> does not have any identity. </p>
			<p class="Body-Text">One further notices that for the addition operation + : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span>, given any <span class="CharOverride-10">a </span><span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span>, there exists – <span class="CharOverride-10">a</span> in <span class="CharOverride-14">R</span> such that <span class="CharOverride-10">a</span> + (– <span class="CharOverride-10">a</span>) = 0 (identity for ‘+’) = (– <span class="CharOverride-10">a</span>) + <span class="CharOverride-10">a</span>. Similarly, for the multiplication operation on <span class="CharOverride-14">R</span>, given any <span class="CharOverride-10">a</span> <span class="CharOverride-11">≠</span> 0 in <span class="CharOverride-14">R</span>, we can choose <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/> in <span class="CharOverride-14">R</span> such that <span class="CharOverride-10">a</span> × <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/> = 1(identity for ‘×’) = <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/>× <span class="CharOverride-10">a</span>. This leads to the following definition:</p>
			<p class="Definition"><span class="CharOverride-12">Definition 14</span> Given a binary operation <span class="CharOverride-11">∗</span> : A × A <span class="CharOverride-11">→</span> A with the identity element <span class="CharOverride-10">e</span> in A, an element <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> A is said to be <span class="CharOverride-10">invertible </span>with respect to the operation <span class="CharOverride-11">∗</span>, if there exists an element <span class="CharOverride-10">b</span> in A such that <i><span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">e</span> = <span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span></i> and <span class="CharOverride-10">b</span> is called the<i> </i><span class="CharOverride-10"><i>inverse</i> of a</span> and is denoted by <span class="CharOverride-10">a</span><span class="CharOverride-19">–1</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 39</span><span class="CharOverride-14"> </span>Show that –<span class="CharOverride-10"> a</span> is the inverse of <span class="CharOverride-10">a</span> for the addition operation ‘+’ on <span class="CharOverride-14">R</span> and <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/> is the inverse of <span class="CharOverride-10">a</span> <span class="CharOverride-11">≠</span> 0 for the multiplication operation ‘×’ on <span class="CharOverride-14">R</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>As <span class="CharOverride-10">a</span> + (– <span class="CharOverride-10">a</span>) = <span class="CharOverride-10">a</span> – <span class="CharOverride-10">a</span> = 0 and (– <span class="CharOverride-10">a</span>) + <span class="CharOverride-10">a</span> = 0, – <span class="CharOverride-10">a</span> is the inverse of <span class="CharOverride-10">a</span> for addition. Similarly, for <span class="CharOverride-10">a</span> <span class="CharOverride-11">≠</span> 0, <span class="CharOverride-10">a</span> ×<img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/>= 1 = <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/>× <span class="CharOverride-10">a</span> implies that <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/> is the inverse of <span class="CharOverride-10">a</span> for multiplication.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 40</span><span class="CharOverride-14"> </span>Show that – <span class="CharOverride-10">a</span> is not the inverse of <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span> for the addition operation + on <span class="CharOverride-14">N</span> and <img class="_idGenObjectAttribute-4" src="../Images/86.png" alt=""/>is not the inverse of <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span> for multiplication operation × on <span class="CharOverride-14">N</span>, for <span class="CharOverride-10">a</span> <span class="CharOverride-11">≠</span> 1.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since –<span class="CharOverride-10"> a</span> <span class="CharOverride-11">∉</span> <span class="CharOverride-14">N</span>,  – <span class="CharOverride-10">a</span> can not be inverse of <span class="CharOverride-10">a</span> for addition operation on <span class="CharOverride-14">N</span>, although –<span class="CharOverride-10"> a</span> satisfies <span class="CharOverride-10">a</span> + (– <span class="CharOverride-10">a</span>) = 0 = (– <span class="CharOverride-10">a</span>) + <span class="CharOverride-10">a</span>.</p>
			<p class="Body-Text">Similarly, for <span class="CharOverride-10">a</span> <span class="CharOverride-11">≠</span> 1 in <span class="CharOverride-14">N</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> <span class="CharOverride-11">∉</span> <span class="CharOverride-14">N</span>,  which implies that other than 1 no element of <span class="CharOverride-14">N</span> has inverse for multiplication operation on <span class="CharOverride-14">N</span>.</p>
			<p class="Body-Text">Examples 34, 36, 38 and 39 show that addition on <span class="CharOverride-14">R</span> is a commutative and associative binary operation with 0 as the identity element and – <span class="CharOverride-10">a</span> as the inverse of <span class="CharOverride-10">a</span> in <span class="CharOverride-14">R</span> <img class="_idGenObjectAttribute-45" src="../Images/96.png" alt=""/><span class="CharOverride-10">a</span>.</p>
			<h3 class="Exercise" style="text-align: center;" id="sigil_toc_id_11"><span class="CharOverride-8">Exercise 1.4</span></h3>
			<p class="option-3-aline">	<span class="CharOverride-12">1.</span><span class="CharOverride-14">	</span>Determine whether or not each of the definition of <span class="CharOverride-11">∗</span> given below gives a binary operation. In the event that <span class="CharOverride-11">∗</span> is  not a binary operation, give justification for this.</p>
			<p class="option--i-----ii-">	(i)	On <span class="CharOverride-14">Z</span><span class="CharOverride-19">+</span>, define <span class="CharOverride-11">∗ </span>by <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span></p>
			<p class="option--i-----ii-"><span class="CharOverride-10">	</span>(ii)	On <span class="CharOverride-14">Z</span><span class="CharOverride-19">+</span>, define <span class="CharOverride-11">∗ </span>by <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">ab</span></p>
			<p class="option--i-----ii-"><span class="CharOverride-10">	</span>(iii)	On <span class="CharOverride-14">R</span>, define <span class="CharOverride-11">∗ </span>by <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">ab</span><span class="CharOverride-19">2</span></p>
			<p class="option--i-----ii-">	(iv)	On <span class="CharOverride-14">Z</span><span class="CharOverride-19">+</span>, define <span class="CharOverride-11">∗ </span>by <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = |<span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>|</p>
			<p class="option--i-----ii-">	(v)	On <span class="CharOverride-14">Z</span><span class="CharOverride-19">+</span>, define <span class="CharOverride-11">∗ </span>by <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span></p>
			<p class="option-3-aline">	<span class="CharOverride-12">2.</span>	For each operation <span class="CharOverride-11">∗</span> defined below, determine whether <span class="CharOverride-11">∗</span> is binary, commutative or associative.</p>
			<p class="option--i-----ii-">	(i)	On <span class="CharOverride-14">Z</span>, define <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span></p>
			<p class="option--i-----ii-"><span class="CharOverride-10">	</span>(ii)	On <span class="CharOverride-14">Q</span>, define <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">ab</span> + 1</p>
			<p class="option--i-----ii-"><span class="CharOverride-10">	</span>(iii)	On <span class="CharOverride-14">Q</span>, define <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = ab/2</p>
			<p class="option--i-----ii-">	(iv)	On <span class="CharOverride-14">Z</span><span class="CharOverride-19">+</span>, define <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = 2<span class="CharOverride-27">ab</span></p>
			<p class="option--i-----ii-">	(v)	On <span class="CharOverride-14">Z</span><span class="CharOverride-19">+</span>, define <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">a</span><span class="CharOverride-27">b</span></p>
			<p class="option--i-----ii-">	(vi)	On <span class="CharOverride-14">R</span> – {– 1}, define <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b </span>=<img class="_idGenObjectAttribute-34" src="../Images/97.png" alt=""/>&#160;&#160;</p>
			<p class="option-3-aline">	<span class="CharOverride-12">3.</span><span class="CharOverride-14">	</span>Consider the binary operation <span class="CharOverride-11"><img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/></span>on the set {1, 2, 3, 4, 5} defined by <span class="CharOverride-10"><br/>a</span> <span class="CharOverride-11"><img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/></span> <span class="CharOverride-10">b</span> = min {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>}. Write the operation table of the operation&#160;<img class="_idGenObjectAttribute-44" src="../Images/66.png" alt=""/>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">4.</span><span class="CharOverride-14">	</span>Consider a binary operation <span class="CharOverride-11">∗</span> on the set {1, 2, 3, 4, 5} given by the following multiplication table (Table 1.2).</p>
			<p class="option--i-----ii- ParaOverride-10">	(i)	Compute (2 <span class="CharOverride-11">∗</span> 3) <span class="CharOverride-11">∗</span> 4 and 2 <span class="CharOverride-11">∗ </span>(3 <span class="CharOverride-11">∗</span> 4)</p>
			<p class="option--i-----ii- ParaOverride-10">	(ii)	Is <span class="CharOverride-11">∗</span> commutative?</p>
			<p class="option--i-----ii- ParaOverride-10">	(iii)	Compute (2 <span class="CharOverride-11">∗</span> 3) <span class="CharOverride-11">∗</span> (4 <span class="CharOverride-11">∗</span> 5).</p>
			<p class="option-3-aline">		(Hint: use the following table)</p>
			<p class="Body-Text ParaOverride-14"><span class="CharOverride-12">5.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-11">∗′ </span>be the binary operation on the set {1, 2, 3, 4, 5} defined by&#160;<br/></p>
<p class="option-3-aline"><span class="CharOverride-10">a</span> <span class="CharOverride-11">∗′</span><span class="CharOverride-10"> b</span> = H.C.F. of <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span>. Is the operation <span class="CharOverride-11">∗′</span> same as the operation <span class="CharOverride-11">∗</span> defined in Exercise 4 above? Justify your answer.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">6.</span>	Let <span class="CharOverride-11">∗</span> be the binary operation on <span class="CharOverride-14">N</span> given by <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = L.C.M. of <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span>. Find</p>
			<p class="option--i-----ii-">	(i)	5 <span class="CharOverride-11">∗</span> 7,   20 <span class="CharOverride-11">∗</span> 16	(ii)	Is <span class="CharOverride-11">∗</span> commutative?</p>
			<p class="option--i-----ii-">	(iii)	Is <span class="CharOverride-11">∗</span> associative?	(iv)	Find the identity of <span class="CharOverride-11">∗ </span>in <span class="CharOverride-14">N</span></p>
			<p class="option--i-----ii-">	(v)	Which elements of <span class="CharOverride-14">N</span> are invertible for the operation <span class="CharOverride-11">∗</span>?</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">7.</span>	Is <span class="CharOverride-11">∗</span> defined on the set {1, 2, 3, 4, 5} by <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = L.C.M. of <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span> a binary operation? Justify your answer. </p>
<h5 class="option-3-aline" style="text-align: center;" id="sigil_toc_id_12">Table 1.2<br/></h5>
			<div class="_idGenObjectLayout-1">
				<div id="_idContainer128" class="Basic-Graphics-Frame _idGenObjectStyle-Disabled" style="text-align: center;">
					<img class="_idGenObjectAttribute-1" src="../Images/Table_2.png" alt=""/>
				</div>
			</div>
			<p class="option-3-aline">	<span class="CharOverride-12">8.</span>	Let <span class="CharOverride-11">∗</span> be the binary operation on <span class="CharOverride-14">N</span> defined by <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = H.C.F. of <span class="CharOverride-10">a</span> and <span class="CharOverride-10">b</span>. <br/>Is <span class="CharOverride-11">∗</span> commutative? Is <span class="CharOverride-11">∗</span> associative? Does there exist identity for this binary operation on <span class="CharOverride-14">N</span>?</p>
			<p class="option-3-aline">	<span class="CharOverride-12">9.</span>	Let <span class="CharOverride-11">∗</span> be a binary operation on the set <span class="CharOverride-14">Q</span> of rational numbers as follows:</p>
			<p class="option--i-----ii- ParaOverride-10">	(i)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = <span class="CharOverride-10">a </span>–<span class="CharOverride-10"> b</span>	(ii)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = <span class="CharOverride-10">a</span><span class="CharOverride-19">2</span><span class="CharOverride-10"> </span>+<span class="CharOverride-10"> b</span><span class="CharOverride-19">2</span></p>
			<p class="option--i-----ii- ParaOverride-10"><span class="CharOverride-19">	</span>(iii)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = <span class="CharOverride-10">a </span>+<span class="CharOverride-10"> ab</span>	(iv)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = (<span class="CharOverride-10">a </span>–<span class="CharOverride-10"> b</span>)<span class="CharOverride-19">2</span></p>
			<p class="option--i-----ii- ParaOverride-10">	(v)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> =<img class="_idGenObjectAttribute-45" src="../Images/101.png" alt=""/>&#160; &#160;(vi)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = <span class="CharOverride-10">ab</span><span class="CharOverride-19">2</span></p>
			<p class="option-3-aline ParaOverride-35">Find which of the binary operations are commutative and which are associative. </p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">10.</span>	Find which of the operations given above has identity.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">11.</span>	Let A = <span class="CharOverride-14">N</span> × <span class="CharOverride-14">N</span> and <span class="CharOverride-11">∗</span> be the binary operation on A defined by </p>
			<p class="option-3-aline ParaOverride-12">(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∗</span> (<span class="CharOverride-10">c</span>,<span class="CharOverride-10"> d</span>) = (<span class="CharOverride-10">a</span> + <span class="CharOverride-10">c</span>, <span class="CharOverride-10">b</span> + <span class="CharOverride-10">d</span>) </p>
			<p class="option-3-aline">		Show that <span class="CharOverride-11">∗</span> is commutative and associative. Find the identity element for <span class="CharOverride-11">∗</span> on A, if any.</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">12.</span><span class="CharOverride-14">	</span>State whether the following statements are true or false. Justify.</p>
			<p class="option--i-----iii--align ParaOverride-18">	(i)	For an arbitrary binary operation <span class="CharOverride-11">∗</span> on a set <span class="CharOverride-14">N</span>, <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> a </span>= <span class="CharOverride-10">a</span> <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>.</p>
			<p class="option--i-----iii--align ParaOverride-18">	(ii)	If <span class="CharOverride-11">∗</span> is a commutative binary operation on <span class="CharOverride-14">N</span>, then <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> (<span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> c</span>) = (<span class="CharOverride-10">c</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span>)<span class="CharOverride-10"> </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> a</span></p>
			<p class="option--i-----iii--align ParaOverride-16">	<span class="CharOverride-12">13.</span><span class="CharOverride-14">	</span>Consider a binary operation <span class="CharOverride-11">∗</span> on <span class="CharOverride-14">N</span> defined as <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span> = <span class="CharOverride-10">a</span><span class="CharOverride-19">3</span> + <span class="CharOverride-10">b</span><span class="CharOverride-19">3</span>.  Choose the correct answer.</p>
			<p class="Opt-4-A-D">	(A)	Is <span class="CharOverride-11">∗</span> both associative and commutative?</p>
			<p class="Opt-2-a-b-c-">	(B)	Is <span class="CharOverride-11">∗</span> commutative but not associative?</p>
			<p class="Opt-2-a-b-c-">	(C)	Is <span class="CharOverride-11">∗</span> associative but not commutative?</p>
			<p class="Opt-2-a-b-c-">	(D)	Is <span class="CharOverride-11">∗</span> neither commutative nor associative?</p>
			<h5 class="micellaneous" id="sigil_toc_id_13"><span class="CharOverride-8">Miscellaneous Examples</span></h5>
			<p class="Remarks ParaOverride-26"><span class="CharOverride-12">Example 41</span> If R<span class="CharOverride-16">1</span><span class="CharOverride-19"> </span>and R<span class="CharOverride-16">2</span> are equivalence relations in a set A, show that R<span class="CharOverride-16">1</span> <span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> is also an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since R<span class="CharOverride-16">1</span><span class="CharOverride-19"> </span>and R<span class="CharOverride-16">2</span> are equivalence relations, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span>, and (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">2</span> <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a </span><span class="CharOverride-11">∈</span> A. This implies that (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>, showing R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> is reflexive. Further, <br/>(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span> and (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span> and (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> <br/>(<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span> <span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span>, hence, R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> is symmetric. Similarly, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span> <span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> and <br/>(<span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈ </span>R<span class="CharOverride-16">1</span> and (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈ </span>R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span>. This shows that <br/>R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> is transitive. Thus, R<span class="CharOverride-16">1 </span><span class="CharOverride-11">∩</span> R<span class="CharOverride-16">2</span> is an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 42</span><span class="CharOverride-14"> </span>Let R be a relation on the set A of ordered pairs of positive integers defined by (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) R (<span class="CharOverride-10">u</span>, <span class="CharOverride-10">v</span>) if  and only if <span class="CharOverride-10">xv</span> = <span class="CharOverride-10">yu</span>. Show that R is an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Clearly, (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) R (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>), <span class="CharOverride-11"><img class="_idGenObjectAttribute-46" src="../Images/106.png" alt=""/></span>(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) <span class="CharOverride-11">∈</span> A, since <span class="CharOverride-10">xy</span> = <span class="CharOverride-10">yx</span>. This shows that R is reflexive. Further, (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) R (<span class="CharOverride-10">u</span>, <span class="CharOverride-10">v</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">xv </span>= <span class="CharOverride-10">yu </span><span class="CharOverride-11">⇒</span> <span class="CharOverride-10">uy</span> = <span class="CharOverride-10">vx</span> and hence (<span class="CharOverride-10">u</span>, <span class="CharOverride-10">v</span>) R (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>). This shows that R is symmetric. Similarly, (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) R (<span class="CharOverride-10">u</span>, <span class="CharOverride-10">v</span>) and (<span class="CharOverride-10">u</span>, <span class="CharOverride-10">v</span>) R (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">xv</span> = <span class="CharOverride-10">yu</span> and <span class="CharOverride-10">ub</span> = <span class="CharOverride-10">va</span> <span class="CharOverride-11">⇒</span> <span class="CharOverride-10"><img class="_idGenObjectAttribute-47" src="../Images/107.png" alt=""/></span><span class="CharOverride-11">⇒ </span><span class="CharOverride-10"><img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> </span><span class="CharOverride-11">⇒</span> <span class="CharOverride-10">xb</span> = <span class="CharOverride-10">ya</span> and hence (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) R (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>). Thus, R is transitive. Thus, R is an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 43</span><span class="CharOverride-14"> </span>Let X = {1, 2, 3, 4, 5, 6, 7, 8, 9}. Let R<span class="CharOverride-16">1</span> be a relation in X given <br/>by R<span class="CharOverride-16">1</span> = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) : <span class="CharOverride-10">x </span>– <span class="CharOverride-10">y</span> is divisible by 3} and R<span class="CharOverride-16">2</span> be another relation on X given by <br/>R<span class="CharOverride-16">2</span> = {(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>): {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {1, 4, 7}} or {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂ </span>{2, 5, 8} or {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂ </span>{3, 6, 9}}. Show that R<span class="CharOverride-16">1</span> = R<span class="CharOverride-16">2</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Note that the characteristic of sets {1, 4, 7}, {2, 5, 8} and {3, 6, 9} is <br/>that difference between any two elements of these sets is a multiple of 3. Therefore, <br/>(<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span> <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span> – <span class="CharOverride-10">y</span> is a multiple of 3 <span class="CharOverride-11">⇒</span> {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {1, 4, 7} or {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {2, 5, 8} <br/>or {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {3, 6, 9} <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>) <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">2</span>. Hence, R<span class="CharOverride-16">1</span> <span class="CharOverride-11">⊂</span> R<span class="CharOverride-16">2</span>. Similarly, {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⇒</span> {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {1, 4, 7} or {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {2, 5, 8} or  {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">⊂</span> {3, 6, 9} <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span> – <span class="CharOverride-10">y</span> is divisible by <br/>3 <span class="CharOverride-11">⇒</span> {<span class="CharOverride-10">x</span>, <span class="CharOverride-10">y</span>} <span class="CharOverride-11">∈</span> R<span class="CharOverride-16">1</span>. This shows that R<span class="CharOverride-16">2</span> <span class="CharOverride-11">⊂</span> R<span class="CharOverride-16">1</span>. Hence, R<span class="CharOverride-16">1</span> = R<span class="CharOverride-16">2</span>.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 44</span><span class="CharOverride-14"> </span>Let <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y be a function. Define a relation R in X given by </p>
			<p class="Remarks ParaOverride-26">R = {(<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>): <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">b</span>)}. Examine whether R is an equivalence relation or not.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span> For every <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> X, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R, since <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>), showing that R is reflexive. Similarly, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">b</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">f</span>(<span class="CharOverride-10">b</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R. Therefore, R is symmetric. Further, (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R and (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">b</span>) and <span class="CharOverride-10">f</span>(<span class="CharOverride-10">b</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">c</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">c</span>) <span class="CharOverride-11">⇒</span> (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R, which implies that R is transitive. Hence, R is an equivalence relation.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 45</span><span class="CharOverride-14"> </span>Determine which of the following binary operations on the set R are associative and which are commutative.</p>
			<p class="Remark-tab">	(a)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = 1<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>&#160; &#160;<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> <span class="CharOverride-11">∈</span> R &#160; &#160; &#160;(b)  <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> =<img class="_idGenObjectAttribute-48" src="../Images/109.png" alt=""/>&#160; &#160;<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/> <span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> <span class="CharOverride-11">∈</span> R</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span></p>
			<p class="Remarks ParaOverride-28">	(a)	Clearly, by definition <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span> = 1, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> <span class="CharOverride-11">∈</span> R. Also <br/>(<span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span>) <span class="CharOverride-11">∗</span> <span class="CharOverride-10">c = </span>(1 <span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span>) =1 and <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> </span>(<span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span>) = <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> (1) = 1,<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>&#160; &#160;<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span> <span class="CharOverride-11">∈</span> R. Hence R is both associative and commutative.</p>
			<p class="Body-Text ParaOverride-36">	(b)	<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> =<img class="_idGenObjectAttribute-49" src="../Images/113.png" alt=""/>&#160; &#160;= <span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span>, shows that <span class="CharOverride-11">∗</span> is commutative. Further,</p>
			<p class="Body-Text ParaOverride-10">	(<span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span>) <span class="CharOverride-11">∗</span> <span class="CharOverride-10">c </span>=<img class="_idGenObjectAttribute-7" src="../Images/114.png" alt=""/>&#160;	<span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span>.</p>
			<p class="Body-Text ParaOverride-10">	=<img class="_idGenObjectAttribute-50" src="../Images/115.png" alt=""/>&#160;	.</p>
			<p class="Body-Text ParaOverride-15">	But	<span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> (<span class="CharOverride-10">b </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span>) =<img class="_idGenObjectAttribute-51" src="../Images/116.png" alt=""/>&#160;&#160;</p>
			<p class="Body-Text ParaOverride-15">		=<img class="_idGenObjectAttribute-52" src="../Images/117.png" alt=""/>&#160;in general.</p>
			<p class="Body-Text ParaOverride-5">	Hence, <span class="CharOverride-11">∗</span> is not associative. </p>
			<p class="Remarks"><span class="CharOverride-12">Example 46</span> Find the number of all one-one functions from set A = {1, 2, 3} to itself.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>One-one function from {1, 2, 3} to itself is simply a permutation on three symbols 1, 2, 3. Therefore, total number of one-one maps from {1, 2, 3} to itself is same as total number of permutations on three symbols 1, 2, 3 which is 3! = 6.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 4</span><span class="CharOverride-12">7</span> Let A = {1, 2, 3}. Then show that  the number of relations containing (1, 2) and (2, 3) which are reflexive and transitive but not symmetric is three.</p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>The smallest relation R<span class="CharOverride-16">1</span> containing (1, 2) and (2, 3) which is reflexive and transitive but not symmetric is {(1, 1), (2, 2), (3, 3), (1, 2), (2, 3), (1, 3)}. Now, if we add the pair (2, 1) to R<span class="CharOverride-16">1</span> to get R<span class="CharOverride-16">2</span>, then the relation R<span class="CharOverride-16">2</span> will be reflexive, transitive but not symmetric. Similarly, we can obtain R<span class="CharOverride-16">3</span> by adding (3, 2) to R<span class="CharOverride-16">1</span> to get the desired relation. However, we can not add two pairs (2, 1), (3, 2) or single pair (3, 1) to R<span class="CharOverride-16">1</span> at a time, as by doing so, we will be forced to add the remaining pair in order to maintain transitivity and in the process, the relation will become symmetric also which is not required. Thus, the total number of desired relations is three.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 48</span><span class="CharOverride-14"> </span>Show that the number of equivalence relation in the set {1, 2, 3} containing (1, 2) and (2, 1) is two. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>The smallest equivalence relation R<span class="CharOverride-16">1</span> containing (1, 2) and (2, 1) is {(1, 1), (2, 2), (3, 3), (1, 2), (2, 1)}. Now we are left with only 4 pairs namely (2, 3), (3, 2), (1, 3) and (3, 1). If we add any one, say (2, 3) to R<span class="CharOverride-16">1</span>, then for symmetry we must add (3, 2) also and now for transitivity we are forced to add (1, 3) and (3, 1). Thus, the only equivalence relation bigger than R<span class="CharOverride-16">1</span> is the universal relation. This shows that the total number of equivalence relations containing (1, 2) and (2, 1) is two.</p>
			<p class="Remarks"><span class="CharOverride-12">Example 49</span><span class="CharOverride-14"> </span>Show that the number of binary operations on {1, 2} having 1 as identity and having 2 as the inverse of 2 is exactly one. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>A binary operation <span class="CharOverride-11">∗</span><span class="CharOverride-14"> </span>on {1, 2} is a function from {1, 2} × {1, 2} to {1, 2}, i.e., a function from {(1, 1), (1, 2), (2, 1), (2, 2)} <span class="CharOverride-11">→</span> {1, 2}. Since 1 is the identity for the desired binary operation <span class="CharOverride-11">∗</span>, <span class="CharOverride-11">∗ (1, 1) = 1, ∗</span> (1, 2) = 2, <span class="CharOverride-11">∗ </span>(2, 1) = 2 and the only choice left is for the pair (2, 2). Since 2 is the inverse of 2, i.e., <span class="CharOverride-11">∗ </span>(2, 2) must be equal to 1. Thus, the number of desired binary operation is only one.</p>
			<p class="Remarks ParaOverride-29"><span class="CharOverride-12">Example 50 </span>Consider the identity function I<span class="CharOverride-24">N</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> defined as I<span class="CharOverride-24">N</span> (<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span> <img class="_idGenObjectAttribute-51" src="../Images/119.png" alt=""/><span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">N</span>. Show that although I<span class="CharOverride-24">N</span> is onto but I<span class="CharOverride-24">N</span> + I<span class="CharOverride-24">N</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> defined as </p>
			<p class="Remarks ParaOverride-23">(I<span class="CharOverride-24">N</span> + I<span class="CharOverride-24">N</span>) (<span class="CharOverride-10">x</span>) = I<span class="CharOverride-24">N</span> (<span class="CharOverride-10">x</span>) + I<span class="CharOverride-24">N</span> (<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span> + <span class="CharOverride-10">x</span> = 2<span class="CharOverride-10">x</span> is not onto. </p>
			<p class="Remarks"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Clearly I<span class="CharOverride-24">N</span> is onto. But I<span class="CharOverride-24">N</span> + I<span class="CharOverride-24">N</span> is not onto, as we can find an element 3 in the co-domain <span class="CharOverride-14">N</span> such that there does not exist any <span class="CharOverride-10">x</span> in the domain <span class="CharOverride-14">N</span> with <br/>(I<span class="CharOverride-24">N</span> + I<span class="CharOverride-24">N</span>) (<span class="CharOverride-10">x</span>) = 2<span class="CharOverride-10">x</span> = 3.</p>
			<p class="Remarks ParaOverride-26"><span class="CharOverride-12">Example 51</span> Consider a function <span class="CharOverride-10">f</span> : <img class="_idGenObjectAttribute-51" src="../Images/119.png" alt=""/>given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = sin <span class="CharOverride-10">x</span> and <span class="CharOverride-10"><br/>g</span> : <img class="_idGenObjectAttribute-53" src="../Images/121.png" alt=""/>given by <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) = cos <span class="CharOverride-10">x</span>. Show that <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> are one-one, but <span class="CharOverride-10">f</span> + <span class="CharOverride-10">g</span> is not one-one.</p>
			<p class="Remarks ParaOverride-26"><span class="CharOverride-12">Solution</span><span class="CharOverride-14"> </span>Since for any two distinct elements <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> and <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> in <img class="_idGenObjectAttribute-54" src="../Images/122.png" alt=""/>, sin <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> <span class="CharOverride-11">≠</span> sin <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> and  cos <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> <span class="CharOverride-11">≠</span> cos <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>, both <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> must be one-one. But (<span class="CharOverride-10">f</span> + <span class="CharOverride-10">g</span>) (0) = sin 0 + cos 0 = 1 and (<span class="CharOverride-10">f</span> + <span class="CharOverride-10">g</span>)<img class="_idGenObjectAttribute-55" src="../Images/123.png" alt=""/> = <img class="_idGenObjectAttribute-56" src="../Images/124.png" alt=""/>. Therefore, <span class="CharOverride-10">f</span> + <span class="CharOverride-10">g</span> is not one-one. </p>
			<p class="micellaneous"><span class="CharOverride-8"><br/></span></p>
<h3 class="micellaneous" id="sigil_toc_id_14"><span class="CharOverride-8">Miscellaneous Exercise on Chapter 1</span></h3>
			<p class="option-3-aline">	<span class="CharOverride-12">1.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f </span>: <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = 10<span class="CharOverride-10">x</span> + 7. Find the function <span class="CharOverride-10">g </span>: <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> such that <span class="CharOverride-10">g</span> o<span class="CharOverride-10"> f</span> = <span class="CharOverride-10">f</span> o <span class="CharOverride-10">g</span> = 1<span class="CharOverride-24">R</span>. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">2.</span><span class="CharOverride-14">	</span>Let <span class="CharOverride-10">f </span>: W <span class="CharOverride-11">→</span> W be defined as <span class="CharOverride-10">f</span>(<span class="CharOverride-10">n</span>) = <span class="CharOverride-10">n</span> – 1, if <span class="CharOverride-10">n</span> is odd and <span class="CharOverride-10">f</span>(<span class="CharOverride-10">n</span>) = <span class="CharOverride-10">n</span> + 1, if <span class="CharOverride-10">n</span> is even. Show that <span class="CharOverride-10">f</span> is invertible. Find the inverse of <span class="CharOverride-10">f</span>. Here, W is the set of all whole numbers.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">3.</span><span class="CharOverride-14">	</span>If <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> is defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span> – 3<span class="CharOverride-10">x</span> + 2, find <span class="CharOverride-10">f</span> (<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>)).</p>
			<p class="option-3-aline">	<span class="CharOverride-12">4.</span><span class="CharOverride-14">	</span>Show that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> {<span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span> : – 1 &lt; <span class="CharOverride-10">x</span> &lt; 1} defined by <img class="_idGenObjectAttribute-57" src="../Images/125.png" alt=""/>, <span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span> is one one and onto function. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">5.</span><span class="CharOverride-14">	</span>Show that the function <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> given by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">3</span> is injective.</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">6.</span><span class="CharOverride-14">	</span>Give examples of two functions <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">Z</span> and <span class="CharOverride-10">g</span> : <span class="CharOverride-14">Z</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">Z</span> such that <span class="CharOverride-10">g </span>o <span class="CharOverride-10">f</span> is injective but <span class="CharOverride-10">g</span> is not injective. </p>
			<p class="option-3-aline">		(Hint : Consider <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span> and <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) = |<span class="CharOverride-10">x</span>|).</p>
			<p class="option-3-aline"><span class="CharOverride-14">	</span><span class="CharOverride-12">7.</span>	Give examples of two functions <span class="CharOverride-10">f</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> and <span class="CharOverride-10">g</span> : <span class="CharOverride-14">N</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">N</span> such that <span class="CharOverride-10">g</span> o<span class="CharOverride-10"> f</span> is onto but <span class="CharOverride-10">f</span> is not onto. </p>
			<p class="option-3-aline">		(Hint : Consider <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span> + 1 and <span class="CharOverride-10"><img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/></span></p>
			<p class="option-3-aline">	<span class="CharOverride-12">8.</span><span class="CharOverride-14">	</span>Given a non empty set X, consider P(X) which is the set of all subsets of X. Define the relation R in P(X) as follows:</p>
			<p class="option-3-aline">		For subsets A, B in P(X), ARB if and only if A <span class="CharOverride-11">⊂</span> B. Is R an equivalence relation on P(X)? Justify your answer. </p>
			<p class="option-3-aline">	<span class="CharOverride-12">9.</span><span class="CharOverride-14">	</span>Given a non-empty set X, consider the binary operation <span class="CharOverride-11">∗</span> : P(X) × P(X) <span class="CharOverride-11">→</span> P(X) given by A <span class="CharOverride-11">∗</span> B = A <span class="CharOverride-11">∩</span> B <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>A, B in P(X), where P(X) is the power set of X. Show that X is the identity element for this operation and X is the only invertible element in P(X) with respect to the operation <span class="CharOverride-11">∗</span>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">10.</span><span class="CharOverride-14">	</span>Find the number of all onto functions from the set {1, 2, 3, ... , <span class="CharOverride-10">n</span>} to itself.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">11.</span><span class="CharOverride-14">	</span>Let S = {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>} and T = {1, 2, 3}. Find F<span class="CharOverride-19">–1</span> of the following functions F from S to T, if it exists.</p>
			<p class="option--i-----ii-">	(i)	F = {(<span class="CharOverride-10">a</span>, 3), (<span class="CharOverride-10">b</span>, 2), (<span class="CharOverride-10">c</span>, 1)}	(ii)	F = {(<span class="CharOverride-10">a</span>, 2), (<span class="CharOverride-10">b</span>, 1), (<span class="CharOverride-10">c</span>, 1)}</p>
			<p class="option-3-aline">	<span class="CharOverride-12">12.</span><span class="CharOverride-14">	</span>Consider the binary operations <span class="CharOverride-11">∗</span> : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> and o : <span class="CharOverride-14">R</span> × <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> defined as <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span><span class="CharOverride-10">b</span> = |<span class="CharOverride-10">a</span> – <span class="CharOverride-10">b</span>| and <span class="CharOverride-10">a </span>o<span class="CharOverride-10"> b</span> = <span class="CharOverride-10">a</span>, <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>, <span class="CharOverride-10">b </span><span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span>. Show that <span class="CharOverride-11">∗</span> is commutative but not associative, o is associative but not commutative. Further, show that <img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/><span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span> <span class="CharOverride-11">∈</span> <span class="CharOverride-14">R</span>, <span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span> (<span class="CharOverride-10">b </span>o<span class="CharOverride-10"> c</span>) = (<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> b</span>) o (<span class="CharOverride-10">a</span> <span class="CharOverride-11">∗</span><span class="CharOverride-10"> c</span>). [If it is so, we say that the operation <span class="CharOverride-11">∗</span> distributes over the operation o]. Does o distribute over <span class="CharOverride-11">∗</span>? Justify your answer.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">13.</span><span class="CharOverride-14">	</span>Given a non-empty set X, let <span class="CharOverride-11">∗</span> : P(X) × P(X) <span class="CharOverride-11">→</span> P(X) be defined as A * B = (A – B) <span class="CharOverride-11">∪</span> (B – A),<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>&#160; A, B <span class="CharOverride-11">∈</span> P(X). Show that the empty set <span class="CharOverride-11">φ</span> is the identity for the operation <span class="CharOverride-11">∗</span> and all the elements A of P(X) are invertible with&#160;</p>
<p class="option-3-aline">A<span class="CharOverride-19">–1</span> = A. (Hint : (A – <span class="CharOverride-11">φ</span>) <span class="CharOverride-11">∪</span> (<span class="CharOverride-11">φ</span> – A) = A and (A – A) <span class="CharOverride-11">∪</span> (A – A) = A <span class="CharOverride-11">∗</span> A = <span class="CharOverride-11">φ</span>).</p>
			<p class="option-3-aline ParaOverride-10"><span class="CharOverride-14">	</span><span class="CharOverride-12">14.</span><span class="CharOverride-14">	</span>Define a binary operation <span class="CharOverride-11">∗ </span>on the set {0, 1, 2, 3, 4, 5} as</p>
			<p class="option-3-aline ParaOverride-32">		<img class="_idGenObjectAttribute-58" src="../Images/130.png" alt=""/></p>
			<p class="option-3-aline">		Show that zero is the identity for this operation and each element <span class="CharOverride-10">a </span><span class="CharOverride-11">≠</span><span class="CharOverride-10"> 0</span> of the set is invertible with 6 – <span class="CharOverride-10">a</span> being the inverse of <span class="CharOverride-10">a</span>.</p>
			<p class="option-3-aline">	<span class="CharOverride-12">15.</span><span class="CharOverride-14">	</span>Let A = {– 1, 0, 1, 2}, B = {– 4, – 2, 0, 2} and <span class="CharOverride-10">f</span>, <span class="CharOverride-10">g</span> : A <span class="CharOverride-11">→</span> B be functions defined by <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">x</span><span class="CharOverride-19">2</span> – <span class="CharOverride-10">x</span>, <span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> A and<img class="_idGenObjectAttribute-59" src="../Images/131.png" alt=""/>&#160; <span class="CharOverride-10">&#160;x</span> <span class="CharOverride-11">∈</span> A. Are <span class="CharOverride-10">f</span> and <span class="CharOverride-10">g</span> equal? Justify your answer. (Hint: One may note that two functions <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B and&#160;</p>
<p class="option-3-aline"><span class="CharOverride-10">g</span> : A <span class="CharOverride-11">→</span> B such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10">a</span>) = <span class="CharOverride-10">g</span>(<span class="CharOverride-10">a</span>)<img class="_idGenObjectAttribute-8" src="../Images/7.png" alt=""/>&#160; <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> A, are called equal functions).</p>
			<p class="option-3-aline">	<span class="CharOverride-12">16.</span><span class="CharOverride-14">	</span>Let A = {1, 2, 3}. Then number of relations containing (1, 2) and (1, 3) which are reflexive and symmetric but not transitive is</p>
			<p class="Opt-4-A-D">	(A)	1 	(B)	2	(C)	3	(D)	4</p>
			<p class="option-3-aline">	<span class="CharOverride-12">17.</span><span class="CharOverride-14">	</span>Let A = {1, 2, 3}. Then number of equivalence relations containing (1, 2) is</p>
			<p class="Opt-4-A-D">	(A)	1 	(B)	2	(C)	3	(D)	4</p>
			<p class="option-3-aline">	<span class="CharOverride-12">18.</span>	Let <span class="CharOverride-10">f</span> : <span class="CharOverride-14">R</span> <span class="CharOverride-11">→</span> <span class="CharOverride-14">R</span> be the Signum Function defined as</p>
			<p class="option-3-aline ParaOverride-12"><span class="CharOverride-10"><img class="_idGenObjectAttribute-60" src="../Images/133.png" alt=""/></span></p>
			<p class="option-3-aline"><span class="CharOverride-10">		</span>and <span class="CharOverride-10">g</span> : R <span class="CharOverride-11">→</span> R<span class="CharOverride-10"> </span>be the Greatest Integer Function given by <span class="CharOverride-10">g</span>(<span class="CharOverride-10">x</span>) = [<span class="CharOverride-10">x</span>], where [<span class="CharOverride-10">x</span>] is greatest integer less than or equal to <span class="CharOverride-10">x</span>. Then, does <span class="CharOverride-10">fog</span> and <span class="CharOverride-10">gof</span> coincide in (0, 1]?</p>
			<p class="option-3-aline">	<span class="CharOverride-12">19.</span>	Number of binary operations on the set {<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>} are </p>
			<p class="Opt-4-A-D ParaOverride-10">	(A)	10 &#160; (B)	16 &#160; (C)	20 &#160; (D )	8</p>
			<p class="micellaneous"><span class="CharOverride-8"><br/></span></p>
<h3 class="micellaneous" style="text-align: center;" id="sigil_toc_id_15"><span class="CharOverride-8">Summary</span></h3>
			<p class="Body-Text ParaOverride-5">In this chapter, we studied different types of relations and equivalence relation, composition of functions, invertible functions and binary operations. The main features of this chapter are as follows: </p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Empty relation</span> is the relation R in X given by R = <span class="CharOverride-11">φ</span> <span class="CharOverride-11">⊂</span> X × X.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Universal relation</span> is the relation R in X given by R = X × X.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Reflexive relation</span> R in X is a relation with (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R <img class="_idGenObjectAttribute-8" src="../Images/135.png" alt=""/><span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> X.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Symmetric relation</span> R in X is a relation satisfying (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R implies (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">a</span>) <span class="CharOverride-11">∈</span> R.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Transitive relation</span> R in X is a relation satisfying (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∈</span> R and (<span class="CharOverride-10">b</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R implies that (<span class="CharOverride-10">a</span>, <span class="CharOverride-10">c</span>) <span class="CharOverride-11">∈</span> R.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Equivalence relation</span> R in X is a relation which is reflexive, symmetric and transitive.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	<span class="CharOverride-10">Equivalence class</span> [<span class="CharOverride-10">a</span>] containing <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> X for an equivalence relation R in X is the subset of X containing all elements <span class="CharOverride-10">b</span> related to <span class="CharOverride-10">a</span>.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is <span class="CharOverride-10">one-one</span> (or <span class="CharOverride-10">injective</span>) if </p>
			<p class="sumarry-tab-1 ParaOverride-7">	<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>) = <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span><span class="CharOverride-16">2</span>) <span class="CharOverride-11">⇒</span> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span> = <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> <img class="_idGenObjectAttribute-8" src="../Images/135.png" alt=""/> <span class="CharOverride-10">x</span><span class="CharOverride-16">1</span>, <span class="CharOverride-10">x</span><span class="CharOverride-16">2</span> <span class="CharOverride-11">∈</span> X.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is <span class="CharOverride-10">onto</span> (or <span class="CharOverride-10">surjective</span>) if given any <span class="CharOverride-10">y</span> <span class="CharOverride-11">∈</span> Y, <span class="CharOverride-11">∃</span> <span class="CharOverride-10">x</span> <span class="CharOverride-11">∈</span> X such that <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">y</span>.</p>
			<p class="sumarry-tab-1 ParaOverride-37"><span class="CharOverride-28">®</span>	A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is <span class="CharOverride-10">one-one and onto</span> (or <span class="CharOverride-10">bijective</span>), if <span class="CharOverride-10">f</span> is both one-one and onto.</p>
			<p class="sumarry-tab-1 ParaOverride-37"><span class="CharOverride-28">®</span>	The <span class="CharOverride-10">composition</span> of functions <span class="CharOverride-10">f</span> : A <span class="CharOverride-11">→</span> B and <span class="CharOverride-10">g</span> : B <span class="CharOverride-11">→</span> C is the function <span class="CharOverride-10">gof</span> : A <span class="CharOverride-11">→</span> C given by <span class="CharOverride-10">go</span><span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>) = <span class="CharOverride-10">g</span>(<span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>))<img class="_idGenObjectAttribute-8" src="../Images/135.png" alt=""/><span class="CharOverride-10"> x</span> <span class="CharOverride-11">∈</span> A.</p>
			<p class="sumarry-tab-1 ParaOverride-37"><span class="CharOverride-28">®</span>	A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is <span class="CharOverride-10">invertible</span> if <span class="CharOverride-11">∃</span> <span class="CharOverride-10">g</span> : Y <span class="CharOverride-11">→</span> X such that <span class="CharOverride-10">gof</span> = I<span class="CharOverride-16">X</span> and <span class="CharOverride-10">fog</span> = I<span class="CharOverride-16">Y</span>.</p>
			<p class="sumarry-tab-1"><span class="CharOverride-28">®</span>	A function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> Y is <span class="CharOverride-10">invertible</span> if and only if <span class="CharOverride-10">f</span> is one-one and onto.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	Given a finite set X, a function <span class="CharOverride-10">f</span> : X <span class="CharOverride-11">→</span> X is one-one (respectively onto) if and only if <span class="CharOverride-10">f</span> is onto (respectively one-one). This is the characteristic property of a finite set. This is not true for infinite set</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	A <span class="CharOverride-13">binary operation</span><span class="CharOverride-14"> </span><span class="CharOverride-11">∗</span> on a set A is a function <span class="CharOverride-11">∗</span> from A × A to A.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	An element <span class="CharOverride-10">e</span> <span class="CharOverride-11">∈</span> X is the <span class="CharOverride-13">identity</span> element for binary operation <span class="CharOverride-11">∗</span> : X × X <span class="CharOverride-11">→</span> X,  if <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">e</span> = <span class="CharOverride-10">a</span> = <span class="CharOverride-10">e</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span> <img class="_idGenObjectAttribute-8" src="../Images/135.png" alt=""/><span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> X.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	An element <span class="CharOverride-10">a</span> <span class="CharOverride-11">∈</span> X is <span class="CharOverride-13">invertible</span> for binary operation <span class="CharOverride-11">∗</span> : X × X <span class="CharOverride-11">→</span> X,  if <span class="CharOverride-11"><br/></span>there exists <span class="CharOverride-10">b</span> <span class="CharOverride-11">∈</span> X such that <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">e</span> = <span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span> where, <span class="CharOverride-10">e</span> is the identity for the binary operation <span class="CharOverride-11">∗</span>. The element <span class="CharOverride-10">b</span> is called <span class="CharOverride-13">inverse</span><span class="CharOverride-14"> </span>of <span class="CharOverride-10">a</span> and is denoted by <span class="CharOverride-10">a</span><span class="CharOverride-19">–1</span>.</p>
			<p class="sumarry-tab-1 ParaOverride-7"><span class="CharOverride-28">®</span>	An operation <span class="CharOverride-11">∗</span> on X is <span class="CharOverride-13">commutative</span> if <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span> = <span class="CharOverride-10">b</span> <span class="CharOverride-11">∗</span> <span class="CharOverride-10">a</span> <img class="_idGenObjectAttribute-8" src="../Images/135.png" alt=""/><span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span> in X.</p>
			<p class="sumarry-tab-1 ParaOverride-10"><span class="CharOverride-28">®</span>	An operation <span class="CharOverride-11">∗</span> on X is <span class="CharOverride-13">associative</span> if (<span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">b</span>) <span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span> = <span class="CharOverride-10">a </span><span class="CharOverride-11">∗</span> (<span class="CharOverride-10">b </span><span class="CharOverride-11">∗</span> <span class="CharOverride-10">c</span>)<span class="CharOverride-10">a</span>, <span class="CharOverride-10">b</span>,<span class="CharOverride-10"> c </span>in X.</p>
			<h3 class="micellaneous ParaOverride-38" style="text-align: center;" id="sigil_toc_id_16"><span class="CharOverride-8"><br/></span></h3>
<h3 class="micellaneous ParaOverride-38" style="text-align: center;" id="sigil_toc_id_17"><span class="CharOverride-8">Historical Note</span></h3>
			<p class="Historical-Note">The concept of function has evolved over a long period of time starting from  R. Descartes (1596-1650), who used the word ‘function’ in his manuscript “<span class="CharOverride-10">Geometrie</span>” in 1637 to mean some positive integral power <span class="CharOverride-10">x</span><span class="CharOverride-27">n</span> of a variable <span class="CharOverride-10">x</span> while studying geometrical curves like hyperbola, parabola and ellipse. James Gregory (1636-1675) in his work “ <span class="CharOverride-10">Vera Circuli et Hyperbolae Quadratura</span>” (1667) considered function as a quantity obtained from other quantities by successive use of algebraic operations or by any other operations. Later G. W. Leibnitz (1646-1716) in his manuscript “<span class="CharOverride-10">Methodus tangentium inversa, seu  de functionibus</span>” written in 1673 used the word ‘function’ to mean a quantity varying from point to point on a curve such as the coordinates of a point on the curve, the slope of the curve, the tangent and the normal to the curve at a point. However, in his manuscript “<span class="CharOverride-10">Historia</span>” (1714), Leibnitz used the word ‘function’ to mean quantities that depend on a variable. He was the first to use the phrase ‘function of <span class="CharOverride-10">x</span>’. John Bernoulli (1667-1748) used the notation <span class="CharOverride-11">φ</span><span class="CharOverride-10">x</span> for the first time in 1718 to indicate a function of <span class="CharOverride-10">x</span>. But the general adoption of symbols like <span class="CharOverride-10">f</span>, F, <span class="CharOverride-11">φ</span>, <span class="CharOverride-11">ψ</span> ... to represent functions was made by Leonhard Euler (1707-1783) in 1734 in the first part of his manuscript “<span class="CharOverride-10">Analysis Infinitorium</span>”. Later on, Joeph Louis Lagrange (1736-1813) published his manuscripts “<span class="CharOverride-10">Theorie des functions analytiques</span>” in 1793, where he discussed  about analytic function and used the notion <span class="CharOverride-10">f</span>(<span class="CharOverride-10">x</span>), F(<span class="CharOverride-10">x</span>), <span class="CharOverride-11">φ</span>(<span class="CharOverride-10">x</span>) etc. for different function of <span class="CharOverride-10">x</span>. Subsequently, Lejeunne Dirichlet <br/>(1805-1859) gave the definition of function which was being used till the set theoretic definition of function presently used, was given after set theory was developed by Georg Cantor (1845-1918). The set theoretic definition of function known to us presently is simply an abstraction of the definition given by Dirichlet in a rigorous manner.</p>
		</div>
</body>
</html>